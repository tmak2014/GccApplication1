
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000007d0  00800200  0000295c  000029f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000295c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000394  008009d0  008009d0  000031c0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000031c0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000160  00000000  00000000  0000321c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000004bb  00000000  00000000  0000337c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000270e  00000000  00000000  00003837  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ac6  00000000  00000000  00005f45  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000175e  00000000  00000000  00006a0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000684  00000000  00000000  0000816c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b17  00000000  00000000  000087f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000014fd  00000000  00000000  00009307  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000a804  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
       2:	00 00       	nop
       4:	84 c0       	rjmp	.+264    	; 0x10e <__bad_interrupt>
       6:	00 00       	nop
       8:	82 c0       	rjmp	.+260    	; 0x10e <__bad_interrupt>
       a:	00 00       	nop
       c:	80 c0       	rjmp	.+256    	; 0x10e <__bad_interrupt>
       e:	00 00       	nop
      10:	7e c0       	rjmp	.+252    	; 0x10e <__bad_interrupt>
      12:	00 00       	nop
      14:	7c c0       	rjmp	.+248    	; 0x10e <__bad_interrupt>
      16:	00 00       	nop
      18:	7a c0       	rjmp	.+244    	; 0x10e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	78 c0       	rjmp	.+240    	; 0x10e <__bad_interrupt>
      1e:	00 00       	nop
      20:	76 c0       	rjmp	.+236    	; 0x10e <__bad_interrupt>
      22:	00 00       	nop
      24:	74 c0       	rjmp	.+232    	; 0x10e <__bad_interrupt>
      26:	00 00       	nop
      28:	72 c0       	rjmp	.+228    	; 0x10e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	70 c0       	rjmp	.+224    	; 0x10e <__bad_interrupt>
      2e:	00 00       	nop
      30:	6e c0       	rjmp	.+220    	; 0x10e <__bad_interrupt>
      32:	00 00       	nop
      34:	6c c0       	rjmp	.+216    	; 0x10e <__bad_interrupt>
      36:	00 00       	nop
      38:	6a c0       	rjmp	.+212    	; 0x10e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	68 c0       	rjmp	.+208    	; 0x10e <__bad_interrupt>
      3e:	00 00       	nop
      40:	66 c0       	rjmp	.+204    	; 0x10e <__bad_interrupt>
      42:	00 00       	nop
      44:	64 c0       	rjmp	.+200    	; 0x10e <__bad_interrupt>
      46:	00 00       	nop
      48:	62 c0       	rjmp	.+196    	; 0x10e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	60 c0       	rjmp	.+192    	; 0x10e <__bad_interrupt>
      4e:	00 00       	nop
      50:	5e c0       	rjmp	.+188    	; 0x10e <__bad_interrupt>
      52:	00 00       	nop
      54:	5c c0       	rjmp	.+184    	; 0x10e <__bad_interrupt>
      56:	00 00       	nop
      58:	5a c0       	rjmp	.+180    	; 0x10e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	58 c0       	rjmp	.+176    	; 0x10e <__bad_interrupt>
      5e:	00 00       	nop
      60:	56 c0       	rjmp	.+172    	; 0x10e <__bad_interrupt>
      62:	00 00       	nop
      64:	24 c4       	rjmp	.+2120   	; 0x8ae <__vector_25>
      66:	00 00       	nop
      68:	52 c0       	rjmp	.+164    	; 0x10e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	50 c0       	rjmp	.+160    	; 0x10e <__bad_interrupt>
      6e:	00 00       	nop
      70:	4e c0       	rjmp	.+156    	; 0x10e <__bad_interrupt>
      72:	00 00       	nop
      74:	4c c0       	rjmp	.+152    	; 0x10e <__bad_interrupt>
      76:	00 00       	nop
      78:	4a c0       	rjmp	.+148    	; 0x10e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	48 c0       	rjmp	.+144    	; 0x10e <__bad_interrupt>
      7e:	00 00       	nop
      80:	46 c0       	rjmp	.+140    	; 0x10e <__bad_interrupt>
      82:	00 00       	nop
      84:	44 c0       	rjmp	.+136    	; 0x10e <__bad_interrupt>
      86:	00 00       	nop
      88:	42 c0       	rjmp	.+132    	; 0x10e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	40 c0       	rjmp	.+128    	; 0x10e <__bad_interrupt>
      8e:	00 00       	nop
      90:	13 c5       	rjmp	.+2598   	; 0xab8 <__vector_36>
      92:	00 00       	nop
      94:	3c c0       	rjmp	.+120    	; 0x10e <__bad_interrupt>
      96:	00 00       	nop
      98:	3a c0       	rjmp	.+116    	; 0x10e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	38 c0       	rjmp	.+112    	; 0x10e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	36 c0       	rjmp	.+108    	; 0x10e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	34 c0       	rjmp	.+104    	; 0x10e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	32 c0       	rjmp	.+100    	; 0x10e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	30 c0       	rjmp	.+96     	; 0x10e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	2e c0       	rjmp	.+92     	; 0x10e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	2c c0       	rjmp	.+88     	; 0x10e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	2a c0       	rjmp	.+84     	; 0x10e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	28 c0       	rjmp	.+80     	; 0x10e <__bad_interrupt>
      be:	00 00       	nop
      c0:	26 c0       	rjmp	.+76     	; 0x10e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	24 c0       	rjmp	.+72     	; 0x10e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	22 c0       	rjmp	.+68     	; 0x10e <__bad_interrupt>
	...

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d1 e2       	ldi	r29, 0x21	; 33
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	00 e0       	ldi	r16, 0x00	; 0
      da:	0c bf       	out	0x3c, r16	; 60

000000dc <__do_copy_data>:
      dc:	19 e0       	ldi	r17, 0x09	; 9
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	ec e5       	ldi	r30, 0x5C	; 92
      e4:	f9 e2       	ldi	r31, 0x29	; 41
      e6:	00 e0       	ldi	r16, 0x00	; 0
      e8:	0b bf       	out	0x3b, r16	; 59
      ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
      ec:	07 90       	elpm	r0, Z+
      ee:	0d 92       	st	X+, r0
      f0:	a0 3d       	cpi	r26, 0xD0	; 208
      f2:	b1 07       	cpc	r27, r17
      f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>

000000f6 <__do_clear_bss>:
      f6:	2d e0       	ldi	r18, 0x0D	; 13
      f8:	a0 ed       	ldi	r26, 0xD0	; 208
      fa:	b9 e0       	ldi	r27, 0x09	; 9
      fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
      fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
     100:	a4 36       	cpi	r26, 0x64	; 100
     102:	b2 07       	cpc	r27, r18
     104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
     106:	0e 94 be 0c 	call	0x197c	; 0x197c <main>
     10a:	0c 94 ac 14 	jmp	0x2958	; 0x2958 <_exit>

0000010e <__bad_interrupt>:
     10e:	78 cf       	rjmp	.-272    	; 0x0 <__vectors>

00000110 <dxl_get_result>:
     110:	80 91 00 02 	lds	r24, 0x0200
     114:	90 91 01 02 	lds	r25, 0x0201
     118:	08 95       	ret

0000011a <dxl_set_txpacket_id>:
     11a:	80 93 d2 09 	sts	0x09D2, r24
     11e:	08 95       	ret

00000120 <dxl_set_txpacket_instruction>:
     120:	80 93 d4 09 	sts	0x09D4, r24
     124:	08 95       	ret

00000126 <dxl_set_txpacket_parameter>:
     126:	fc 01       	movw	r30, r24
     128:	e0 53       	subi	r30, 0x30	; 48
     12a:	f6 4f       	sbci	r31, 0xF6	; 246
     12c:	65 83       	std	Z+5, r22	; 0x05
     12e:	08 95       	ret

00000130 <dxl_set_txpacket_length>:
     130:	80 93 d3 09 	sts	0x09D3, r24
     134:	08 95       	ret

00000136 <dxl_get_rxpacket_error>:
     136:	20 e0       	ldi	r18, 0x00	; 0
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	90 91 74 0a 	lds	r25, 0x0A74
     13e:	98 23       	and	r25, r24
     140:	11 f0       	breq	.+4      	; 0x146 <dxl_get_rxpacket_error+0x10>
     142:	21 e0       	ldi	r18, 0x01	; 1
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	c9 01       	movw	r24, r18
     148:	08 95       	ret

0000014a <dxl_get_rxpacket_length>:
     14a:	80 91 73 0a 	lds	r24, 0x0A73
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	08 95       	ret

00000152 <dxl_get_rxpacket_parameter>:
     152:	fc 01       	movw	r30, r24
     154:	e0 59       	subi	r30, 0x90	; 144
     156:	f5 4f       	sbci	r31, 0xF5	; 245
     158:	85 81       	ldd	r24, Z+5	; 0x05
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	08 95       	ret

0000015e <dxl_makeword>:
     15e:	36 2f       	mov	r19, r22
     160:	20 e0       	ldi	r18, 0x00	; 0
     162:	28 0f       	add	r18, r24
     164:	39 1f       	adc	r19, r25
     166:	c9 01       	movw	r24, r18
     168:	08 95       	ret

0000016a <dxl_get_lowbyte>:
     16a:	28 2f       	mov	r18, r24
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	c9 01       	movw	r24, r18
     170:	08 95       	ret

00000172 <dxl_get_highbyte>:
     172:	80 70       	andi	r24, 0x00	; 0
     174:	89 2f       	mov	r24, r25
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	08 95       	ret

0000017a <dxl_rx_packet>:
     17a:	0f 93       	push	r16
     17c:	1f 93       	push	r17
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	80 91 b8 0a 	lds	r24, 0x0AB8
     186:	90 91 b9 0a 	lds	r25, 0x0AB9
     18a:	89 2b       	or	r24, r25
     18c:	09 f4       	brne	.+2      	; 0x190 <dxl_rx_packet+0x16>
     18e:	b8 c0       	rjmp	.+368    	; 0x300 <dxl_rx_packet+0x186>
     190:	80 91 d2 09 	lds	r24, 0x09D2
     194:	8e 3f       	cpi	r24, 0xFE	; 254
     196:	09 f4       	brne	.+2      	; 0x19a <dxl_rx_packet+0x20>
     198:	a9 c0       	rjmp	.+338    	; 0x2ec <dxl_rx_packet+0x172>
     19a:	80 91 00 02 	lds	r24, 0x0200
     19e:	90 91 01 02 	lds	r25, 0x0201
     1a2:	89 2b       	or	r24, r25
     1a4:	29 f4       	brne	.+10     	; 0x1b0 <dxl_rx_packet+0x36>
     1a6:	10 92 b7 0a 	sts	0x0AB7, r1
     1aa:	86 e0       	ldi	r24, 0x06	; 6
     1ac:	80 93 b6 0a 	sts	0x0AB6, r24
     1b0:	80 91 b7 0a 	lds	r24, 0x0AB7
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	60 91 b6 0a 	lds	r22, 0x0AB6
     1ba:	70 e0       	ldi	r23, 0x00	; 0
     1bc:	68 1b       	sub	r22, r24
     1be:	79 0b       	sbc	r23, r25
     1c0:	80 59       	subi	r24, 0x90	; 144
     1c2:	95 4f       	sbci	r25, 0xF5	; 245
     1c4:	49 d3       	rcall	.+1682   	; 0x858 <dxl_hal_rx>
     1c6:	90 91 b7 0a 	lds	r25, 0x0AB7
     1ca:	98 0f       	add	r25, r24
     1cc:	90 93 b7 0a 	sts	0x0AB7, r25
     1d0:	80 91 b6 0a 	lds	r24, 0x0AB6
     1d4:	98 17       	cp	r25, r24
     1d6:	18 f4       	brcc	.+6      	; 0x1de <dxl_rx_packet+0x64>
     1d8:	4a d2       	rcall	.+1172   	; 0x66e <dxl_hal_timeout>
     1da:	01 97       	sbiw	r24, 0x01	; 1
     1dc:	71 f0       	breq	.+28     	; 0x1fa <dxl_rx_packet+0x80>
     1de:	70 91 b7 0a 	lds	r23, 0x0AB7
     1e2:	47 2f       	mov	r20, r23
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	da 01       	movw	r26, r20
     1e8:	11 97       	sbiw	r26, 0x01	; 1
     1ea:	8a 01       	movw	r16, r20
     1ec:	02 50       	subi	r16, 0x02	; 2
     1ee:	10 40       	sbci	r17, 0x00	; 0
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	ed 01       	movw	r28, r26
     1f4:	c0 59       	subi	r28, 0x90	; 144
     1f6:	d5 4f       	sbci	r29, 0xF5	; 245
     1f8:	18 c0       	rjmp	.+48     	; 0x22a <dxl_rx_packet+0xb0>
     1fa:	80 91 b7 0a 	lds	r24, 0x0AB7
     1fe:	88 23       	and	r24, r24
     200:	09 f0       	breq	.+2      	; 0x204 <dxl_rx_packet+0x8a>
     202:	71 c0       	rjmp	.+226    	; 0x2e6 <dxl_rx_packet+0x16c>
     204:	86 e0       	ldi	r24, 0x06	; 6
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	73 c0       	rjmp	.+230    	; 0x2f0 <dxl_rx_packet+0x176>
     20a:	f9 01       	movw	r30, r18
     20c:	e0 59       	subi	r30, 0x90	; 144
     20e:	f5 4f       	sbci	r31, 0xF5	; 245
     210:	80 81       	ld	r24, Z
     212:	8f 3f       	cpi	r24, 0xFF	; 255
     214:	19 f4       	brne	.+6      	; 0x21c <dxl_rx_packet+0xa2>
     216:	81 81       	ldd	r24, Z+1	; 0x01
     218:	8f 3f       	cpi	r24, 0xFF	; 255
     21a:	61 f0       	breq	.+24     	; 0x234 <dxl_rx_packet+0xba>
     21c:	20 17       	cp	r18, r16
     21e:	31 07       	cpc	r19, r17
     220:	19 f4       	brne	.+6      	; 0x228 <dxl_rx_packet+0xae>
     222:	88 81       	ld	r24, Y
     224:	8f 3f       	cpi	r24, 0xFF	; 255
     226:	31 f0       	breq	.+12     	; 0x234 <dxl_rx_packet+0xba>
     228:	6f 5f       	subi	r22, 0xFF	; 255
     22a:	26 2f       	mov	r18, r22
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	2a 17       	cp	r18, r26
     230:	3b 07       	cpc	r19, r27
     232:	5c f3       	brlt	.-42     	; 0x20a <dxl_rx_packet+0x90>
     234:	66 23       	and	r22, r22
     236:	a1 f0       	breq	.+40     	; 0x260 <dxl_rx_packet+0xe6>
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	42 1b       	sub	r20, r18
     23c:	53 0b       	sbc	r21, r19
     23e:	08 c0       	rjmp	.+16     	; 0x250 <dxl_rx_packet+0xd6>
     240:	e0 59       	subi	r30, 0x90	; 144
     242:	f5 4f       	sbci	r31, 0xF5	; 245
     244:	df 01       	movw	r26, r30
     246:	a2 0f       	add	r26, r18
     248:	b3 1f       	adc	r27, r19
     24a:	8c 91       	ld	r24, X
     24c:	80 83       	st	Z, r24
     24e:	9f 5f       	subi	r25, 0xFF	; 255
     250:	e9 2f       	mov	r30, r25
     252:	f0 e0       	ldi	r31, 0x00	; 0
     254:	e4 17       	cp	r30, r20
     256:	f5 07       	cpc	r31, r21
     258:	9c f3       	brlt	.-26     	; 0x240 <dxl_rx_packet+0xc6>
     25a:	76 1b       	sub	r23, r22
     25c:	70 93 b7 0a 	sts	0x0AB7, r23
     260:	20 91 b7 0a 	lds	r18, 0x0AB7
     264:	80 91 b6 0a 	lds	r24, 0x0AB6
     268:	28 17       	cp	r18, r24
     26a:	28 f1       	brcs	.+74     	; 0x2b6 <dxl_rx_packet+0x13c>
     26c:	90 91 d2 09 	lds	r25, 0x09D2
     270:	80 91 72 0a 	lds	r24, 0x0A72
     274:	98 17       	cp	r25, r24
     276:	b9 f5       	brne	.+110    	; 0x2e6 <dxl_rx_packet+0x16c>
     278:	60 91 73 0a 	lds	r22, 0x0A73
     27c:	6c 5f       	subi	r22, 0xFC	; 252
     27e:	60 93 b6 0a 	sts	0x0AB6, r22
     282:	26 17       	cp	r18, r22
     284:	88 f4       	brcc	.+34     	; 0x2a8 <dxl_rx_packet+0x12e>
     286:	82 2f       	mov	r24, r18
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	70 e0       	ldi	r23, 0x00	; 0
     28c:	68 1b       	sub	r22, r24
     28e:	79 0b       	sbc	r23, r25
     290:	80 59       	subi	r24, 0x90	; 144
     292:	95 4f       	sbci	r25, 0xF5	; 245
     294:	e1 d2       	rcall	.+1474   	; 0x858 <dxl_hal_rx>
     296:	90 91 b7 0a 	lds	r25, 0x0AB7
     29a:	98 0f       	add	r25, r24
     29c:	90 93 b7 0a 	sts	0x0AB7, r25
     2a0:	80 91 b6 0a 	lds	r24, 0x0AB6
     2a4:	98 17       	cp	r25, r24
     2a6:	38 f0       	brcs	.+14     	; 0x2b6 <dxl_rx_packet+0x13c>
     2a8:	80 91 73 0a 	lds	r24, 0x0A73
     2ac:	a8 2f       	mov	r26, r24
     2ae:	b0 e0       	ldi	r27, 0x00	; 0
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	0c c0       	rjmp	.+24     	; 0x2ce <dxl_rx_packet+0x154>
     2b6:	85 e0       	ldi	r24, 0x05	; 5
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	90 93 01 02 	sts	0x0201, r25
     2be:	80 93 00 02 	sts	0x0200, r24
     2c2:	1e c0       	rjmp	.+60     	; 0x300 <dxl_rx_packet+0x186>
     2c4:	e0 59       	subi	r30, 0x90	; 144
     2c6:	f5 4f       	sbci	r31, 0xF5	; 245
     2c8:	82 81       	ldd	r24, Z+2	; 0x02
     2ca:	98 0f       	add	r25, r24
     2cc:	2f 5f       	subi	r18, 0xFF	; 255
     2ce:	e2 2f       	mov	r30, r18
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	ae 17       	cp	r26, r30
     2d4:	bf 07       	cpc	r27, r31
     2d6:	b4 f7       	brge	.-20     	; 0x2c4 <dxl_rx_packet+0x14a>
     2d8:	a0 59       	subi	r26, 0x90	; 144
     2da:	b5 4f       	sbci	r27, 0xF5	; 245
     2dc:	90 95       	com	r25
     2de:	13 96       	adiw	r26, 0x03	; 3
     2e0:	8c 91       	ld	r24, X
     2e2:	89 17       	cp	r24, r25
     2e4:	19 f0       	breq	.+6      	; 0x2ec <dxl_rx_packet+0x172>
     2e6:	87 e0       	ldi	r24, 0x07	; 7
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <dxl_rx_packet+0x176>
     2ec:	81 e0       	ldi	r24, 0x01	; 1
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	90 93 01 02 	sts	0x0201, r25
     2f4:	80 93 00 02 	sts	0x0200, r24
     2f8:	10 92 b9 0a 	sts	0x0AB9, r1
     2fc:	10 92 b8 0a 	sts	0x0AB8, r1
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	1f 91       	pop	r17
     306:	0f 91       	pop	r16
     308:	08 95       	ret

0000030a <dxl_tx_packet>:
     30a:	1f 93       	push	r17
     30c:	80 91 b8 0a 	lds	r24, 0x0AB8
     310:	90 91 b9 0a 	lds	r25, 0x0AB9
     314:	01 97       	sbiw	r24, 0x01	; 1
     316:	09 f4       	brne	.+2      	; 0x31a <dxl_tx_packet+0x10>
     318:	5d c0       	rjmp	.+186    	; 0x3d4 <dxl_tx_packet+0xca>
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	90 93 b9 0a 	sts	0x0AB9, r25
     322:	80 93 b8 0a 	sts	0x0AB8, r24
     326:	80 91 d3 09 	lds	r24, 0x09D3
     32a:	89 39       	cpi	r24, 0x99	; 153
     32c:	40 f4       	brcc	.+16     	; 0x33e <dxl_tx_packet+0x34>
     32e:	90 91 d4 09 	lds	r25, 0x09D4
     332:	89 2f       	mov	r24, r25
     334:	81 50       	subi	r24, 0x01	; 1
     336:	86 30       	cpi	r24, 0x06	; 6
     338:	28 f0       	brcs	.+10     	; 0x344 <dxl_tx_packet+0x3a>
     33a:	93 38       	cpi	r25, 0x83	; 131
     33c:	19 f0       	breq	.+6      	; 0x344 <dxl_tx_packet+0x3a>
     33e:	84 e0       	ldi	r24, 0x04	; 4
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	2f c0       	rjmp	.+94     	; 0x3a2 <dxl_tx_packet+0x98>
     344:	8f ef       	ldi	r24, 0xFF	; 255
     346:	80 93 d0 09 	sts	0x09D0, r24
     34a:	80 93 d1 09 	sts	0x09D1, r24
     34e:	80 91 d3 09 	lds	r24, 0x09D3
     352:	a8 2f       	mov	r26, r24
     354:	b0 e0       	ldi	r27, 0x00	; 0
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	05 c0       	rjmp	.+10     	; 0x366 <dxl_tx_packet+0x5c>
     35c:	e0 53       	subi	r30, 0x30	; 48
     35e:	f6 4f       	sbci	r31, 0xF6	; 246
     360:	82 81       	ldd	r24, Z+2	; 0x02
     362:	98 0f       	add	r25, r24
     364:	2f 5f       	subi	r18, 0xFF	; 255
     366:	e2 2f       	mov	r30, r18
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	ae 17       	cp	r26, r30
     36c:	bf 07       	cpc	r27, r31
     36e:	b4 f7       	brge	.-20     	; 0x35c <dxl_tx_packet+0x52>
     370:	a0 53       	subi	r26, 0x30	; 48
     372:	b6 4f       	sbci	r27, 0xF6	; 246
     374:	90 95       	com	r25
     376:	13 96       	adiw	r26, 0x03	; 3
     378:	9c 93       	st	X, r25
     37a:	80 91 00 02 	lds	r24, 0x0200
     37e:	90 91 01 02 	lds	r25, 0x0201
     382:	06 97       	sbiw	r24, 0x06	; 6
     384:	02 97       	sbiw	r24, 0x02	; 2
     386:	08 f4       	brcc	.+2      	; 0x38a <dxl_tx_packet+0x80>
     388:	38 d1       	rcall	.+624    	; 0x5fa <dxl_hal_clear>
     38a:	10 91 d3 09 	lds	r17, 0x09D3
     38e:	1c 5f       	subi	r17, 0xFC	; 252
     390:	80 ed       	ldi	r24, 0xD0	; 208
     392:	99 e0       	ldi	r25, 0x09	; 9
     394:	61 2f       	mov	r22, r17
     396:	70 e0       	ldi	r23, 0x00	; 0
     398:	35 d1       	rcall	.+618    	; 0x604 <dxl_hal_tx>
     39a:	18 17       	cp	r17, r24
     39c:	59 f0       	breq	.+22     	; 0x3b4 <dxl_tx_packet+0xaa>
     39e:	82 e0       	ldi	r24, 0x02	; 2
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	90 93 01 02 	sts	0x0201, r25
     3a6:	80 93 00 02 	sts	0x0200, r24
     3aa:	10 92 b9 0a 	sts	0x0AB9, r1
     3ae:	10 92 b8 0a 	sts	0x0AB8, r1
     3b2:	10 c0       	rjmp	.+32     	; 0x3d4 <dxl_tx_packet+0xca>
     3b4:	80 91 d4 09 	lds	r24, 0x09D4
     3b8:	82 30       	cpi	r24, 0x02	; 2
     3ba:	29 f4       	brne	.+10     	; 0x3c6 <dxl_tx_packet+0xbc>
     3bc:	80 91 d6 09 	lds	r24, 0x09D6
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	06 96       	adiw	r24, 0x06	; 6
     3c4:	02 c0       	rjmp	.+4      	; 0x3ca <dxl_tx_packet+0xc0>
     3c6:	86 e0       	ldi	r24, 0x06	; 6
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	40 d1       	rcall	.+640    	; 0x64c <dxl_hal_set_timeout>
     3cc:	10 92 01 02 	sts	0x0201, r1
     3d0:	10 92 00 02 	sts	0x0200, r1
     3d4:	1f 91       	pop	r17
     3d6:	08 95       	ret

000003d8 <dxl_txrx_packet>:
     3d8:	98 df       	rcall	.-208    	; 0x30a <dxl_tx_packet>
     3da:	80 91 00 02 	lds	r24, 0x0200
     3de:	90 91 01 02 	lds	r25, 0x0201
     3e2:	89 2b       	or	r24, r25
     3e4:	39 f4       	brne	.+14     	; 0x3f4 <dxl_txrx_packet+0x1c>
     3e6:	c9 de       	rcall	.-622    	; 0x17a <dxl_rx_packet>
     3e8:	80 91 00 02 	lds	r24, 0x0200
     3ec:	90 91 01 02 	lds	r25, 0x0201
     3f0:	05 97       	sbiw	r24, 0x05	; 5
     3f2:	c9 f3       	breq	.-14     	; 0x3e6 <dxl_txrx_packet+0xe>
     3f4:	08 95       	ret

000003f6 <dxl_write_word>:
     3f6:	28 2f       	mov	r18, r24
     3f8:	80 91 b8 0a 	lds	r24, 0x0AB8
     3fc:	90 91 b9 0a 	lds	r25, 0x0AB9
     400:	89 2b       	or	r24, r25
     402:	91 f4       	brne	.+36     	; 0x428 <dxl_write_word+0x32>
     404:	20 93 d2 09 	sts	0x09D2, r18
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	80 93 d4 09 	sts	0x09D4, r24
     40e:	60 93 d5 09 	sts	0x09D5, r22
     412:	ca 01       	movw	r24, r20
     414:	40 93 d6 09 	sts	0x09D6, r20
     418:	80 70       	andi	r24, 0x00	; 0
     41a:	90 93 d7 09 	sts	0x09D7, r25
     41e:	85 e0       	ldi	r24, 0x05	; 5
     420:	80 93 d3 09 	sts	0x09D3, r24
     424:	d9 cf       	rjmp	.-78     	; 0x3d8 <dxl_txrx_packet>
     426:	08 95       	ret
     428:	ff cf       	rjmp	.-2      	; 0x428 <dxl_write_word+0x32>

0000042a <dxl_read_word>:
     42a:	28 2f       	mov	r18, r24
     42c:	80 91 b8 0a 	lds	r24, 0x0AB8
     430:	90 91 b9 0a 	lds	r25, 0x0AB9
     434:	89 2b       	or	r24, r25
     436:	b1 f4       	brne	.+44     	; 0x464 <dxl_read_word+0x3a>
     438:	20 93 d2 09 	sts	0x09D2, r18
     43c:	82 e0       	ldi	r24, 0x02	; 2
     43e:	80 93 d4 09 	sts	0x09D4, r24
     442:	60 93 d5 09 	sts	0x09D5, r22
     446:	80 93 d6 09 	sts	0x09D6, r24
     44a:	84 e0       	ldi	r24, 0x04	; 4
     44c:	80 93 d3 09 	sts	0x09D3, r24
     450:	c3 df       	rcall	.-122    	; 0x3d8 <dxl_txrx_packet>
     452:	30 91 76 0a 	lds	r19, 0x0A76
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	80 91 75 0a 	lds	r24, 0x0A75
     45c:	28 0f       	add	r18, r24
     45e:	31 1d       	adc	r19, r1
     460:	c9 01       	movw	r24, r18
     462:	08 95       	ret
     464:	ff cf       	rjmp	.-2      	; 0x464 <dxl_read_word+0x3a>

00000466 <dxl_write_byte>:
     466:	28 2f       	mov	r18, r24
     468:	80 91 b8 0a 	lds	r24, 0x0AB8
     46c:	90 91 b9 0a 	lds	r25, 0x0AB9
     470:	89 2b       	or	r24, r25
     472:	71 f4       	brne	.+28     	; 0x490 <dxl_write_byte+0x2a>
     474:	20 93 d2 09 	sts	0x09D2, r18
     478:	83 e0       	ldi	r24, 0x03	; 3
     47a:	80 93 d4 09 	sts	0x09D4, r24
     47e:	60 93 d5 09 	sts	0x09D5, r22
     482:	40 93 d6 09 	sts	0x09D6, r20
     486:	84 e0       	ldi	r24, 0x04	; 4
     488:	80 93 d3 09 	sts	0x09D3, r24
     48c:	a5 cf       	rjmp	.-182    	; 0x3d8 <dxl_txrx_packet>
     48e:	08 95       	ret
     490:	ff cf       	rjmp	.-2      	; 0x490 <dxl_write_byte+0x2a>

00000492 <dxl_read_byte>:
     492:	28 2f       	mov	r18, r24
     494:	80 91 b8 0a 	lds	r24, 0x0AB8
     498:	90 91 b9 0a 	lds	r25, 0x0AB9
     49c:	89 2b       	or	r24, r25
     49e:	91 f4       	brne	.+36     	; 0x4c4 <dxl_read_byte+0x32>
     4a0:	20 93 d2 09 	sts	0x09D2, r18
     4a4:	82 e0       	ldi	r24, 0x02	; 2
     4a6:	80 93 d4 09 	sts	0x09D4, r24
     4aa:	60 93 d5 09 	sts	0x09D5, r22
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	80 93 d6 09 	sts	0x09D6, r24
     4b4:	84 e0       	ldi	r24, 0x04	; 4
     4b6:	80 93 d3 09 	sts	0x09D3, r24
     4ba:	8e df       	rcall	.-228    	; 0x3d8 <dxl_txrx_packet>
     4bc:	80 91 75 0a 	lds	r24, 0x0A75
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	08 95       	ret
     4c4:	ff cf       	rjmp	.-2      	; 0x4c4 <dxl_read_byte+0x32>

000004c6 <dxl_ping>:
     4c6:	28 2f       	mov	r18, r24
     4c8:	80 91 b8 0a 	lds	r24, 0x0AB8
     4cc:	90 91 b9 0a 	lds	r25, 0x0AB9
     4d0:	89 2b       	or	r24, r25
     4d2:	51 f4       	brne	.+20     	; 0x4e8 <dxl_ping+0x22>
     4d4:	20 93 d2 09 	sts	0x09D2, r18
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	80 93 d4 09 	sts	0x09D4, r24
     4de:	82 e0       	ldi	r24, 0x02	; 2
     4e0:	80 93 d3 09 	sts	0x09D3, r24
     4e4:	79 cf       	rjmp	.-270    	; 0x3d8 <dxl_txrx_packet>
     4e6:	08 95       	ret
     4e8:	ff cf       	rjmp	.-2      	; 0x4e8 <dxl_ping+0x22>

000004ea <dxl_terminate>:
     4ea:	86 c0       	rjmp	.+268    	; 0x5f8 <dxl_hal_close>
     4ec:	08 95       	ret

000004ee <dxl_initialize>:
     4ee:	0f 93       	push	r16
     4f0:	1f 93       	push	r17
     4f2:	8c 01       	movw	r16, r24
     4f4:	6f 5f       	subi	r22, 0xFF	; 255
     4f6:	7f 4f       	sbci	r23, 0xFF	; 255
     4f8:	88 27       	eor	r24, r24
     4fa:	77 fd       	sbrc	r23, 7
     4fc:	80 95       	com	r24
     4fe:	98 2f       	mov	r25, r24
     500:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__floatsisf>
     504:	9b 01       	movw	r18, r22
     506:	ac 01       	movw	r20, r24
     508:	60 e0       	ldi	r22, 0x00	; 0
     50a:	74 e2       	ldi	r23, 0x24	; 36
     50c:	84 ef       	ldi	r24, 0xF4	; 244
     50e:	99 e4       	ldi	r25, 0x49	; 73
     510:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__divsf3>
     514:	ab 01       	movw	r20, r22
     516:	bc 01       	movw	r22, r24
     518:	c8 01       	movw	r24, r16
     51a:	15 d0       	rcall	.+42     	; 0x546 <dxl_hal_open>
     51c:	89 2b       	or	r24, r25
     51e:	19 f4       	brne	.+6      	; 0x526 <dxl_initialize+0x38>
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	0c c0       	rjmp	.+24     	; 0x53e <dxl_initialize+0x50>
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	90 93 01 02 	sts	0x0201, r25
     52e:	80 93 00 02 	sts	0x0200, r24
     532:	10 92 b9 0a 	sts	0x0AB9, r1
     536:	10 92 b8 0a 	sts	0x0AB8, r1
     53a:	21 e0       	ldi	r18, 0x01	; 1
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	c9 01       	movw	r24, r18
     540:	1f 91       	pop	r17
     542:	0f 91       	pop	r16
     544:	08 95       	ret

00000546 <dxl_hal_open>:
     546:	ef 92       	push	r14
     548:	ff 92       	push	r15
     54a:	0f 93       	push	r16
     54c:	1f 93       	push	r17
     54e:	7a 01       	movw	r14, r20
     550:	8b 01       	movw	r16, r22
     552:	82 e4       	ldi	r24, 0x42	; 66
     554:	80 93 c0 00 	sts	0x00C0, r24
     558:	88 e9       	ldi	r24, 0x98	; 152
     55a:	80 93 c1 00 	sts	0x00C1, r24
     55e:	86 e0       	ldi	r24, 0x06	; 6
     560:	80 93 c2 00 	sts	0x00C2, r24
     564:	60 e0       	ldi	r22, 0x00	; 0
     566:	74 e2       	ldi	r23, 0x24	; 36
     568:	84 ef       	ldi	r24, 0xF4	; 244
     56a:	99 e4       	ldi	r25, 0x49	; 73
     56c:	a8 01       	movw	r20, r16
     56e:	97 01       	movw	r18, r14
     570:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__divsf3>
     574:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
     578:	61 50       	subi	r22, 0x01	; 1
     57a:	70 40       	sbci	r23, 0x00	; 0
     57c:	70 93 c5 00 	sts	0x00C5, r23
     580:	60 93 c4 00 	sts	0x00C4, r22
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	74 e2       	ldi	r23, 0x24	; 36
     588:	84 e7       	ldi	r24, 0x74	; 116
     58a:	99 e4       	ldi	r25, 0x49	; 73
     58c:	a8 01       	movw	r20, r16
     58e:	97 01       	movw	r18, r14
     590:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__divsf3>
     594:	20 e0       	ldi	r18, 0x00	; 0
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	40 e4       	ldi	r20, 0x40	; 64
     59a:	51 e4       	ldi	r21, 0x41	; 65
     59c:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__mulsf3>
     5a0:	60 93 52 0d 	sts	0x0D52, r22
     5a4:	70 93 53 0d 	sts	0x0D53, r23
     5a8:	80 93 54 0d 	sts	0x0D54, r24
     5ac:	90 93 55 0d 	sts	0x0D55, r25
     5b0:	20 91 52 0d 	lds	r18, 0x0D52
     5b4:	30 91 53 0d 	lds	r19, 0x0D53
     5b8:	40 91 54 0d 	lds	r20, 0x0D54
     5bc:	50 91 55 0d 	lds	r21, 0x0D55
     5c0:	60 e0       	ldi	r22, 0x00	; 0
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	8a e7       	ldi	r24, 0x7A	; 122
     5c6:	93 e4       	ldi	r25, 0x43	; 67
     5c8:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__divsf3>
     5cc:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
     5d0:	70 93 51 0d 	sts	0x0D51, r23
     5d4:	60 93 50 0d 	sts	0x0D50, r22
     5d8:	72 98       	cbi	0x0e, 2	; 14
     5da:	73 9a       	sbi	0x0e, 3	; 14
     5dc:	8f ef       	ldi	r24, 0xFF	; 255
     5de:	80 93 c6 00 	sts	0x00C6, r24
     5e2:	10 92 ba 0b 	sts	0x0BBA, r1
     5e6:	10 92 bb 0b 	sts	0x0BBB, r1
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	ff 90       	pop	r15
     5f4:	ef 90       	pop	r14
     5f6:	08 95       	ret

000005f8 <dxl_hal_close>:
     5f8:	08 95       	ret

000005fa <dxl_hal_clear>:
     5fa:	80 91 bb 0b 	lds	r24, 0x0BBB
     5fe:	80 93 ba 0b 	sts	0x0BBA, r24
     602:	08 95       	ret

00000604 <dxl_hal_tx>:
     604:	ac 01       	movw	r20, r24
     606:	f8 94       	cli
     608:	73 98       	cbi	0x0e, 3	; 14
     60a:	72 9a       	sbi	0x0e, 2	; 14
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	11 c0       	rjmp	.+34     	; 0x634 <dxl_hal_tx+0x30>
     612:	80 91 c0 00 	lds	r24, 0x00C0
     616:	85 ff       	sbrs	r24, 5
     618:	fc cf       	rjmp	.-8      	; 0x612 <dxl_hal_tx+0xe>
     61a:	80 91 c0 00 	lds	r24, 0x00C0
     61e:	80 64       	ori	r24, 0x40	; 64
     620:	80 93 c0 00 	sts	0x00C0, r24
     624:	fa 01       	movw	r30, r20
     626:	e2 0f       	add	r30, r18
     628:	f3 1f       	adc	r31, r19
     62a:	80 81       	ld	r24, Z
     62c:	80 93 c6 00 	sts	0x00C6, r24
     630:	2f 5f       	subi	r18, 0xFF	; 255
     632:	3f 4f       	sbci	r19, 0xFF	; 255
     634:	26 17       	cp	r18, r22
     636:	37 07       	cpc	r19, r23
     638:	64 f3       	brlt	.-40     	; 0x612 <dxl_hal_tx+0xe>
     63a:	80 91 c0 00 	lds	r24, 0x00C0
     63e:	86 ff       	sbrs	r24, 6
     640:	fc cf       	rjmp	.-8      	; 0x63a <dxl_hal_tx+0x36>
     642:	72 98       	cbi	0x0e, 2	; 14
     644:	73 9a       	sbi	0x0e, 3	; 14
     646:	78 94       	sei
     648:	c9 01       	movw	r24, r18
     64a:	08 95       	ret

0000064c <dxl_hal_set_timeout>:
     64c:	10 92 59 0d 	sts	0x0D59, r1
     650:	10 92 58 0d 	sts	0x0D58, r1
     654:	20 91 50 0d 	lds	r18, 0x0D50
     658:	30 91 51 0d 	lds	r19, 0x0D51
     65c:	26 5f       	subi	r18, 0xF6	; 246
     65e:	3f 4f       	sbci	r19, 0xFF	; 255
     660:	28 0f       	add	r18, r24
     662:	39 1f       	adc	r19, r25
     664:	30 93 57 0d 	sts	0x0D57, r19
     668:	20 93 56 0d 	sts	0x0D56, r18
     66c:	08 95       	ret

0000066e <dxl_hal_timeout>:
     66e:	af 92       	push	r10
     670:	bf 92       	push	r11
     672:	cf 92       	push	r12
     674:	df 92       	push	r13
     676:	ef 92       	push	r14
     678:	ff 92       	push	r15
     67a:	0f 93       	push	r16
     67c:	1f 93       	push	r17
     67e:	80 91 58 0d 	lds	r24, 0x0D58
     682:	90 91 59 0d 	lds	r25, 0x0D59
     686:	01 96       	adiw	r24, 0x01	; 1
     688:	90 93 59 0d 	sts	0x0D59, r25
     68c:	80 93 58 0d 	sts	0x0D58, r24
     690:	20 91 58 0d 	lds	r18, 0x0D58
     694:	30 91 59 0d 	lds	r19, 0x0D59
     698:	80 91 56 0d 	lds	r24, 0x0D56
     69c:	90 91 57 0d 	lds	r25, 0x0D57
     6a0:	82 17       	cp	r24, r18
     6a2:	93 07       	cpc	r25, r19
     6a4:	18 f4       	brcc	.+6      	; 0x6ac <dxl_hal_timeout+0x3e>
     6a6:	21 e0       	ldi	r18, 0x01	; 1
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	74 c0       	rjmp	.+232    	; 0x794 <dxl_hal_timeout+0x126>
     6ac:	a0 90 52 0d 	lds	r10, 0x0D52
     6b0:	b0 90 53 0d 	lds	r11, 0x0D53
     6b4:	c0 90 54 0d 	lds	r12, 0x0D54
     6b8:	d0 90 55 0d 	lds	r13, 0x0D55
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     6bc:	c6 01       	movw	r24, r12
     6be:	b5 01       	movw	r22, r10
     6c0:	2b ea       	ldi	r18, 0xAB	; 171
     6c2:	3a ea       	ldi	r19, 0xAA	; 170
     6c4:	4a ea       	ldi	r20, 0xAA	; 170
     6c6:	50 e4       	ldi	r21, 0x40	; 64
     6c8:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__mulsf3>
     6cc:	7b 01       	movw	r14, r22
     6ce:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     6d0:	20 e0       	ldi	r18, 0x00	; 0
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	40 e8       	ldi	r20, 0x80	; 128
     6d6:	5f e3       	ldi	r21, 0x3F	; 63
     6d8:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <__cmpsf2>
     6dc:	88 23       	and	r24, r24
     6de:	14 f4       	brge	.+4      	; 0x6e4 <dxl_hal_timeout+0x76>
     6e0:	61 e0       	ldi	r22, 0x01	; 1
     6e2:	54 c0       	rjmp	.+168    	; 0x78c <dxl_hal_timeout+0x11e>
		__ticks = 1;
	else if (__tmp > 255)
     6e4:	c8 01       	movw	r24, r16
     6e6:	b7 01       	movw	r22, r14
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	4f e7       	ldi	r20, 0x7F	; 127
     6ee:	53 e4       	ldi	r21, 0x43	; 67
     6f0:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <__gesf2>
     6f4:	18 16       	cp	r1, r24
     6f6:	0c f0       	brlt	.+2      	; 0x6fa <dxl_hal_timeout+0x8c>
     6f8:	45 c0       	rjmp	.+138    	; 0x784 <dxl_hal_timeout+0x116>
	{
		_delay_ms(__us / 1000.0);
     6fa:	c6 01       	movw	r24, r12
     6fc:	b5 01       	movw	r22, r10
     6fe:	20 e0       	ldi	r18, 0x00	; 0
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	4a e7       	ldi	r20, 0x7A	; 122
     704:	54 e4       	ldi	r21, 0x44	; 68
     706:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__divsf3>
     70a:	5b 01       	movw	r10, r22
     70c:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     70e:	20 e0       	ldi	r18, 0x00	; 0
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	4a e7       	ldi	r20, 0x7A	; 122
     714:	55 e4       	ldi	r21, 0x45	; 69
     716:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__mulsf3>
     71a:	7b 01       	movw	r14, r22
     71c:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	40 e8       	ldi	r20, 0x80	; 128
     724:	5f e3       	ldi	r21, 0x3F	; 63
     726:	0e 94 68 0f 	call	0x1ed0	; 0x1ed0 <__cmpsf2>
     72a:	88 23       	and	r24, r24
     72c:	1c f4       	brge	.+6      	; 0x734 <dxl_hal_timeout+0xc6>
     72e:	61 e0       	ldi	r22, 0x01	; 1
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	24 c0       	rjmp	.+72     	; 0x77c <dxl_hal_timeout+0x10e>
		__ticks = 1;
	else if (__tmp > 65535)
     734:	c8 01       	movw	r24, r16
     736:	b7 01       	movw	r22, r14
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	3f ef       	ldi	r19, 0xFF	; 255
     73c:	4f e7       	ldi	r20, 0x7F	; 127
     73e:	57 e4       	ldi	r21, 0x47	; 71
     740:	0e 94 90 0f 	call	0x1f20	; 0x1f20 <__gesf2>
     744:	18 16       	cp	r1, r24
     746:	b4 f4       	brge	.+44     	; 0x774 <dxl_hal_timeout+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     748:	c6 01       	movw	r24, r12
     74a:	b5 01       	movw	r22, r10
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	40 e2       	ldi	r20, 0x20	; 32
     752:	51 e4       	ldi	r21, 0x41	; 65
     754:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <__mulsf3>
     758:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     75c:	80 e9       	ldi	r24, 0x90	; 144
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	05 c0       	rjmp	.+10     	; 0x76c <dxl_hal_timeout+0xfe>
     762:	fc 01       	movw	r30, r24
     764:	31 97       	sbiw	r30, 0x01	; 1
     766:	f1 f7       	brne	.-4      	; 0x764 <dxl_hal_timeout+0xf6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     768:	61 50       	subi	r22, 0x01	; 1
     76a:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     76c:	61 15       	cp	r22, r1
     76e:	71 05       	cpc	r23, r1
     770:	c1 f7       	brne	.-16     	; 0x762 <dxl_hal_timeout+0xf4>
     772:	0e c0       	rjmp	.+28     	; 0x790 <dxl_hal_timeout+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     774:	c8 01       	movw	r24, r16
     776:	b7 01       	movw	r22, r14
     778:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
     77c:	cb 01       	movw	r24, r22
     77e:	01 97       	sbiw	r24, 0x01	; 1
     780:	f1 f7       	brne	.-4      	; 0x77e <dxl_hal_timeout+0x110>
     782:	06 c0       	rjmp	.+12     	; 0x790 <dxl_hal_timeout+0x122>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     784:	c8 01       	movw	r24, r16
     786:	b7 01       	movw	r22, r14
     788:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     78c:	6a 95       	dec	r22
     78e:	f1 f7       	brne	.-4      	; 0x78c <dxl_hal_timeout+0x11e>
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	c9 01       	movw	r24, r18
     796:	1f 91       	pop	r17
     798:	0f 91       	pop	r16
     79a:	ff 90       	pop	r15
     79c:	ef 90       	pop	r14
     79e:	df 90       	pop	r13
     7a0:	cf 90       	pop	r12
     7a2:	bf 90       	pop	r11
     7a4:	af 90       	pop	r10
     7a6:	08 95       	ret

000007a8 <dxl_hal_get_qstate>:
     7a8:	90 91 ba 0b 	lds	r25, 0x0BBA
     7ac:	80 91 bb 0b 	lds	r24, 0x0BBB
     7b0:	98 17       	cp	r25, r24
     7b2:	19 f4       	brne	.+6      	; 0x7ba <dxl_hal_get_qstate+0x12>
     7b4:	20 e0       	ldi	r18, 0x00	; 0
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	17 c0       	rjmp	.+46     	; 0x7e8 <dxl_hal_get_qstate+0x40>
     7ba:	90 91 ba 0b 	lds	r25, 0x0BBA
     7be:	80 91 bb 0b 	lds	r24, 0x0BBB
     7c2:	98 17       	cp	r25, r24
     7c4:	38 f4       	brcc	.+14     	; 0x7d4 <dxl_hal_get_qstate+0x2c>
     7c6:	80 91 bb 0b 	lds	r24, 0x0BBB
     7ca:	90 91 ba 0b 	lds	r25, 0x0BBA
     7ce:	28 2f       	mov	r18, r24
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	08 c0       	rjmp	.+16     	; 0x7e4 <dxl_hal_get_qstate+0x3c>
     7d4:	80 91 bb 0b 	lds	r24, 0x0BBB
     7d8:	90 91 ba 0b 	lds	r25, 0x0BBA
     7dc:	28 2f       	mov	r18, r24
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	20 50       	subi	r18, 0x00	; 0
     7e2:	3f 4f       	sbci	r19, 0xFF	; 255
     7e4:	29 1b       	sub	r18, r25
     7e6:	31 09       	sbc	r19, r1
     7e8:	c9 01       	movw	r24, r18
     7ea:	08 95       	ret

000007ec <dxl_hal_put_queue>:
     7ec:	1f 93       	push	r17
     7ee:	18 2f       	mov	r17, r24
     7f0:	db df       	rcall	.-74     	; 0x7a8 <dxl_hal_get_qstate>
     7f2:	8f 3f       	cpi	r24, 0xFF	; 255
     7f4:	91 05       	cpc	r25, r1
     7f6:	91 f0       	breq	.+36     	; 0x81c <dxl_hal_put_queue+0x30>
     7f8:	e0 91 bb 0b 	lds	r30, 0x0BBB
     7fc:	f0 e0       	ldi	r31, 0x00	; 0
     7fe:	e6 54       	subi	r30, 0x46	; 70
     800:	f5 4f       	sbci	r31, 0xF5	; 245
     802:	10 83       	st	Z, r17
     804:	80 91 bb 0b 	lds	r24, 0x0BBB
     808:	8f 3f       	cpi	r24, 0xFF	; 255
     80a:	19 f4       	brne	.+6      	; 0x812 <dxl_hal_put_queue+0x26>
     80c:	10 92 bb 0b 	sts	0x0BBB, r1
     810:	05 c0       	rjmp	.+10     	; 0x81c <dxl_hal_put_queue+0x30>
     812:	80 91 bb 0b 	lds	r24, 0x0BBB
     816:	8f 5f       	subi	r24, 0xFF	; 255
     818:	80 93 bb 0b 	sts	0x0BBB, r24
     81c:	1f 91       	pop	r17
     81e:	08 95       	ret

00000820 <dxl_hal_get_queue>:
     820:	90 91 ba 0b 	lds	r25, 0x0BBA
     824:	80 91 bb 0b 	lds	r24, 0x0BBB
     828:	98 17       	cp	r25, r24
     82a:	11 f4       	brne	.+4      	; 0x830 <dxl_hal_get_queue+0x10>
     82c:	ef ef       	ldi	r30, 0xFF	; 255
     82e:	12 c0       	rjmp	.+36     	; 0x854 <dxl_hal_get_queue+0x34>
     830:	e0 91 ba 0b 	lds	r30, 0x0BBA
     834:	f0 e0       	ldi	r31, 0x00	; 0
     836:	e6 54       	subi	r30, 0x46	; 70
     838:	f5 4f       	sbci	r31, 0xF5	; 245
     83a:	e0 81       	ld	r30, Z
     83c:	80 91 ba 0b 	lds	r24, 0x0BBA
     840:	8f 3f       	cpi	r24, 0xFF	; 255
     842:	19 f4       	brne	.+6      	; 0x84a <dxl_hal_get_queue+0x2a>
     844:	10 92 ba 0b 	sts	0x0BBA, r1
     848:	05 c0       	rjmp	.+10     	; 0x854 <dxl_hal_get_queue+0x34>
     84a:	80 91 ba 0b 	lds	r24, 0x0BBA
     84e:	8f 5f       	subi	r24, 0xFF	; 255
     850:	80 93 ba 0b 	sts	0x0BBA, r24
     854:	8e 2f       	mov	r24, r30
     856:	08 95       	ret

00000858 <dxl_hal_rx>:
     858:	ef 92       	push	r14
     85a:	ff 92       	push	r15
     85c:	0f 93       	push	r16
     85e:	1f 93       	push	r17
     860:	cf 93       	push	r28
     862:	df 93       	push	r29
     864:	7c 01       	movw	r14, r24
     866:	eb 01       	movw	r28, r22
     868:	90 91 ba 0b 	lds	r25, 0x0BBA
     86c:	80 91 bb 0b 	lds	r24, 0x0BBB
     870:	98 17       	cp	r25, r24
     872:	19 f4       	brne	.+6      	; 0x87a <dxl_hal_rx+0x22>
     874:	00 e0       	ldi	r16, 0x00	; 0
     876:	10 e0       	ldi	r17, 0x00	; 0
     878:	12 c0       	rjmp	.+36     	; 0x89e <dxl_hal_rx+0x46>
     87a:	96 df       	rcall	.-212    	; 0x7a8 <dxl_hal_get_qstate>
     87c:	8c 01       	movw	r16, r24
     87e:	c8 17       	cp	r28, r24
     880:	d9 07       	cpc	r29, r25
     882:	0c f4       	brge	.+2      	; 0x886 <dxl_hal_rx+0x2e>
     884:	8e 01       	movw	r16, r28
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	d0 e0       	ldi	r29, 0x00	; 0
     88a:	06 c0       	rjmp	.+12     	; 0x898 <dxl_hal_rx+0x40>
     88c:	c9 df       	rcall	.-110    	; 0x820 <dxl_hal_get_queue>
     88e:	f7 01       	movw	r30, r14
     890:	ec 0f       	add	r30, r28
     892:	fd 1f       	adc	r31, r29
     894:	80 83       	st	Z, r24
     896:	21 96       	adiw	r28, 0x01	; 1
     898:	c0 17       	cp	r28, r16
     89a:	d1 07       	cpc	r29, r17
     89c:	bc f3       	brlt	.-18     	; 0x88c <dxl_hal_rx+0x34>
     89e:	c8 01       	movw	r24, r16
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	ff 90       	pop	r15
     8aa:	ef 90       	pop	r14
     8ac:	08 95       	ret

000008ae <__vector_25>:
     8ae:	1f 92       	push	r1
     8b0:	0f 92       	push	r0
     8b2:	0f b6       	in	r0, 0x3f	; 63
     8b4:	0f 92       	push	r0
     8b6:	0b b6       	in	r0, 0x3b	; 59
     8b8:	0f 92       	push	r0
     8ba:	11 24       	eor	r1, r1
     8bc:	2f 93       	push	r18
     8be:	3f 93       	push	r19
     8c0:	4f 93       	push	r20
     8c2:	5f 93       	push	r21
     8c4:	6f 93       	push	r22
     8c6:	7f 93       	push	r23
     8c8:	8f 93       	push	r24
     8ca:	9f 93       	push	r25
     8cc:	af 93       	push	r26
     8ce:	bf 93       	push	r27
     8d0:	ef 93       	push	r30
     8d2:	ff 93       	push	r31
     8d4:	80 91 c6 00 	lds	r24, 0x00C6
     8d8:	89 df       	rcall	.-238    	; 0x7ec <dxl_hal_put_queue>
     8da:	ff 91       	pop	r31
     8dc:	ef 91       	pop	r30
     8de:	bf 91       	pop	r27
     8e0:	af 91       	pop	r26
     8e2:	9f 91       	pop	r25
     8e4:	8f 91       	pop	r24
     8e6:	7f 91       	pop	r23
     8e8:	6f 91       	pop	r22
     8ea:	5f 91       	pop	r21
     8ec:	4f 91       	pop	r20
     8ee:	3f 91       	pop	r19
     8f0:	2f 91       	pop	r18
     8f2:	0f 90       	pop	r0
     8f4:	0b be       	out	0x3b, r0	; 59
     8f6:	0f 90       	pop	r0
     8f8:	0f be       	out	0x3f, r0	; 63
     8fa:	0f 90       	pop	r0
     8fc:	1f 90       	pop	r1
     8fe:	18 95       	reti

00000900 <serial_write>:
     900:	ac 01       	movw	r20, r24
     902:	20 e0       	ldi	r18, 0x00	; 0
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	0c c0       	rjmp	.+24     	; 0x920 <serial_write+0x20>
     908:	80 91 c8 00 	lds	r24, 0x00C8
     90c:	85 ff       	sbrs	r24, 5
     90e:	fc cf       	rjmp	.-8      	; 0x908 <serial_write+0x8>
     910:	fa 01       	movw	r30, r20
     912:	e2 0f       	add	r30, r18
     914:	f3 1f       	adc	r31, r19
     916:	80 81       	ld	r24, Z
     918:	80 93 ce 00 	sts	0x00CE, r24
     91c:	2f 5f       	subi	r18, 0xFF	; 255
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	26 17       	cp	r18, r22
     922:	37 07       	cpc	r19, r23
     924:	8c f3       	brlt	.-30     	; 0x908 <serial_write+0x8>
     926:	08 95       	ret

00000928 <serial_read>:
     928:	dc 01       	movw	r26, r24
     92a:	90 91 3c 0c 	lds	r25, 0x0C3C
     92e:	80 91 3d 0c 	lds	r24, 0x0C3D
     932:	98 17       	cp	r25, r24
     934:	11 f4       	brne	.+4      	; 0x93a <serial_read+0x12>
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	08 95       	ret
     93a:	90 91 3c 0c 	lds	r25, 0x0C3C
     93e:	80 91 3d 0c 	lds	r24, 0x0C3D
     942:	98 17       	cp	r25, r24
     944:	19 f4       	brne	.+6      	; 0x94c <serial_read+0x24>
     946:	20 e0       	ldi	r18, 0x00	; 0
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	17 c0       	rjmp	.+46     	; 0x97a <serial_read+0x52>
     94c:	90 91 3c 0c 	lds	r25, 0x0C3C
     950:	80 91 3d 0c 	lds	r24, 0x0C3D
     954:	98 17       	cp	r25, r24
     956:	38 f4       	brcc	.+14     	; 0x966 <serial_read+0x3e>
     958:	80 91 3d 0c 	lds	r24, 0x0C3D
     95c:	90 91 3c 0c 	lds	r25, 0x0C3C
     960:	28 2f       	mov	r18, r24
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	08 c0       	rjmp	.+16     	; 0x976 <serial_read+0x4e>
     966:	80 91 3d 0c 	lds	r24, 0x0C3D
     96a:	90 91 3c 0c 	lds	r25, 0x0C3C
     96e:	28 2f       	mov	r18, r24
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	20 58       	subi	r18, 0x80	; 128
     974:	3f 4f       	sbci	r19, 0xFF	; 255
     976:	29 1b       	sub	r18, r25
     978:	31 09       	sbc	r19, r1
     97a:	a9 01       	movw	r20, r18
     97c:	62 17       	cp	r22, r18
     97e:	73 07       	cpc	r23, r19
     980:	0c f4       	brge	.+2      	; 0x984 <serial_read+0x5c>
     982:	ab 01       	movw	r20, r22
     984:	20 e0       	ldi	r18, 0x00	; 0
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	20 c0       	rjmp	.+64     	; 0x9ca <serial_read+0xa2>
     98a:	90 91 3c 0c 	lds	r25, 0x0C3C
     98e:	80 91 3d 0c 	lds	r24, 0x0C3D
     992:	98 17       	cp	r25, r24
     994:	11 f4       	brne	.+4      	; 0x99a <serial_read+0x72>
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	12 c0       	rjmp	.+36     	; 0x9be <serial_read+0x96>
     99a:	e0 91 3c 0c 	lds	r30, 0x0C3C
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	e4 54       	subi	r30, 0x44	; 68
     9a2:	f4 4f       	sbci	r31, 0xF4	; 244
     9a4:	90 81       	ld	r25, Z
     9a6:	80 91 3c 0c 	lds	r24, 0x0C3C
     9aa:	8f 37       	cpi	r24, 0x7F	; 127
     9ac:	19 f4       	brne	.+6      	; 0x9b4 <serial_read+0x8c>
     9ae:	10 92 3c 0c 	sts	0x0C3C, r1
     9b2:	05 c0       	rjmp	.+10     	; 0x9be <serial_read+0x96>
     9b4:	80 91 3c 0c 	lds	r24, 0x0C3C
     9b8:	8f 5f       	subi	r24, 0xFF	; 255
     9ba:	80 93 3c 0c 	sts	0x0C3C, r24
     9be:	fd 01       	movw	r30, r26
     9c0:	e2 0f       	add	r30, r18
     9c2:	f3 1f       	adc	r31, r19
     9c4:	90 83       	st	Z, r25
     9c6:	2f 5f       	subi	r18, 0xFF	; 255
     9c8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ca:	24 17       	cp	r18, r20
     9cc:	35 07       	cpc	r19, r21
     9ce:	ec f2       	brlt	.-70     	; 0x98a <serial_read+0x62>
     9d0:	84 2f       	mov	r24, r20
     9d2:	08 95       	ret

000009d4 <serial_get_qstate>:
     9d4:	90 91 3c 0c 	lds	r25, 0x0C3C
     9d8:	80 91 3d 0c 	lds	r24, 0x0C3D
     9dc:	98 17       	cp	r25, r24
     9de:	19 f4       	brne	.+6      	; 0x9e6 <serial_get_qstate+0x12>
     9e0:	20 e0       	ldi	r18, 0x00	; 0
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	17 c0       	rjmp	.+46     	; 0xa14 <serial_get_qstate+0x40>
     9e6:	90 91 3c 0c 	lds	r25, 0x0C3C
     9ea:	80 91 3d 0c 	lds	r24, 0x0C3D
     9ee:	98 17       	cp	r25, r24
     9f0:	38 f4       	brcc	.+14     	; 0xa00 <serial_get_qstate+0x2c>
     9f2:	80 91 3d 0c 	lds	r24, 0x0C3D
     9f6:	90 91 3c 0c 	lds	r25, 0x0C3C
     9fa:	28 2f       	mov	r18, r24
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	08 c0       	rjmp	.+16     	; 0xa10 <serial_get_qstate+0x3c>
     a00:	80 91 3d 0c 	lds	r24, 0x0C3D
     a04:	90 91 3c 0c 	lds	r25, 0x0C3C
     a08:	28 2f       	mov	r18, r24
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	20 58       	subi	r18, 0x80	; 128
     a0e:	3f 4f       	sbci	r19, 0xFF	; 255
     a10:	29 1b       	sub	r18, r25
     a12:	31 09       	sbc	r19, r1
     a14:	c9 01       	movw	r24, r18
     a16:	08 95       	ret

00000a18 <serial_put_queue>:
     a18:	48 2f       	mov	r20, r24
     a1a:	90 91 3c 0c 	lds	r25, 0x0C3C
     a1e:	80 91 3d 0c 	lds	r24, 0x0C3D
     a22:	98 17       	cp	r25, r24
     a24:	d1 f0       	breq	.+52     	; 0xa5a <serial_put_queue+0x42>
     a26:	90 91 3c 0c 	lds	r25, 0x0C3C
     a2a:	80 91 3d 0c 	lds	r24, 0x0C3D
     a2e:	98 17       	cp	r25, r24
     a30:	38 f4       	brcc	.+14     	; 0xa40 <serial_put_queue+0x28>
     a32:	80 91 3d 0c 	lds	r24, 0x0C3D
     a36:	90 91 3c 0c 	lds	r25, 0x0C3C
     a3a:	28 2f       	mov	r18, r24
     a3c:	30 e0       	ldi	r19, 0x00	; 0
     a3e:	08 c0       	rjmp	.+16     	; 0xa50 <serial_put_queue+0x38>
     a40:	80 91 3d 0c 	lds	r24, 0x0C3D
     a44:	90 91 3c 0c 	lds	r25, 0x0C3C
     a48:	28 2f       	mov	r18, r24
     a4a:	30 e0       	ldi	r19, 0x00	; 0
     a4c:	20 58       	subi	r18, 0x80	; 128
     a4e:	3f 4f       	sbci	r19, 0xFF	; 255
     a50:	29 1b       	sub	r18, r25
     a52:	31 09       	sbc	r19, r1
     a54:	2f 37       	cpi	r18, 0x7F	; 127
     a56:	31 05       	cpc	r19, r1
     a58:	91 f0       	breq	.+36     	; 0xa7e <serial_put_queue+0x66>
     a5a:	e0 91 3d 0c 	lds	r30, 0x0C3D
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	e4 54       	subi	r30, 0x44	; 68
     a62:	f4 4f       	sbci	r31, 0xF4	; 244
     a64:	40 83       	st	Z, r20
     a66:	80 91 3d 0c 	lds	r24, 0x0C3D
     a6a:	8f 37       	cpi	r24, 0x7F	; 127
     a6c:	19 f4       	brne	.+6      	; 0xa74 <serial_put_queue+0x5c>
     a6e:	10 92 3d 0c 	sts	0x0C3D, r1
     a72:	08 95       	ret
     a74:	80 91 3d 0c 	lds	r24, 0x0C3D
     a78:	8f 5f       	subi	r24, 0xFF	; 255
     a7a:	80 93 3d 0c 	sts	0x0C3D, r24
     a7e:	08 95       	ret

00000a80 <serial_get_queue>:
     a80:	90 91 3c 0c 	lds	r25, 0x0C3C
     a84:	80 91 3d 0c 	lds	r24, 0x0C3D
     a88:	98 17       	cp	r25, r24
     a8a:	11 f4       	brne	.+4      	; 0xa90 <serial_get_queue+0x10>
     a8c:	ef ef       	ldi	r30, 0xFF	; 255
     a8e:	12 c0       	rjmp	.+36     	; 0xab4 <serial_get_queue+0x34>
     a90:	e0 91 3c 0c 	lds	r30, 0x0C3C
     a94:	f0 e0       	ldi	r31, 0x00	; 0
     a96:	e4 54       	subi	r30, 0x44	; 68
     a98:	f4 4f       	sbci	r31, 0xF4	; 244
     a9a:	e0 81       	ld	r30, Z
     a9c:	80 91 3c 0c 	lds	r24, 0x0C3C
     aa0:	8f 37       	cpi	r24, 0x7F	; 127
     aa2:	19 f4       	brne	.+6      	; 0xaaa <serial_get_queue+0x2a>
     aa4:	10 92 3c 0c 	sts	0x0C3C, r1
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <serial_get_queue+0x34>
     aaa:	80 91 3c 0c 	lds	r24, 0x0C3C
     aae:	8f 5f       	subi	r24, 0xFF	; 255
     ab0:	80 93 3c 0c 	sts	0x0C3C, r24
     ab4:	8e 2f       	mov	r24, r30
     ab6:	08 95       	ret

00000ab8 <__vector_36>:
     ab8:	1f 92       	push	r1
     aba:	0f 92       	push	r0
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	0f 92       	push	r0
     ac0:	0b b6       	in	r0, 0x3b	; 59
     ac2:	0f 92       	push	r0
     ac4:	11 24       	eor	r1, r1
     ac6:	2f 93       	push	r18
     ac8:	3f 93       	push	r19
     aca:	4f 93       	push	r20
     acc:	5f 93       	push	r21
     ace:	6f 93       	push	r22
     ad0:	7f 93       	push	r23
     ad2:	8f 93       	push	r24
     ad4:	9f 93       	push	r25
     ad6:	af 93       	push	r26
     ad8:	bf 93       	push	r27
     ada:	ef 93       	push	r30
     adc:	ff 93       	push	r31
     ade:	80 91 ce 00 	lds	r24, 0x00CE
     ae2:	9a df       	rcall	.-204    	; 0xa18 <serial_put_queue>
     ae4:	ff 91       	pop	r31
     ae6:	ef 91       	pop	r30
     ae8:	bf 91       	pop	r27
     aea:	af 91       	pop	r26
     aec:	9f 91       	pop	r25
     aee:	8f 91       	pop	r24
     af0:	7f 91       	pop	r23
     af2:	6f 91       	pop	r22
     af4:	5f 91       	pop	r21
     af6:	4f 91       	pop	r20
     af8:	3f 91       	pop	r19
     afa:	2f 91       	pop	r18
     afc:	0f 90       	pop	r0
     afe:	0b be       	out	0x3b, r0	; 59
     b00:	0f 90       	pop	r0
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	0f 90       	pop	r0
     b06:	1f 90       	pop	r1
     b08:	18 95       	reti

00000b0a <std_putchar>:
     b0a:	df 93       	push	r29
     b0c:	cf 93       	push	r28
     b0e:	0f 92       	push	r0
     b10:	0f 92       	push	r0
     b12:	cd b7       	in	r28, 0x3d	; 61
     b14:	de b7       	in	r29, 0x3e	; 62
     b16:	98 2f       	mov	r25, r24
     b18:	8a 30       	cpi	r24, 0x0A	; 10
     b1a:	99 f4       	brne	.+38     	; 0xb42 <std_putchar+0x38>
     b1c:	8d e0       	ldi	r24, 0x0D	; 13
     b1e:	89 83       	std	Y+1, r24	; 0x01
     b20:	9a 83       	std	Y+2, r25	; 0x02
     b22:	fe 01       	movw	r30, r28
     b24:	31 96       	adiw	r30, 0x01	; 1
     b26:	9e 01       	movw	r18, r28
     b28:	2d 5f       	subi	r18, 0xFD	; 253
     b2a:	3f 4f       	sbci	r19, 0xFF	; 255
     b2c:	80 91 c8 00 	lds	r24, 0x00C8
     b30:	85 ff       	sbrs	r24, 5
     b32:	fc cf       	rjmp	.-8      	; 0xb2c <std_putchar+0x22>
     b34:	81 91       	ld	r24, Z+
     b36:	80 93 ce 00 	sts	0x00CE, r24
     b3a:	e2 17       	cp	r30, r18
     b3c:	f3 07       	cpc	r31, r19
     b3e:	b1 f7       	brne	.-20     	; 0xb2c <std_putchar+0x22>
     b40:	06 c0       	rjmp	.+12     	; 0xb4e <std_putchar+0x44>
     b42:	80 91 c8 00 	lds	r24, 0x00C8
     b46:	85 ff       	sbrs	r24, 5
     b48:	fc cf       	rjmp	.-8      	; 0xb42 <std_putchar+0x38>
     b4a:	90 93 ce 00 	sts	0x00CE, r25
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0f 90       	pop	r0
     b54:	0f 90       	pop	r0
     b56:	cf 91       	pop	r28
     b58:	df 91       	pop	r29
     b5a:	08 95       	ret

00000b5c <std_getchar>:
     b5c:	90 91 3c 0c 	lds	r25, 0x0C3C
     b60:	80 91 3d 0c 	lds	r24, 0x0C3D
     b64:	98 17       	cp	r25, r24
     b66:	d1 f3       	breq	.-12     	; 0xb5c <std_getchar>
     b68:	90 91 3c 0c 	lds	r25, 0x0C3C
     b6c:	80 91 3d 0c 	lds	r24, 0x0C3D
     b70:	98 17       	cp	r25, r24
     b72:	38 f4       	brcc	.+14     	; 0xb82 <std_getchar+0x26>
     b74:	80 91 3d 0c 	lds	r24, 0x0C3D
     b78:	90 91 3c 0c 	lds	r25, 0x0C3C
     b7c:	28 2f       	mov	r18, r24
     b7e:	30 e0       	ldi	r19, 0x00	; 0
     b80:	08 c0       	rjmp	.+16     	; 0xb92 <std_getchar+0x36>
     b82:	80 91 3d 0c 	lds	r24, 0x0C3D
     b86:	90 91 3c 0c 	lds	r25, 0x0C3C
     b8a:	28 2f       	mov	r18, r24
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	20 58       	subi	r18, 0x80	; 128
     b90:	3f 4f       	sbci	r19, 0xFF	; 255
     b92:	29 1b       	sub	r18, r25
     b94:	31 09       	sbc	r19, r1
     b96:	23 2b       	or	r18, r19
     b98:	09 f3       	breq	.-62     	; 0xb5c <std_getchar>
     b9a:	90 91 3c 0c 	lds	r25, 0x0C3C
     b9e:	80 91 3d 0c 	lds	r24, 0x0C3D
     ba2:	98 17       	cp	r25, r24
     ba4:	11 f4       	brne	.+4      	; 0xbaa <std_getchar+0x4e>
     ba6:	ef ef       	ldi	r30, 0xFF	; 255
     ba8:	15 c0       	rjmp	.+42     	; 0xbd4 <std_getchar+0x78>
     baa:	e0 91 3c 0c 	lds	r30, 0x0C3C
     bae:	f0 e0       	ldi	r31, 0x00	; 0
     bb0:	e4 54       	subi	r30, 0x44	; 68
     bb2:	f4 4f       	sbci	r31, 0xF4	; 244
     bb4:	e0 81       	ld	r30, Z
     bb6:	80 91 3c 0c 	lds	r24, 0x0C3C
     bba:	8f 37       	cpi	r24, 0x7F	; 127
     bbc:	19 f4       	brne	.+6      	; 0xbc4 <std_getchar+0x68>
     bbe:	10 92 3c 0c 	sts	0x0C3C, r1
     bc2:	05 c0       	rjmp	.+10     	; 0xbce <std_getchar+0x72>
     bc4:	80 91 3c 0c 	lds	r24, 0x0C3C
     bc8:	8f 5f       	subi	r24, 0xFF	; 255
     bca:	80 93 3c 0c 	sts	0x0C3C, r24
     bce:	ed 30       	cpi	r30, 0x0D	; 13
     bd0:	09 f4       	brne	.+2      	; 0xbd4 <std_getchar+0x78>
     bd2:	ea e0       	ldi	r30, 0x0A	; 10
     bd4:	8e 2f       	mov	r24, r30
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	08 95       	ret

00000bda <serial_initialize>:
     bda:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <__floatsisf>
     bde:	9b 01       	movw	r18, r22
     be0:	ac 01       	movw	r20, r24
     be2:	60 e0       	ldi	r22, 0x00	; 0
     be4:	74 e2       	ldi	r23, 0x24	; 36
     be6:	84 ef       	ldi	r24, 0xF4	; 244
     be8:	99 e4       	ldi	r25, 0x49	; 73
     bea:	e8 d7       	rcall	.+4048   	; 0x1bbc <__divsf3>
     bec:	0e 94 4b 0e 	call	0x1c96	; 0x1c96 <__fixunssfsi>
     bf0:	61 50       	subi	r22, 0x01	; 1
     bf2:	70 40       	sbci	r23, 0x00	; 0
     bf4:	22 e4       	ldi	r18, 0x42	; 66
     bf6:	20 93 c8 00 	sts	0x00C8, r18
     bfa:	28 e9       	ldi	r18, 0x98	; 152
     bfc:	20 93 c9 00 	sts	0x00C9, r18
     c00:	26 e0       	ldi	r18, 0x06	; 6
     c02:	20 93 ca 00 	sts	0x00CA, r18
     c06:	2f ef       	ldi	r18, 0xFF	; 255
     c08:	20 93 ce 00 	sts	0x00CE, r18
     c0c:	10 92 3c 0c 	sts	0x0C3C, r1
     c10:	10 92 3d 0c 	sts	0x0C3D, r1
     c14:	27 2f       	mov	r18, r23
     c16:	33 27       	eor	r19, r19
     c18:	27 fd       	sbrc	r18, 7
     c1a:	3a 95       	dec	r19
     c1c:	20 93 cd 00 	sts	0x00CD, r18
     c20:	60 93 cc 00 	sts	0x00CC, r22
     c24:	72 98       	cbi	0x0e, 2	; 14
     c26:	73 9a       	sbi	0x0e, 3	; 14
     c28:	85 e8       	ldi	r24, 0x85	; 133
     c2a:	95 e0       	ldi	r25, 0x05	; 5
     c2c:	6e ea       	ldi	r22, 0xAE	; 174
     c2e:	75 e0       	ldi	r23, 0x05	; 5
     c30:	0e 94 0a 10 	call	0x2014	; 0x2014 <fdevopen>
     c34:	90 93 3f 0c 	sts	0x0C3F, r25
     c38:	80 93 3e 0c 	sts	0x0C3E, r24
     c3c:	08 95       	ret

00000c3e <initSerial>:
}

void clearSerialBuffer(){
//	printf( "clearSerialBuffer\n" );
	isRead = 0;
	memset( &readBuffer[0], 0x00, SERIAL_BUFFER_SIZE );
     c3e:	60 e0       	ldi	r22, 0x00	; 0
     c40:	71 ee       	ldi	r23, 0xE1	; 225
     c42:	80 e0       	ldi	r24, 0x00	; 0
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	c9 df       	rcall	.-110    	; 0xbda <serial_initialize>
     c48:	78 94       	sei
     c4a:	08 95       	ret

00000c4c <checkSerialRead>:
}

int checkSerialRead(void){
	int ret = 0;
	if( serial_get_qstate() > 0 ){
     c4c:	c3 de       	rcall	.-634    	; 0x9d4 <serial_get_qstate>
     c4e:	18 16       	cp	r1, r24
     c50:	19 06       	cpc	r1, r25
     c52:	0c f0       	brlt	.+2      	; 0xc56 <checkSerialRead+0xa>
     c54:	3f c0       	rjmp	.+126    	; 0xcd4 <checkSerialRead+0x88>
		unsigned char ReceivedData = getchar();
     c56:	80 91 5a 0d 	lds	r24, 0x0D5A
     c5a:	90 91 5b 0d 	lds	r25, 0x0D5B
     c5e:	0e 94 54 10 	call	0x20a8	; 0x20a8 <fgetc>
//		printf( "checkSerialRead %d\n", ReceivedData );
		if( ReceivedData == 10 || ReceivedData == 13 ){
     c62:	8a 30       	cpi	r24, 0x0A	; 10
     c64:	11 f0       	breq	.+4      	; 0xc6a <checkSerialRead+0x1e>
     c66:	8d 30       	cpi	r24, 0x0D	; 13
     c68:	91 f4       	brne	.+36     	; 0xc8e <checkSerialRead+0x42>
			if( buffCnt > 0 ){
     c6a:	80 91 92 0c 	lds	r24, 0x0C92
     c6e:	90 91 93 0c 	lds	r25, 0x0C93
     c72:	18 16       	cp	r1, r24
     c74:	19 06       	cpc	r1, r25
     c76:	8c f5       	brge	.+98     	; 0xcda <checkSerialRead+0x8e>
				buffCnt = 0;
     c78:	10 92 93 0c 	sts	0x0C93, r1
     c7c:	10 92 92 0c 	sts	0x0C92, r1
				isRead = 1;
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	90 93 95 0c 	sts	0x0C95, r25
     c88:	80 93 94 0c 	sts	0x0C94, r24
     c8c:	08 95       	ret
				ret = 1;
			}
		}else if( ReceivedData > 0 ){
     c8e:	88 23       	and	r24, r24
     c90:	39 f1       	breq	.+78     	; 0xce0 <checkSerialRead+0x94>
			readBuffer[buffCnt++] = ReceivedData;
     c92:	20 91 92 0c 	lds	r18, 0x0C92
     c96:	30 91 93 0c 	lds	r19, 0x0C93
     c9a:	a9 01       	movw	r20, r18
     c9c:	4f 5f       	subi	r20, 0xFF	; 255
     c9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ca0:	50 93 93 0c 	sts	0x0C93, r21
     ca4:	40 93 92 0c 	sts	0x0C92, r20
     ca8:	f9 01       	movw	r30, r18
     caa:	ee 5b       	subi	r30, 0xBE	; 190
     cac:	f3 4f       	sbci	r31, 0xF3	; 243
     cae:	80 83       	st	Z, r24
			if( buffCnt >= SERIAL_BUFFER_SIZE-1 ){
     cb0:	80 91 92 0c 	lds	r24, 0x0C92
     cb4:	90 91 93 0c 	lds	r25, 0x0C93
     cb8:	8f 34       	cpi	r24, 0x4F	; 79
     cba:	91 05       	cpc	r25, r1
     cbc:	a4 f0       	brlt	.+40     	; 0xce6 <checkSerialRead+0x9a>
				buffCnt = 0;
     cbe:	10 92 93 0c 	sts	0x0C93, r1
     cc2:	10 92 92 0c 	sts	0x0C92, r1
				isRead = 1;
     cc6:	81 e0       	ldi	r24, 0x01	; 1
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	90 93 95 0c 	sts	0x0C95, r25
     cce:	80 93 94 0c 	sts	0x0C94, r24
     cd2:	08 95       	ret
	isRead = 0;
	memset( &readBuffer[0], 0x00, SERIAL_BUFFER_SIZE );
}

int checkSerialRead(void){
	int ret = 0;
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	08 95       	ret
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	08 95       	ret
     ce0:	80 e0       	ldi	r24, 0x00	; 0
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	08 95       	ret
     ce6:	80 e0       	ldi	r24, 0x00	; 0
     ce8:	90 e0       	ldi	r25, 0x00	; 0
			}
		}
//		printf( "readBuffer %s\n", &readBuffer[0] );
	}
	return ret;
}
     cea:	08 95       	ret

00000cec <getReadBuffer>:

char * getReadBuffer(){
//	printf( "getReadBuffer %d\n", isRead );
	char * ret = NULL;
	if( isRead > 0 ){
     cec:	80 91 94 0c 	lds	r24, 0x0C94
     cf0:	90 91 95 0c 	lds	r25, 0x0C95
     cf4:	18 16       	cp	r1, r24
     cf6:	19 06       	cpc	r1, r25
     cf8:	3c f4       	brge	.+14     	; 0xd08 <getReadBuffer+0x1c>
			//memset( &readBuffer[0], 0x00, BUFFER_SIZE );
			//isRead = 0;
			//printf( "ret=%s\n", ret );
		//}
		ret = &readBuffer[0];
		isRead = 0;
     cfa:	10 92 95 0c 	sts	0x0C95, r1
     cfe:	10 92 94 0c 	sts	0x0C94, r1
			//memcpy( &ret, &readBuffer, sizeof(unsigned char) * BUFFER_SIZE );
			//memset( &readBuffer[0], 0x00, BUFFER_SIZE );
			//isRead = 0;
			//printf( "ret=%s\n", ret );
		//}
		ret = &readBuffer[0];
     d02:	82 e4       	ldi	r24, 0x42	; 66
     d04:	9c e0       	ldi	r25, 0x0C	; 12
     d06:	08 95       	ret
	return ret;
}

char * getReadBuffer(){
//	printf( "getReadBuffer %d\n", isRead );
	char * ret = NULL;
     d08:	80 e0       	ldi	r24, 0x00	; 0
     d0a:	90 e0       	ldi	r25, 0x00	; 0
		//}
		ret = &readBuffer[0];
		isRead = 0;
	}
	return ret;	
}
     d0c:	08 95       	ret

00000d0e <sendAck>:
	}else{
		PrintCommStatus(CommStatus);
	}
}

void ServoReadState(){
     d0e:	9f 93       	push	r25
     d10:	8f 93       	push	r24
     d12:	82 ec       	ldi	r24, 0xC2	; 194
     d14:	97 e0       	ldi	r25, 0x07	; 7
     d16:	9f 93       	push	r25
     d18:	8f 93       	push	r24
     d1a:	0e 94 92 10 	call	0x2124	; 0x2124 <printf>
     d1e:	0f 90       	pop	r0
     d20:	0f 90       	pop	r0
     d22:	0f 90       	pop	r0
     d24:	0f 90       	pop	r0
     d26:	08 95       	ret

00000d28 <MotorInit>:
     d28:	61 e0       	ldi	r22, 0x01	; 1
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	80 e0       	ldi	r24, 0x00	; 0
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	de db       	rcall	.-2116   	; 0x4ee <dxl_initialize>
     d32:	41 e0       	ldi	r20, 0x01	; 1
     d34:	50 e0       	ldi	r21, 0x00	; 0
     d36:	6f e2       	ldi	r22, 0x2F	; 47
     d38:	70 e0       	ldi	r23, 0x00	; 0
     d3a:	8f e1       	ldi	r24, 0x1F	; 31
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	5b db       	rcall	.-2378   	; 0x3f6 <dxl_write_word>
     d40:	40 e0       	ldi	r20, 0x00	; 0
     d42:	50 e0       	ldi	r21, 0x00	; 0
     d44:	60 e2       	ldi	r22, 0x20	; 32
     d46:	70 e0       	ldi	r23, 0x00	; 0
     d48:	8e ef       	ldi	r24, 0xFE	; 254
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	54 db       	rcall	.-2392   	; 0x3f6 <dxl_write_word>
     d4e:	40 e0       	ldi	r20, 0x00	; 0
     d50:	50 e0       	ldi	r21, 0x00	; 0
     d52:	68 e1       	ldi	r22, 0x18	; 24
     d54:	70 e0       	ldi	r23, 0x00	; 0
     d56:	8e ef       	ldi	r24, 0xFE	; 254
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	85 db       	rcall	.-2294   	; 0x466 <dxl_write_byte>
     d5c:	2f e3       	ldi	r18, 0x3F	; 63
     d5e:	8d e0       	ldi	r24, 0x0D	; 13
     d60:	93 e0       	ldi	r25, 0x03	; 3
     d62:	21 50       	subi	r18, 0x01	; 1
     d64:	80 40       	sbci	r24, 0x00	; 0
     d66:	90 40       	sbci	r25, 0x00	; 0
     d68:	e1 f7       	brne	.-8      	; 0xd62 <MotorInit+0x3a>
     d6a:	00 c0       	rjmp	.+0      	; 0xd6c <MotorInit+0x44>
     d6c:	00 00       	nop
     d6e:	08 95       	ret

00000d70 <split>:
     d70:	0f 93       	push	r16
     d72:	1f 93       	push	r17
     d74:	cf 93       	push	r28
     d76:	df 93       	push	r29
     d78:	00 d0       	rcall	.+0      	; 0xd7a <split+0xa>
     d7a:	cd b7       	in	r28, 0x3d	; 61
     d7c:	de b7       	in	r29, 0x3e	; 62
     d7e:	20 e2       	ldi	r18, 0x20	; 32
     d80:	3c e2       	ldi	r19, 0x2C	; 44
     d82:	40 e0       	ldi	r20, 0x00	; 0
     d84:	29 83       	std	Y+1, r18	; 0x01
     d86:	3a 83       	std	Y+2, r19	; 0x02
     d88:	4b 83       	std	Y+3, r20	; 0x03
     d8a:	be 01       	movw	r22, r28
     d8c:	6f 5f       	subi	r22, 0xFF	; 255
     d8e:	7f 4f       	sbci	r23, 0xFF	; 255
     d90:	0e 94 d8 0f 	call	0x1fb0	; 0x1fb0 <strtok>
     d94:	00 97       	sbiw	r24, 0x00	; 0
     d96:	89 f0       	breq	.+34     	; 0xdba <split+0x4a>
     d98:	00 eb       	ldi	r16, 0xB0	; 176
     d9a:	1c e0       	ldi	r17, 0x0C	; 12
     d9c:	0e 94 bb 0f 	call	0x1f76	; 0x1f76 <atoi>
     da0:	f8 01       	movw	r30, r16
     da2:	81 93       	st	Z+, r24
     da4:	91 93       	st	Z+, r25
     da6:	8f 01       	movw	r16, r30
     da8:	be 01       	movw	r22, r28
     daa:	6f 5f       	subi	r22, 0xFF	; 255
     dac:	7f 4f       	sbci	r23, 0xFF	; 255
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	0e 94 d8 0f 	call	0x1fb0	; 0x1fb0 <strtok>
     db6:	00 97       	sbiw	r24, 0x00	; 0
     db8:	89 f7       	brne	.-30     	; 0xd9c <split+0x2c>
     dba:	0f 90       	pop	r0
     dbc:	0f 90       	pop	r0
     dbe:	0f 90       	pop	r0
     dc0:	df 91       	pop	r29
     dc2:	cf 91       	pop	r28
     dc4:	1f 91       	pop	r17
     dc6:	0f 91       	pop	r16
     dc8:	08 95       	ret

00000dca <isMoving>:
     dca:	80 91 a2 0c 	lds	r24, 0x0CA2
     dce:	90 91 a3 0c 	lds	r25, 0x0CA3
     dd2:	0a 96       	adiw	r24, 0x0a	; 10
     dd4:	90 93 a3 0c 	sts	0x0CA3, r25
     dd8:	80 93 a2 0c 	sts	0x0CA2, r24
     ddc:	20 91 a0 0c 	lds	r18, 0x0CA0
     de0:	30 91 a1 0c 	lds	r19, 0x0CA1
     de4:	82 17       	cp	r24, r18
     de6:	93 07       	cpc	r25, r19
     de8:	3c f0       	brlt	.+14     	; 0xdf8 <isMoving+0x2e>
     dea:	10 92 a3 0c 	sts	0x0CA3, r1
     dee:	10 92 a2 0c 	sts	0x0CA2, r1
     df2:	80 e0       	ldi	r24, 0x00	; 0
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	08 95       	ret
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	08 95       	ret

00000dfe <setAngle>:
     dfe:	80 91 b2 0c 	lds	r24, 0x0CB2
     e02:	90 91 b3 0c 	lds	r25, 0x0CB3
     e06:	82 33       	cpi	r24, 0x32	; 50
     e08:	91 05       	cpc	r25, r1
     e0a:	9c f4       	brge	.+38     	; 0xe32 <setAngle+0x34>
     e0c:	e4 eb       	ldi	r30, 0xB4	; 180
     e0e:	fc e0       	ldi	r31, 0x0C	; 12
     e10:	2a e1       	ldi	r18, 0x1A	; 26
     e12:	28 9f       	mul	r18, r24
     e14:	d0 01       	movw	r26, r0
     e16:	29 9f       	mul	r18, r25
     e18:	b0 0d       	add	r27, r0
     e1a:	11 24       	eor	r1, r1
     e1c:	aa 56       	subi	r26, 0x6A	; 106
     e1e:	bd 4f       	sbci	r27, 0xFD	; 253
     e20:	2e ec       	ldi	r18, 0xCE	; 206
     e22:	3c e0       	ldi	r19, 0x0C	; 12
     e24:	81 91       	ld	r24, Z+
     e26:	91 91       	ld	r25, Z+
     e28:	8d 93       	st	X+, r24
     e2a:	9d 93       	st	X+, r25
     e2c:	e2 17       	cp	r30, r18
     e2e:	f3 07       	cpc	r31, r19
     e30:	c9 f7       	brne	.-14     	; 0xe24 <setAngle+0x26>
     e32:	08 95       	ret

00000e34 <getAngle>:
     e34:	cf 92       	push	r12
     e36:	df 92       	push	r13
     e38:	ef 92       	push	r14
     e3a:	ff 92       	push	r15
     e3c:	0f 93       	push	r16
     e3e:	1f 93       	push	r17
     e40:	cf 93       	push	r28
     e42:	df 93       	push	r29
     e44:	cd b7       	in	r28, 0x3d	; 61
     e46:	de b7       	in	r29, 0x3e	; 62
     e48:	68 97       	sbiw	r28, 0x18	; 24
     e4a:	0f b6       	in	r0, 0x3f	; 63
     e4c:	f8 94       	cli
     e4e:	de bf       	out	0x3e, r29	; 62
     e50:	0f be       	out	0x3f, r0	; 63
     e52:	cd bf       	out	0x3d, r28	; 61
     e54:	fe 01       	movw	r30, r28
     e56:	31 96       	adiw	r30, 0x01	; 1
     e58:	88 e1       	ldi	r24, 0x18	; 24
     e5a:	df 01       	movw	r26, r30
     e5c:	1d 92       	st	X+, r1
     e5e:	8a 95       	dec	r24
     e60:	e9 f7       	brne	.-6      	; 0xe5c <getAngle+0x28>
     e62:	0a ea       	ldi	r16, 0xAA	; 170
     e64:	17 e0       	ldi	r17, 0x07	; 7
     e66:	7f 01       	movw	r14, r30
     e68:	0f 2e       	mov	r0, r31
     e6a:	f2 ec       	ldi	r31, 0xC2	; 194
     e6c:	cf 2e       	mov	r12, r31
     e6e:	f7 e0       	ldi	r31, 0x07	; 7
     e70:	df 2e       	mov	r13, r31
     e72:	f0 2d       	mov	r31, r0
     e74:	64 e2       	ldi	r22, 0x24	; 36
     e76:	70 e0       	ldi	r23, 0x00	; 0
     e78:	f8 01       	movw	r30, r16
     e7a:	81 91       	ld	r24, Z+
     e7c:	91 91       	ld	r25, Z+
     e7e:	8f 01       	movw	r16, r30
     e80:	d4 da       	rcall	.-2648   	; 0x42a <dxl_read_word>
     e82:	d7 01       	movw	r26, r14
     e84:	8d 93       	st	X+, r24
     e86:	9d 93       	st	X+, r25
     e88:	7d 01       	movw	r14, r26
     e8a:	0c 15       	cp	r16, r12
     e8c:	1d 05       	cpc	r17, r13
     e8e:	91 f7       	brne	.-28     	; 0xe74 <getAngle+0x40>
     e90:	88 8d       	ldd	r24, Y+24	; 0x18
     e92:	8f 93       	push	r24
     e94:	8f 89       	ldd	r24, Y+23	; 0x17
     e96:	8f 93       	push	r24
     e98:	8e 89       	ldd	r24, Y+22	; 0x16
     e9a:	8f 93       	push	r24
     e9c:	8d 89       	ldd	r24, Y+21	; 0x15
     e9e:	8f 93       	push	r24
     ea0:	8c 89       	ldd	r24, Y+20	; 0x14
     ea2:	8f 93       	push	r24
     ea4:	8b 89       	ldd	r24, Y+19	; 0x13
     ea6:	8f 93       	push	r24
     ea8:	8a 89       	ldd	r24, Y+18	; 0x12
     eaa:	8f 93       	push	r24
     eac:	89 89       	ldd	r24, Y+17	; 0x11
     eae:	8f 93       	push	r24
     eb0:	88 89       	ldd	r24, Y+16	; 0x10
     eb2:	8f 93       	push	r24
     eb4:	8f 85       	ldd	r24, Y+15	; 0x0f
     eb6:	8f 93       	push	r24
     eb8:	8e 85       	ldd	r24, Y+14	; 0x0e
     eba:	8f 93       	push	r24
     ebc:	8d 85       	ldd	r24, Y+13	; 0x0d
     ebe:	8f 93       	push	r24
     ec0:	8c 85       	ldd	r24, Y+12	; 0x0c
     ec2:	8f 93       	push	r24
     ec4:	8b 85       	ldd	r24, Y+11	; 0x0b
     ec6:	8f 93       	push	r24
     ec8:	8a 85       	ldd	r24, Y+10	; 0x0a
     eca:	8f 93       	push	r24
     ecc:	89 85       	ldd	r24, Y+9	; 0x09
     ece:	8f 93       	push	r24
     ed0:	88 85       	ldd	r24, Y+8	; 0x08
     ed2:	8f 93       	push	r24
     ed4:	8f 81       	ldd	r24, Y+7	; 0x07
     ed6:	8f 93       	push	r24
     ed8:	8e 81       	ldd	r24, Y+6	; 0x06
     eda:	8f 93       	push	r24
     edc:	8d 81       	ldd	r24, Y+5	; 0x05
     ede:	8f 93       	push	r24
     ee0:	8c 81       	ldd	r24, Y+4	; 0x04
     ee2:	8f 93       	push	r24
     ee4:	8b 81       	ldd	r24, Y+3	; 0x03
     ee6:	8f 93       	push	r24
     ee8:	8a 81       	ldd	r24, Y+2	; 0x02
     eea:	8f 93       	push	r24
     eec:	89 81       	ldd	r24, Y+1	; 0x01
     eee:	8f 93       	push	r24
     ef0:	1f 92       	push	r1
     ef2:	82 e0       	ldi	r24, 0x02	; 2
     ef4:	8f 93       	push	r24
     ef6:	87 ec       	ldi	r24, 0xC7	; 199
     ef8:	97 e0       	ldi	r25, 0x07	; 7
     efa:	9f 93       	push	r25
     efc:	8f 93       	push	r24
     efe:	0e 94 92 10 	call	0x2124	; 0x2124 <printf>
     f02:	0f b6       	in	r0, 0x3f	; 63
     f04:	f8 94       	cli
     f06:	de bf       	out	0x3e, r29	; 62
     f08:	0f be       	out	0x3f, r0	; 63
     f0a:	cd bf       	out	0x3d, r28	; 61
     f0c:	68 96       	adiw	r28, 0x18	; 24
     f0e:	0f b6       	in	r0, 0x3f	; 63
     f10:	f8 94       	cli
     f12:	de bf       	out	0x3e, r29	; 62
     f14:	0f be       	out	0x3f, r0	; 63
     f16:	cd bf       	out	0x3d, r28	; 61
     f18:	df 91       	pop	r29
     f1a:	cf 91       	pop	r28
     f1c:	1f 91       	pop	r17
     f1e:	0f 91       	pop	r16
     f20:	ff 90       	pop	r15
     f22:	ef 90       	pop	r14
     f24:	df 90       	pop	r13
     f26:	cf 90       	pop	r12
     f28:	08 95       	ret

00000f2a <sendActAngle>:
     f2a:	2a e1       	ldi	r18, 0x1A	; 26
     f2c:	ac 01       	movw	r20, r24
     f2e:	24 9f       	mul	r18, r20
     f30:	c0 01       	movw	r24, r0
     f32:	25 9f       	mul	r18, r21
     f34:	90 0d       	add	r25, r0
     f36:	11 24       	eor	r1, r1
     f38:	fc 01       	movw	r30, r24
     f3a:	ea 56       	subi	r30, 0x6A	; 106
     f3c:	fd 4f       	sbci	r31, 0xFD	; 253
     f3e:	81 8d       	ldd	r24, Z+25	; 0x19
     f40:	8f 93       	push	r24
     f42:	80 8d       	ldd	r24, Z+24	; 0x18
     f44:	8f 93       	push	r24
     f46:	87 89       	ldd	r24, Z+23	; 0x17
     f48:	8f 93       	push	r24
     f4a:	86 89       	ldd	r24, Z+22	; 0x16
     f4c:	8f 93       	push	r24
     f4e:	85 89       	ldd	r24, Z+21	; 0x15
     f50:	8f 93       	push	r24
     f52:	84 89       	ldd	r24, Z+20	; 0x14
     f54:	8f 93       	push	r24
     f56:	83 89       	ldd	r24, Z+19	; 0x13
     f58:	8f 93       	push	r24
     f5a:	82 89       	ldd	r24, Z+18	; 0x12
     f5c:	8f 93       	push	r24
     f5e:	81 89       	ldd	r24, Z+17	; 0x11
     f60:	8f 93       	push	r24
     f62:	80 89       	ldd	r24, Z+16	; 0x10
     f64:	8f 93       	push	r24
     f66:	87 85       	ldd	r24, Z+15	; 0x0f
     f68:	8f 93       	push	r24
     f6a:	86 85       	ldd	r24, Z+14	; 0x0e
     f6c:	8f 93       	push	r24
     f6e:	85 85       	ldd	r24, Z+13	; 0x0d
     f70:	8f 93       	push	r24
     f72:	84 85       	ldd	r24, Z+12	; 0x0c
     f74:	8f 93       	push	r24
     f76:	83 85       	ldd	r24, Z+11	; 0x0b
     f78:	8f 93       	push	r24
     f7a:	82 85       	ldd	r24, Z+10	; 0x0a
     f7c:	8f 93       	push	r24
     f7e:	81 85       	ldd	r24, Z+9	; 0x09
     f80:	8f 93       	push	r24
     f82:	80 85       	ldd	r24, Z+8	; 0x08
     f84:	8f 93       	push	r24
     f86:	87 81       	ldd	r24, Z+7	; 0x07
     f88:	8f 93       	push	r24
     f8a:	86 81       	ldd	r24, Z+6	; 0x06
     f8c:	8f 93       	push	r24
     f8e:	85 81       	ldd	r24, Z+5	; 0x05
     f90:	8f 93       	push	r24
     f92:	84 81       	ldd	r24, Z+4	; 0x04
     f94:	8f 93       	push	r24
     f96:	83 81       	ldd	r24, Z+3	; 0x03
     f98:	8f 93       	push	r24
     f9a:	82 81       	ldd	r24, Z+2	; 0x02
     f9c:	8f 93       	push	r24
     f9e:	81 81       	ldd	r24, Z+1	; 0x01
     fa0:	8f 93       	push	r24
     fa2:	80 81       	ld	r24, Z
     fa4:	8f 93       	push	r24
     fa6:	1f 92       	push	r1
     fa8:	83 e0       	ldi	r24, 0x03	; 3
     faa:	8f 93       	push	r24
     fac:	8f ee       	ldi	r24, 0xEF	; 239
     fae:	97 e0       	ldi	r25, 0x07	; 7
     fb0:	9f 93       	push	r25
     fb2:	8f 93       	push	r24
     fb4:	0e 94 92 10 	call	0x2124	; 0x2124 <printf>
     fb8:	8d b7       	in	r24, 0x3d	; 61
     fba:	9e b7       	in	r25, 0x3e	; 62
     fbc:	4e 96       	adiw	r24, 0x1e	; 30
     fbe:	0f b6       	in	r0, 0x3f	; 63
     fc0:	f8 94       	cli
     fc2:	9e bf       	out	0x3e, r25	; 62
     fc4:	0f be       	out	0x3f, r0	; 63
     fc6:	8d bf       	out	0x3d, r24	; 61
     fc8:	08 95       	ret

00000fca <getLoad>:
     fca:	cf 92       	push	r12
     fcc:	df 92       	push	r13
     fce:	ef 92       	push	r14
     fd0:	ff 92       	push	r15
     fd2:	0f 93       	push	r16
     fd4:	1f 93       	push	r17
     fd6:	cf 93       	push	r28
     fd8:	df 93       	push	r29
     fda:	cd b7       	in	r28, 0x3d	; 61
     fdc:	de b7       	in	r29, 0x3e	; 62
     fde:	68 97       	sbiw	r28, 0x18	; 24
     fe0:	0f b6       	in	r0, 0x3f	; 63
     fe2:	f8 94       	cli
     fe4:	de bf       	out	0x3e, r29	; 62
     fe6:	0f be       	out	0x3f, r0	; 63
     fe8:	cd bf       	out	0x3d, r28	; 61
     fea:	fe 01       	movw	r30, r28
     fec:	31 96       	adiw	r30, 0x01	; 1
     fee:	88 e1       	ldi	r24, 0x18	; 24
     ff0:	df 01       	movw	r26, r30
     ff2:	1d 92       	st	X+, r1
     ff4:	8a 95       	dec	r24
     ff6:	e9 f7       	brne	.-6      	; 0xff2 <getLoad+0x28>
     ff8:	0a ea       	ldi	r16, 0xAA	; 170
     ffa:	17 e0       	ldi	r17, 0x07	; 7
     ffc:	7f 01       	movw	r14, r30
     ffe:	0f 2e       	mov	r0, r31
    1000:	f2 ec       	ldi	r31, 0xC2	; 194
    1002:	cf 2e       	mov	r12, r31
    1004:	f7 e0       	ldi	r31, 0x07	; 7
    1006:	df 2e       	mov	r13, r31
    1008:	f0 2d       	mov	r31, r0
    100a:	68 e2       	ldi	r22, 0x28	; 40
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	f8 01       	movw	r30, r16
    1010:	81 91       	ld	r24, Z+
    1012:	91 91       	ld	r25, Z+
    1014:	8f 01       	movw	r16, r30
    1016:	09 da       	rcall	.-3054   	; 0x42a <dxl_read_word>
    1018:	d7 01       	movw	r26, r14
    101a:	8d 93       	st	X+, r24
    101c:	9d 93       	st	X+, r25
    101e:	7d 01       	movw	r14, r26
    1020:	0c 15       	cp	r16, r12
    1022:	1d 05       	cpc	r17, r13
    1024:	91 f7       	brne	.-28     	; 0x100a <getLoad+0x40>
    1026:	88 8d       	ldd	r24, Y+24	; 0x18
    1028:	8f 93       	push	r24
    102a:	8f 89       	ldd	r24, Y+23	; 0x17
    102c:	8f 93       	push	r24
    102e:	8e 89       	ldd	r24, Y+22	; 0x16
    1030:	8f 93       	push	r24
    1032:	8d 89       	ldd	r24, Y+21	; 0x15
    1034:	8f 93       	push	r24
    1036:	8c 89       	ldd	r24, Y+20	; 0x14
    1038:	8f 93       	push	r24
    103a:	8b 89       	ldd	r24, Y+19	; 0x13
    103c:	8f 93       	push	r24
    103e:	8a 89       	ldd	r24, Y+18	; 0x12
    1040:	8f 93       	push	r24
    1042:	89 89       	ldd	r24, Y+17	; 0x11
    1044:	8f 93       	push	r24
    1046:	88 89       	ldd	r24, Y+16	; 0x10
    1048:	8f 93       	push	r24
    104a:	8f 85       	ldd	r24, Y+15	; 0x0f
    104c:	8f 93       	push	r24
    104e:	8e 85       	ldd	r24, Y+14	; 0x0e
    1050:	8f 93       	push	r24
    1052:	8d 85       	ldd	r24, Y+13	; 0x0d
    1054:	8f 93       	push	r24
    1056:	8c 85       	ldd	r24, Y+12	; 0x0c
    1058:	8f 93       	push	r24
    105a:	8b 85       	ldd	r24, Y+11	; 0x0b
    105c:	8f 93       	push	r24
    105e:	8a 85       	ldd	r24, Y+10	; 0x0a
    1060:	8f 93       	push	r24
    1062:	89 85       	ldd	r24, Y+9	; 0x09
    1064:	8f 93       	push	r24
    1066:	88 85       	ldd	r24, Y+8	; 0x08
    1068:	8f 93       	push	r24
    106a:	8f 81       	ldd	r24, Y+7	; 0x07
    106c:	8f 93       	push	r24
    106e:	8e 81       	ldd	r24, Y+6	; 0x06
    1070:	8f 93       	push	r24
    1072:	8d 81       	ldd	r24, Y+5	; 0x05
    1074:	8f 93       	push	r24
    1076:	8c 81       	ldd	r24, Y+4	; 0x04
    1078:	8f 93       	push	r24
    107a:	8b 81       	ldd	r24, Y+3	; 0x03
    107c:	8f 93       	push	r24
    107e:	8a 81       	ldd	r24, Y+2	; 0x02
    1080:	8f 93       	push	r24
    1082:	89 81       	ldd	r24, Y+1	; 0x01
    1084:	8f 93       	push	r24
    1086:	1f 92       	push	r1
    1088:	84 e0       	ldi	r24, 0x04	; 4
    108a:	8f 93       	push	r24
    108c:	87 ec       	ldi	r24, 0xC7	; 199
    108e:	97 e0       	ldi	r25, 0x07	; 7
    1090:	9f 93       	push	r25
    1092:	8f 93       	push	r24
    1094:	0e 94 92 10 	call	0x2124	; 0x2124 <printf>
    1098:	0f b6       	in	r0, 0x3f	; 63
    109a:	f8 94       	cli
    109c:	de bf       	out	0x3e, r29	; 62
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	cd bf       	out	0x3d, r28	; 61
    10a2:	68 96       	adiw	r28, 0x18	; 24
    10a4:	0f b6       	in	r0, 0x3f	; 63
    10a6:	f8 94       	cli
    10a8:	de bf       	out	0x3e, r29	; 62
    10aa:	0f be       	out	0x3f, r0	; 63
    10ac:	cd bf       	out	0x3d, r28	; 61
    10ae:	df 91       	pop	r29
    10b0:	cf 91       	pop	r28
    10b2:	1f 91       	pop	r17
    10b4:	0f 91       	pop	r16
    10b6:	ff 90       	pop	r15
    10b8:	ef 90       	pop	r14
    10ba:	df 90       	pop	r13
    10bc:	cf 90       	pop	r12
    10be:	08 95       	ret

000010c0 <getVoltage>:
    10c0:	cf 92       	push	r12
    10c2:	df 92       	push	r13
    10c4:	ef 92       	push	r14
    10c6:	ff 92       	push	r15
    10c8:	0f 93       	push	r16
    10ca:	1f 93       	push	r17
    10cc:	cf 93       	push	r28
    10ce:	df 93       	push	r29
    10d0:	cd b7       	in	r28, 0x3d	; 61
    10d2:	de b7       	in	r29, 0x3e	; 62
    10d4:	68 97       	sbiw	r28, 0x18	; 24
    10d6:	0f b6       	in	r0, 0x3f	; 63
    10d8:	f8 94       	cli
    10da:	de bf       	out	0x3e, r29	; 62
    10dc:	0f be       	out	0x3f, r0	; 63
    10de:	cd bf       	out	0x3d, r28	; 61
    10e0:	fe 01       	movw	r30, r28
    10e2:	31 96       	adiw	r30, 0x01	; 1
    10e4:	88 e1       	ldi	r24, 0x18	; 24
    10e6:	df 01       	movw	r26, r30
    10e8:	1d 92       	st	X+, r1
    10ea:	8a 95       	dec	r24
    10ec:	e9 f7       	brne	.-6      	; 0x10e8 <getVoltage+0x28>
    10ee:	0a ea       	ldi	r16, 0xAA	; 170
    10f0:	17 e0       	ldi	r17, 0x07	; 7
    10f2:	7f 01       	movw	r14, r30
    10f4:	0f 2e       	mov	r0, r31
    10f6:	f2 ec       	ldi	r31, 0xC2	; 194
    10f8:	cf 2e       	mov	r12, r31
    10fa:	f7 e0       	ldi	r31, 0x07	; 7
    10fc:	df 2e       	mov	r13, r31
    10fe:	f0 2d       	mov	r31, r0
    1100:	6a e2       	ldi	r22, 0x2A	; 42
    1102:	70 e0       	ldi	r23, 0x00	; 0
    1104:	f8 01       	movw	r30, r16
    1106:	81 91       	ld	r24, Z+
    1108:	91 91       	ld	r25, Z+
    110a:	8f 01       	movw	r16, r30
    110c:	8e d9       	rcall	.-3300   	; 0x42a <dxl_read_word>
    110e:	2d d8       	rcall	.-4006   	; 0x16a <dxl_get_lowbyte>
    1110:	d7 01       	movw	r26, r14
    1112:	8d 93       	st	X+, r24
    1114:	9d 93       	st	X+, r25
    1116:	7d 01       	movw	r14, r26
    1118:	0c 15       	cp	r16, r12
    111a:	1d 05       	cpc	r17, r13
    111c:	89 f7       	brne	.-30     	; 0x1100 <getVoltage+0x40>
    111e:	88 8d       	ldd	r24, Y+24	; 0x18
    1120:	8f 93       	push	r24
    1122:	8f 89       	ldd	r24, Y+23	; 0x17
    1124:	8f 93       	push	r24
    1126:	8e 89       	ldd	r24, Y+22	; 0x16
    1128:	8f 93       	push	r24
    112a:	8d 89       	ldd	r24, Y+21	; 0x15
    112c:	8f 93       	push	r24
    112e:	8c 89       	ldd	r24, Y+20	; 0x14
    1130:	8f 93       	push	r24
    1132:	8b 89       	ldd	r24, Y+19	; 0x13
    1134:	8f 93       	push	r24
    1136:	8a 89       	ldd	r24, Y+18	; 0x12
    1138:	8f 93       	push	r24
    113a:	89 89       	ldd	r24, Y+17	; 0x11
    113c:	8f 93       	push	r24
    113e:	88 89       	ldd	r24, Y+16	; 0x10
    1140:	8f 93       	push	r24
    1142:	8f 85       	ldd	r24, Y+15	; 0x0f
    1144:	8f 93       	push	r24
    1146:	8e 85       	ldd	r24, Y+14	; 0x0e
    1148:	8f 93       	push	r24
    114a:	8d 85       	ldd	r24, Y+13	; 0x0d
    114c:	8f 93       	push	r24
    114e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1150:	8f 93       	push	r24
    1152:	8b 85       	ldd	r24, Y+11	; 0x0b
    1154:	8f 93       	push	r24
    1156:	8a 85       	ldd	r24, Y+10	; 0x0a
    1158:	8f 93       	push	r24
    115a:	89 85       	ldd	r24, Y+9	; 0x09
    115c:	8f 93       	push	r24
    115e:	88 85       	ldd	r24, Y+8	; 0x08
    1160:	8f 93       	push	r24
    1162:	8f 81       	ldd	r24, Y+7	; 0x07
    1164:	8f 93       	push	r24
    1166:	8e 81       	ldd	r24, Y+6	; 0x06
    1168:	8f 93       	push	r24
    116a:	8d 81       	ldd	r24, Y+5	; 0x05
    116c:	8f 93       	push	r24
    116e:	8c 81       	ldd	r24, Y+4	; 0x04
    1170:	8f 93       	push	r24
    1172:	8b 81       	ldd	r24, Y+3	; 0x03
    1174:	8f 93       	push	r24
    1176:	8a 81       	ldd	r24, Y+2	; 0x02
    1178:	8f 93       	push	r24
    117a:	89 81       	ldd	r24, Y+1	; 0x01
    117c:	8f 93       	push	r24
    117e:	1f 92       	push	r1
    1180:	85 e0       	ldi	r24, 0x05	; 5
    1182:	8f 93       	push	r24
    1184:	87 ec       	ldi	r24, 0xC7	; 199
    1186:	97 e0       	ldi	r25, 0x07	; 7
    1188:	9f 93       	push	r25
    118a:	8f 93       	push	r24
    118c:	cb d7       	rcall	.+3990   	; 0x2124 <printf>
    118e:	0f b6       	in	r0, 0x3f	; 63
    1190:	f8 94       	cli
    1192:	de bf       	out	0x3e, r29	; 62
    1194:	0f be       	out	0x3f, r0	; 63
    1196:	cd bf       	out	0x3d, r28	; 61
    1198:	68 96       	adiw	r28, 0x18	; 24
    119a:	0f b6       	in	r0, 0x3f	; 63
    119c:	f8 94       	cli
    119e:	de bf       	out	0x3e, r29	; 62
    11a0:	0f be       	out	0x3f, r0	; 63
    11a2:	cd bf       	out	0x3d, r28	; 61
    11a4:	df 91       	pop	r29
    11a6:	cf 91       	pop	r28
    11a8:	1f 91       	pop	r17
    11aa:	0f 91       	pop	r16
    11ac:	ff 90       	pop	r15
    11ae:	ef 90       	pop	r14
    11b0:	df 90       	pop	r13
    11b2:	cf 90       	pop	r12
    11b4:	08 95       	ret

000011b6 <startMotion>:
    11b6:	90 93 9f 0c 	sts	0x0C9F, r25
    11ba:	80 93 9e 0c 	sts	0x0C9E, r24
    11be:	70 93 9d 0c 	sts	0x0C9D, r23
    11c2:	60 93 9c 0c 	sts	0x0C9C, r22
    11c6:	20 91 a4 0c 	lds	r18, 0x0CA4
    11ca:	30 91 a5 0c 	lds	r19, 0x0CA5
    11ce:	23 2b       	or	r18, r19
    11d0:	61 f4       	brne	.+24     	; 0x11ea <startMotion+0x34>
    11d2:	90 93 a7 0c 	sts	0x0CA7, r25
    11d6:	80 93 a6 0c 	sts	0x0CA6, r24
    11da:	70 93 a5 0c 	sts	0x0CA5, r23
    11de:	60 93 a4 0c 	sts	0x0CA4, r22
    11e2:	10 92 9d 0c 	sts	0x0C9D, r1
    11e6:	10 92 9c 0c 	sts	0x0C9C, r1
    11ea:	08 95       	ret

000011ec <setModeAction>:
    11ec:	80 91 a4 0c 	lds	r24, 0x0CA4
    11f0:	90 91 a5 0c 	lds	r25, 0x0CA5
    11f4:	18 16       	cp	r1, r24
    11f6:	19 06       	cpc	r1, r25
    11f8:	0c f4       	brge	.+2      	; 0x11fc <setModeAction+0x10>
    11fa:	50 c0       	rjmp	.+160    	; 0x129c <setModeAction+0xb0>
    11fc:	80 91 ae 0c 	lds	r24, 0x0CAE
    1200:	90 91 af 0c 	lds	r25, 0x0CAF
    1204:	01 97       	sbiw	r24, 0x01	; 1
    1206:	09 f0       	breq	.+2      	; 0x120a <setModeAction+0x1e>
    1208:	49 c0       	rjmp	.+146    	; 0x129c <setModeAction+0xb0>
    120a:	80 91 96 0c 	lds	r24, 0x0C96
    120e:	90 91 97 0c 	lds	r25, 0x0C97
    1212:	89 2b       	or	r24, r25
    1214:	d1 f4       	brne	.+52     	; 0x124a <setModeAction+0x5e>
    1216:	e0 91 a8 0c 	lds	r30, 0x0CA8
    121a:	f0 91 a9 0c 	lds	r31, 0x0CA9
    121e:	ee 0f       	add	r30, r30
    1220:	ff 1f       	adc	r31, r31
    1222:	ee 0f       	add	r30, r30
    1224:	ff 1f       	adc	r31, r31
    1226:	e2 5f       	subi	r30, 0xF2	; 242
    1228:	fd 4f       	sbci	r31, 0xFD	; 253
    122a:	80 81       	ld	r24, Z
    122c:	91 81       	ldd	r25, Z+1	; 0x01
    122e:	02 97       	sbiw	r24, 0x02	; 2
    1230:	61 f4       	brne	.+24     	; 0x124a <setModeAction+0x5e>
    1232:	61 e0       	ldi	r22, 0x01	; 1
    1234:	70 e0       	ldi	r23, 0x00	; 0
    1236:	81 e0       	ldi	r24, 0x01	; 1
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	bd df       	rcall	.-134    	; 0x11b6 <startMotion>
    123c:	81 e0       	ldi	r24, 0x01	; 1
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	90 93 97 0c 	sts	0x0C97, r25
    1244:	80 93 96 0c 	sts	0x0C96, r24
    1248:	08 95       	ret
    124a:	10 92 97 0c 	sts	0x0C97, r1
    124e:	10 92 96 0c 	sts	0x0C96, r1
    1252:	e0 91 a8 0c 	lds	r30, 0x0CA8
    1256:	f0 91 a9 0c 	lds	r31, 0x0CA9
    125a:	ee 0f       	add	r30, r30
    125c:	ff 1f       	adc	r31, r31
    125e:	ee 0f       	add	r30, r30
    1260:	ff 1f       	adc	r31, r31
    1262:	e2 5f       	subi	r30, 0xF2	; 242
    1264:	fd 4f       	sbci	r31, 0xFD	; 253
    1266:	62 81       	ldd	r22, Z+2	; 0x02
    1268:	73 81       	ldd	r23, Z+3	; 0x03
    126a:	80 81       	ld	r24, Z
    126c:	91 81       	ldd	r25, Z+1	; 0x01
    126e:	a3 df       	rcall	.-186    	; 0x11b6 <startMotion>
    1270:	80 91 a8 0c 	lds	r24, 0x0CA8
    1274:	90 91 a9 0c 	lds	r25, 0x0CA9
    1278:	01 96       	adiw	r24, 0x01	; 1
    127a:	90 93 a9 0c 	sts	0x0CA9, r25
    127e:	80 93 a8 0c 	sts	0x0CA8, r24
    1282:	20 91 10 02 	lds	r18, 0x0210
    1286:	30 91 11 02 	lds	r19, 0x0211
    128a:	28 17       	cp	r18, r24
    128c:	39 07       	cpc	r19, r25
    128e:	34 f4       	brge	.+12     	; 0x129c <setModeAction+0xb0>
    1290:	81 e0       	ldi	r24, 0x01	; 1
    1292:	90 e0       	ldi	r25, 0x00	; 0
    1294:	90 93 a9 0c 	sts	0x0CA9, r25
    1298:	80 93 a8 0c 	sts	0x0CA8, r24
    129c:	08 95       	ret

0000129e <forceMotion>:
    129e:	90 93 a7 0c 	sts	0x0CA7, r25
    12a2:	80 93 a6 0c 	sts	0x0CA6, r24
    12a6:	70 93 a5 0c 	sts	0x0CA5, r23
    12aa:	60 93 a4 0c 	sts	0x0CA4, r22
    12ae:	10 92 9d 0c 	sts	0x0C9D, r1
    12b2:	10 92 9c 0c 	sts	0x0C9C, r1
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	90 93 0d 02 	sts	0x020D, r25
    12be:	80 93 0c 02 	sts	0x020C, r24
    12c2:	10 92 a3 0c 	sts	0x0CA3, r1
    12c6:	10 92 a2 0c 	sts	0x0CA2, r1
    12ca:	08 95       	ret

000012cc <stopMotion>:
    12cc:	81 e0       	ldi	r24, 0x01	; 1
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	90 93 0d 02 	sts	0x020D, r25
    12d4:	80 93 0c 02 	sts	0x020C, r24
    12d8:	10 92 a5 0c 	sts	0x0CA5, r1
    12dc:	10 92 a4 0c 	sts	0x0CA4, r1
    12e0:	10 92 a3 0c 	sts	0x0CA3, r1
    12e4:	10 92 a2 0c 	sts	0x0CA2, r1
    12e8:	8f ef       	ldi	r24, 0xFF	; 255
    12ea:	9f ef       	ldi	r25, 0xFF	; 255
    12ec:	90 93 0b 02 	sts	0x020B, r25
    12f0:	80 93 0a 02 	sts	0x020A, r24
    12f4:	08 95       	ret

000012f6 <PrintErrorCode>:
	
}

void PrintErrorCode()
{
	if(dxl_get_rxpacket_error(ERRBIT_VOLTAGE) == 1)
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	90 e0       	ldi	r25, 0x00	; 0
    12fa:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    12fe:	01 97       	sbiw	r24, 0x01	; 1
    1300:	19 f4       	brne	.+6      	; 0x1308 <PrintErrorCode+0x12>
	printf("Input voltage error!\n");
    1302:	8f e1       	ldi	r24, 0x1F	; 31
    1304:	98 e0       	ldi	r25, 0x08	; 8
    1306:	1f d7       	rcall	.+3646   	; 0x2146 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_ANGLE) == 1)
    1308:	82 e0       	ldi	r24, 0x02	; 2
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1310:	01 97       	sbiw	r24, 0x01	; 1
    1312:	19 f4       	brne	.+6      	; 0x131a <PrintErrorCode+0x24>
	printf("Angle limit error!\n");
    1314:	84 e3       	ldi	r24, 0x34	; 52
    1316:	98 e0       	ldi	r25, 0x08	; 8
    1318:	16 d7       	rcall	.+3628   	; 0x2146 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_OVERHEAT) == 1)
    131a:	84 e0       	ldi	r24, 0x04	; 4
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1322:	01 97       	sbiw	r24, 0x01	; 1
    1324:	19 f4       	brne	.+6      	; 0x132c <PrintErrorCode+0x36>
	printf("Overheat error!\n");
    1326:	87 e4       	ldi	r24, 0x47	; 71
    1328:	98 e0       	ldi	r25, 0x08	; 8
    132a:	0d d7       	rcall	.+3610   	; 0x2146 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_RANGE) == 1)
    132c:	88 e0       	ldi	r24, 0x08	; 8
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1334:	01 97       	sbiw	r24, 0x01	; 1
    1336:	19 f4       	brne	.+6      	; 0x133e <PrintErrorCode+0x48>
	printf("Out of range error!\n");
    1338:	87 e5       	ldi	r24, 0x57	; 87
    133a:	98 e0       	ldi	r25, 0x08	; 8
    133c:	04 d7       	rcall	.+3592   	; 0x2146 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_CHECKSUM) == 1)
    133e:	80 e1       	ldi	r24, 0x10	; 16
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1346:	01 97       	sbiw	r24, 0x01	; 1
    1348:	19 f4       	brne	.+6      	; 0x1350 <PrintErrorCode+0x5a>
	printf("Checksum error!\n");
    134a:	8b e6       	ldi	r24, 0x6B	; 107
    134c:	98 e0       	ldi	r25, 0x08	; 8
    134e:	fb d6       	rcall	.+3574   	; 0x2146 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_OVERLOAD) == 1)
    1350:	80 e2       	ldi	r24, 0x20	; 32
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	19 f4       	brne	.+6      	; 0x1362 <PrintErrorCode+0x6c>
	printf("Overload error!\n");
    135c:	8b e7       	ldi	r24, 0x7B	; 123
    135e:	98 e0       	ldi	r25, 0x08	; 8
    1360:	f2 d6       	rcall	.+3556   	; 0x2146 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_INSTRUCTION) == 1)
    1362:	80 e4       	ldi	r24, 0x40	; 64
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    136a:	01 97       	sbiw	r24, 0x01	; 1
    136c:	19 f4       	brne	.+6      	; 0x1374 <PrintErrorCode+0x7e>
	printf("Instruction code error!\n");
    136e:	8b e8       	ldi	r24, 0x8B	; 139
    1370:	98 e0       	ldi	r25, 0x08	; 8
    1372:	e9 c6       	rjmp	.+3538   	; 0x2146 <puts>
    1374:	08 95       	ret

00001376 <PrintCommStatus>:
}

// Print communication result
void PrintCommStatus(int CommStatus)
{
	switch(CommStatus)
    1376:	84 30       	cpi	r24, 0x04	; 4
    1378:	91 05       	cpc	r25, r1
    137a:	91 f0       	breq	.+36     	; 0x13a0 <PrintCommStatus+0x2a>
    137c:	34 f4       	brge	.+12     	; 0x138a <PrintCommStatus+0x14>
    137e:	82 30       	cpi	r24, 0x02	; 2
    1380:	91 05       	cpc	r25, r1
    1382:	51 f0       	breq	.+20     	; 0x1398 <PrintCommStatus+0x22>
    1384:	03 97       	sbiw	r24, 0x03	; 3
    1386:	81 f0       	breq	.+32     	; 0x13a8 <PrintCommStatus+0x32>
    1388:	1f c0       	rjmp	.+62     	; 0x13c8 <PrintCommStatus+0x52>
    138a:	86 30       	cpi	r24, 0x06	; 6
    138c:	91 05       	cpc	r25, r1
    138e:	a1 f0       	breq	.+40     	; 0x13b8 <PrintCommStatus+0x42>
    1390:	7c f0       	brlt	.+30     	; 0x13b0 <PrintCommStatus+0x3a>
    1392:	07 97       	sbiw	r24, 0x07	; 7
    1394:	a9 f0       	breq	.+42     	; 0x13c0 <PrintCommStatus+0x4a>
    1396:	18 c0       	rjmp	.+48     	; 0x13c8 <PrintCommStatus+0x52>
	{
		case COMM_TXFAIL:
		printf("COMM_TXFAIL: Failed transmit instruction packet!\n");
    1398:	83 ea       	ldi	r24, 0xA3	; 163
    139a:	98 e0       	ldi	r25, 0x08	; 8
    139c:	d4 c6       	rjmp	.+3496   	; 0x2146 <puts>
		break;
    139e:	08 95       	ret

		case COMM_TXERROR:
		printf("COMM_TXERROR: Incorrect instruction packet!\n");
    13a0:	84 ed       	ldi	r24, 0xD4	; 212
    13a2:	98 e0       	ldi	r25, 0x08	; 8
    13a4:	d0 c6       	rjmp	.+3488   	; 0x2146 <puts>
		break;
    13a6:	08 95       	ret

		case COMM_RXFAIL:
		printf("COMM_RXFAIL: Failed get status packet from device!\n");
    13a8:	80 e0       	ldi	r24, 0x00	; 0
    13aa:	99 e0       	ldi	r25, 0x09	; 9
    13ac:	cc c6       	rjmp	.+3480   	; 0x2146 <puts>
		break;
    13ae:	08 95       	ret

		case COMM_RXWAITING:
		printf("COMM_RXWAITING: Now recieving status packet!\n");
    13b0:	83 e3       	ldi	r24, 0x33	; 51
    13b2:	99 e0       	ldi	r25, 0x09	; 9
    13b4:	c8 c6       	rjmp	.+3472   	; 0x2146 <puts>
		break;
    13b6:	08 95       	ret

		case COMM_RXTIMEOUT:
		printf("COMM_RXTIMEOUT: There is no status packet!\n");
    13b8:	80 e6       	ldi	r24, 0x60	; 96
    13ba:	99 e0       	ldi	r25, 0x09	; 9
    13bc:	c4 c6       	rjmp	.+3464   	; 0x2146 <puts>
		break;
    13be:	08 95       	ret

		case COMM_RXCORRUPT:
		printf("COMM_RXCORRUPT: Incorrect status packet!\n");
    13c0:	8b e8       	ldi	r24, 0x8B	; 139
    13c2:	99 e0       	ldi	r25, 0x09	; 9
    13c4:	c0 c6       	rjmp	.+3456   	; 0x2146 <puts>
		break;
    13c6:	08 95       	ret

		default:
		printf("This is unknown error code!\n");
    13c8:	84 eb       	ldi	r24, 0xB4	; 180
    13ca:	99 e0       	ldi	r25, 0x09	; 9
    13cc:	bc c6       	rjmp	.+3448   	; 0x2146 <puts>
    13ce:	08 95       	ret

000013d0 <MotorControl>:
	
	printf( "%d:%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
	EVT_GET_VOLTAGE, tmp[0],tmp[1],tmp[2],tmp[3],tmp[4],tmp[5],tmp[6],tmp[7],tmp[8],tmp[9],tmp[10],tmp[11] );
}

void MotorControl( int id, int power ){
    13d0:	0f 93       	push	r16
    13d2:	1f 93       	push	r17
    13d4:	cf 93       	push	r28
    13d6:	df 93       	push	r29
    13d8:	8c 01       	movw	r16, r24
    13da:	eb 01       	movw	r28, r22
	int CommStatus;
//	printf( "%d %d\n", id, power );
//	dxl_write_word( id, P_GOAL_SPEED_L, power );
	if(1){
		dxl_set_txpacket_id(BROADCAST_ID);
    13dc:	8e ef       	ldi	r24, 0xFE	; 254
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	0e 94 8d 00 	call	0x11a	; 0x11a <dxl_set_txpacket_id>
		dxl_set_txpacket_instruction(INST_SYNC_WRITE);
    13e4:	83 e8       	ldi	r24, 0x83	; 131
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	0e 94 90 00 	call	0x120	; 0x120 <dxl_set_txpacket_instruction>
		dxl_set_txpacket_parameter(0, P_GOAL_SPEED_L);
    13ec:	60 e2       	ldi	r22, 0x20	; 32
    13ee:	70 e0       	ldi	r23, 0x00	; 0
    13f0:	80 e0       	ldi	r24, 0x00	; 0
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(1, 2);
    13f8:	62 e0       	ldi	r22, 0x02	; 2
    13fa:	70 e0       	ldi	r23, 0x00	; 0
    13fc:	81 e0       	ldi	r24, 0x01	; 1
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(2, id);
    1404:	b8 01       	movw	r22, r16
    1406:	82 e0       	ldi	r24, 0x02	; 2
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(3, dxl_get_lowbyte(power));
    140e:	ce 01       	movw	r24, r28
    1410:	0e 94 b5 00 	call	0x16a	; 0x16a <dxl_get_lowbyte>
    1414:	bc 01       	movw	r22, r24
    1416:	83 e0       	ldi	r24, 0x03	; 3
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(4, dxl_get_highbyte(power));
    141e:	ce 01       	movw	r24, r28
    1420:	0e 94 b9 00 	call	0x172	; 0x172 <dxl_get_highbyte>
    1424:	bc 01       	movw	r22, r24
    1426:	84 e0       	ldi	r24, 0x04	; 4
    1428:	90 e0       	ldi	r25, 0x00	; 0
    142a:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_length(4+3*1);
    142e:	87 e0       	ldi	r24, 0x07	; 7
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	0e 94 98 00 	call	0x130	; 0x130 <dxl_set_txpacket_length>
		dxl_txrx_packet();
    1436:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <dxl_txrx_packet>
		CommStatus = dxl_get_result();
    143a:	0e 94 88 00 	call	0x110	; 0x110 <dxl_get_result>
		if( CommStatus == COMM_RXSUCCESS )
    143e:	81 30       	cpi	r24, 0x01	; 1
    1440:	91 05       	cpc	r25, r1
    1442:	11 f4       	brne	.+4      	; 0x1448 <MotorControl+0x78>
			PrintErrorCode();
    1444:	58 df       	rcall	.-336    	; 0x12f6 <PrintErrorCode>
    1446:	01 c0       	rjmp	.+2      	; 0x144a <MotorControl+0x7a>
		else
			PrintCommStatus(CommStatus);
    1448:	96 df       	rcall	.-212    	; 0x1376 <PrintCommStatus>
	}
}
    144a:	df 91       	pop	r29
    144c:	cf 91       	pop	r28
    144e:	1f 91       	pop	r17
    1450:	0f 91       	pop	r16
    1452:	08 95       	ret

00001454 <ServoControl>:
//	printf( "%d:%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d: %d:\n",
//	EVT_ACTION, speed[0],speed[1],speed[2],speed[3],speed[4],
//	speed[5],speed[6],speed[7],speed[8],speed[9],speed[10],speed[11], movingTime );
}

void ServoControl( int act ){
    1454:	2f 92       	push	r2
    1456:	3f 92       	push	r3
    1458:	4f 92       	push	r4
    145a:	5f 92       	push	r5
    145c:	6f 92       	push	r6
    145e:	7f 92       	push	r7
    1460:	8f 92       	push	r8
    1462:	9f 92       	push	r9
    1464:	af 92       	push	r10
    1466:	bf 92       	push	r11
    1468:	cf 92       	push	r12
    146a:	df 92       	push	r13
    146c:	ef 92       	push	r14
    146e:	ff 92       	push	r15
    1470:	0f 93       	push	r16
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
    1478:	cd b7       	in	r28, 0x3d	; 61
    147a:	de b7       	in	r29, 0x3e	; 62
    147c:	ec 97       	sbiw	r28, 0x3c	; 60
    147e:	0f b6       	in	r0, 0x3f	; 63
    1480:	f8 94       	cli
    1482:	de bf       	out	0x3e, r29	; 62
    1484:	0f be       	out	0x3f, r0	; 63
    1486:	cd bf       	out	0x3d, r28	; 61
    1488:	98 af       	std	Y+56, r25	; 0x38
    148a:	8f ab       	std	Y+55, r24	; 0x37
	int i;
	int CommStatus = 0;
	if( act >= ACT_MAX ){
    148c:	c2 97       	sbiw	r24, 0x32	; 50
    148e:	0c f0       	brlt	.+2      	; 0x1492 <ServoControl+0x3e>
    1490:	65 c1       	rjmp	.+714    	; 0x175c <ServoControl+0x308>
	}
	
	//GetAngle
	int angle = 0;
	int diffMax = 0;
	int angleDiff[SERVO_MAX] = {0};
    1492:	fe 01       	movw	r30, r28
    1494:	31 96       	adiw	r30, 0x01	; 1
    1496:	88 e1       	ldi	r24, 0x18	; 24
    1498:	df 01       	movw	r26, r30
    149a:	1d 92       	st	X+, r1
    149c:	8a 95       	dec	r24
    149e:	e9 f7       	brne	.-6      	; 0x149a <ServoControl+0x46>
    14a0:	2a e1       	ldi	r18, 0x1A	; 26
    14a2:	4f a9       	ldd	r20, Y+55	; 0x37
    14a4:	58 ad       	ldd	r21, Y+56	; 0x38
    14a6:	24 9f       	mul	r18, r20
    14a8:	c0 01       	movw	r24, r0
    14aa:	25 9f       	mul	r18, r21
    14ac:	90 0d       	add	r25, r0
    14ae:	11 24       	eor	r1, r1
    14b0:	dc 01       	movw	r26, r24
    14b2:	aa 56       	subi	r26, 0x6A	; 106
    14b4:	bd 4f       	sbci	r27, 0xFD	; 253
    14b6:	ba af       	std	Y+58, r27	; 0x3a
    14b8:	a9 af       	std	Y+57, r26	; 0x39
    14ba:	6e 2e       	mov	r6, r30
    14bc:	7f 2e       	mov	r7, r31
    14be:	0f 2e       	mov	r0, r31
    14c0:	f2 ec       	ldi	r31, 0xC2	; 194
    14c2:	8f 2e       	mov	r8, r31
    14c4:	f7 e0       	ldi	r31, 0x07	; 7
    14c6:	9f 2e       	mov	r9, r31
    14c8:	f0 2d       	mov	r31, r0
    14ca:	7f 01       	movw	r14, r30
    14cc:	5d 01       	movw	r10, r26
    14ce:	0a ea       	ldi	r16, 0xAA	; 170
    14d0:	17 e0       	ldi	r17, 0x07	; 7
		return;
	}
	
	//GetAngle
	int angle = 0;
	int diffMax = 0;
    14d2:	c1 2c       	mov	r12, r1
    14d4:	d1 2c       	mov	r13, r1
	int angleDiff[SERVO_MAX] = {0};
	for(int i=0; i<SERVO_MAX; i++ ){
//		if( motionFirst < 0 ){
			angle = dxl_read_word( servoId[i], P_PRESENT_POSITION_L );
    14d6:	64 e2       	ldi	r22, 0x24	; 36
    14d8:	70 e0       	ldi	r23, 0x00	; 0
    14da:	f8 01       	movw	r30, r16
    14dc:	81 91       	ld	r24, Z+
    14de:	91 91       	ld	r25, Z+
    14e0:	8f 01       	movw	r16, r30
    14e2:	0e 94 15 02 	call	0x42a	; 0x42a <dxl_read_word>
//		}else{
//			angle = angleList[motionFirst][i];
//		}
		angleDiff[i] = angleList[act][i] - angle;
    14e6:	d5 01       	movw	r26, r10
    14e8:	2d 91       	ld	r18, X+
    14ea:	3d 91       	ld	r19, X+
    14ec:	5d 01       	movw	r10, r26
    14ee:	f9 01       	movw	r30, r18
    14f0:	e8 1b       	sub	r30, r24
    14f2:	f9 0b       	sbc	r31, r25
    14f4:	cf 01       	movw	r24, r30
		if( angleDiff[i] < 0 ){
    14f6:	22 f0       	brmi	.+8      	; 0x1500 <ServoControl+0xac>
//		if( motionFirst < 0 ){
			angle = dxl_read_word( servoId[i], P_PRESENT_POSITION_L );
//		}else{
//			angle = angleList[motionFirst][i];
//		}
		angleDiff[i] = angleList[act][i] - angle;
    14f8:	d7 01       	movw	r26, r14
    14fa:	ed 93       	st	X+, r30
    14fc:	fc 93       	st	X, r31
    14fe:	06 c0       	rjmp	.+12     	; 0x150c <ServoControl+0xb8>
		if( angleDiff[i] < 0 ){
			angleDiff[i] = angleDiff[i] * -1;
    1500:	91 95       	neg	r25
    1502:	81 95       	neg	r24
    1504:	91 09       	sbc	r25, r1
    1506:	f7 01       	movw	r30, r14
    1508:	91 83       	std	Z+1, r25	; 0x01
    150a:	80 83       	st	Z, r24
		}
		if( diffMax < angleDiff[i] ){
    150c:	d7 01       	movw	r26, r14
    150e:	8d 91       	ld	r24, X+
    1510:	9d 91       	ld	r25, X+
    1512:	7d 01       	movw	r14, r26
    1514:	c8 16       	cp	r12, r24
    1516:	d9 06       	cpc	r13, r25
    1518:	0c f4       	brge	.+2      	; 0x151c <ServoControl+0xc8>
    151a:	6c 01       	movw	r12, r24
	
	//GetAngle
	int angle = 0;
	int diffMax = 0;
	int angleDiff[SERVO_MAX] = {0};
	for(int i=0; i<SERVO_MAX; i++ ){
    151c:	08 15       	cp	r16, r8
    151e:	19 05       	cpc	r17, r9
    1520:	d1 f6       	brne	.-76     	; 0x14d6 <ServoControl+0x82>
			diffMax = angleDiff[i];
		}
	}
//	motionFirst = act;
	
	int speed[SERVO_MAX] = {100};
    1522:	1e 01       	movw	r2, r28
    1524:	b9 e1       	ldi	r27, 0x19	; 25
    1526:	2b 0e       	add	r2, r27
    1528:	31 1c       	adc	r3, r1
    152a:	88 e1       	ldi	r24, 0x18	; 24
    152c:	f1 01       	movw	r30, r2
    152e:	11 92       	st	Z+, r1
    1530:	8a 95       	dec	r24
    1532:	e9 f7       	brne	.-6      	; 0x152e <ServoControl+0xda>
    1534:	84 e6       	ldi	r24, 0x64	; 100
    1536:	90 e0       	ldi	r25, 0x00	; 0
    1538:	9a 8f       	std	Y+26, r25	; 0x1a
    153a:	89 8f       	std	Y+25, r24	; 0x19
	for(int i=0; i<SERVO_MAX; i++ ){
		speed[i] = (int)((float)(angleList[act][SERVO_MAX]) * ((float)angleDiff[i] / diffMax));
    153c:	8a e1       	ldi	r24, 0x1A	; 26
    153e:	2f a9       	ldd	r18, Y+55	; 0x37
    1540:	38 ad       	ldd	r19, Y+56	; 0x38
    1542:	82 9f       	mul	r24, r18
    1544:	f0 01       	movw	r30, r0
    1546:	83 9f       	mul	r24, r19
    1548:	f0 0d       	add	r31, r0
    154a:	11 24       	eor	r1, r1
    154c:	ea 56       	subi	r30, 0x6A	; 106
    154e:	fd 4f       	sbci	r31, 0xFD	; 253
    1550:	60 8d       	ldd	r22, Z+24	; 0x18
    1552:	71 8d       	ldd	r23, Z+25	; 0x19
    1554:	88 27       	eor	r24, r24
    1556:	77 fd       	sbrc	r23, 7
    1558:	80 95       	com	r24
    155a:	98 2f       	mov	r25, r24
    155c:	ca d3       	rcall	.+1940   	; 0x1cf2 <__floatsisf>
    155e:	6b ab       	std	Y+51, r22	; 0x33
    1560:	7c ab       	std	Y+52, r23	; 0x34
    1562:	8d ab       	std	Y+53, r24	; 0x35
    1564:	9e ab       	std	Y+54, r25	; 0x36
    1566:	2b ae       	std	Y+59, r2	; 0x3b
    1568:	3c ae       	std	Y+60, r3	; 0x3c
    156a:	3a aa       	std	Y+50, r3	; 0x32
    156c:	29 aa       	std	Y+49, r2	; 0x31
    156e:	a6 2c       	mov	r10, r6
    1570:	b7 2c       	mov	r11, r7
    1572:	ee 24       	eor	r14, r14
    1574:	d7 fc       	sbrc	r13, 7
    1576:	e0 94       	com	r14
    1578:	fe 2c       	mov	r15, r14
    157a:	d5 01       	movw	r26, r10
    157c:	0d 91       	ld	r16, X+
    157e:	1d 91       	ld	r17, X+
    1580:	5d 01       	movw	r10, r26
    1582:	c7 01       	movw	r24, r14
    1584:	b6 01       	movw	r22, r12
    1586:	b5 d3       	rcall	.+1898   	; 0x1cf2 <__floatsisf>
    1588:	2b 01       	movw	r4, r22
    158a:	3c 01       	movw	r6, r24
    158c:	b8 01       	movw	r22, r16
    158e:	88 27       	eor	r24, r24
    1590:	77 fd       	sbrc	r23, 7
    1592:	80 95       	com	r24
    1594:	98 2f       	mov	r25, r24
    1596:	ad d3       	rcall	.+1882   	; 0x1cf2 <__floatsisf>
    1598:	a3 01       	movw	r20, r6
    159a:	92 01       	movw	r18, r4
    159c:	0f d3       	rcall	.+1566   	; 0x1bbc <__divsf3>
    159e:	9b 01       	movw	r18, r22
    15a0:	ac 01       	movw	r20, r24
    15a2:	6b a9       	ldd	r22, Y+51	; 0x33
    15a4:	7c a9       	ldd	r23, Y+52	; 0x34
    15a6:	8d a9       	ldd	r24, Y+53	; 0x35
    15a8:	9e a9       	ldd	r25, Y+54	; 0x36
    15aa:	2f d4       	rcall	.+2142   	; 0x1e0a <__mulsf3>
    15ac:	6f d3       	rcall	.+1758   	; 0x1c8c <__fixsfsi>
		if( speed[i] == 0 ){
    15ae:	61 15       	cp	r22, r1
    15b0:	71 05       	cpc	r23, r1
    15b2:	21 f0       	breq	.+8      	; 0x15bc <ServoControl+0x168>
	}
//	motionFirst = act;
	
	int speed[SERVO_MAX] = {100};
	for(int i=0; i<SERVO_MAX; i++ ){
		speed[i] = (int)((float)(angleList[act][SERVO_MAX]) * ((float)angleDiff[i] / diffMax));
    15b4:	f1 01       	movw	r30, r2
    15b6:	71 83       	std	Z+1, r23	; 0x01
    15b8:	60 83       	st	Z, r22
    15ba:	05 c0       	rjmp	.+10     	; 0x15c6 <ServoControl+0x172>
		if( speed[i] == 0 ){
			speed[i] = 1;
    15bc:	e1 e0       	ldi	r30, 0x01	; 1
    15be:	f0 e0       	ldi	r31, 0x00	; 0
    15c0:	d1 01       	movw	r26, r2
    15c2:	ed 93       	st	X+, r30
    15c4:	fc 93       	st	X, r31
    15c6:	f2 e0       	ldi	r31, 0x02	; 2
    15c8:	2f 0e       	add	r2, r31
    15ca:	31 1c       	adc	r3, r1
		}
	}
//	motionFirst = act;
	
	int speed[SERVO_MAX] = {100};
	for(int i=0; i<SERVO_MAX; i++ ){
    15cc:	29 a9       	ldd	r18, Y+49	; 0x31
    15ce:	3a a9       	ldd	r19, Y+50	; 0x32
    15d0:	a2 16       	cp	r10, r18
    15d2:	b3 06       	cpc	r11, r19
    15d4:	91 f6       	brne	.-92     	; 0x157a <ServoControl+0x126>
		}
	}

//    diffmaxTest[motionCount-1] = diffMax;
//	movingTime = ((float)CYCLE_TIME/VALUE_MAX) * ((float)VALUE_MAX / angleList[act][SERVO_MAX]) * diffMax;
    movingTime = diffMax * (float)(((VALUE_MAX*10)/angleList[act][SERVO_MAX])/2);
    15d6:	8a e1       	ldi	r24, 0x1A	; 26
    15d8:	4f a9       	ldd	r20, Y+55	; 0x37
    15da:	58 ad       	ldd	r21, Y+56	; 0x38
    15dc:	84 9f       	mul	r24, r20
    15de:	f0 01       	movw	r30, r0
    15e0:	85 9f       	mul	r24, r21
    15e2:	f0 0d       	add	r31, r0
    15e4:	11 24       	eor	r1, r1
    15e6:	ea 56       	subi	r30, 0x6A	; 106
    15e8:	fd 4f       	sbci	r31, 0xFD	; 253
    15ea:	60 8d       	ldd	r22, Z+24	; 0x18
    15ec:	71 8d       	ldd	r23, Z+25	; 0x19
    15ee:	8b ef       	ldi	r24, 0xFB	; 251
    15f0:	93 e1       	ldi	r25, 0x13	; 19
    15f2:	9a d4       	rcall	.+2356   	; 0x1f28 <__divmodhi4>
    15f4:	88 27       	eor	r24, r24
    15f6:	77 fd       	sbrc	r23, 7
    15f8:	80 95       	com	r24
    15fa:	98 2f       	mov	r25, r24
    15fc:	7a d3       	rcall	.+1780   	; 0x1cf2 <__floatsisf>
    15fe:	9b 01       	movw	r18, r22
    1600:	ac 01       	movw	r20, r24
    1602:	c3 01       	movw	r24, r6
    1604:	b2 01       	movw	r22, r4
    1606:	01 d4       	rcall	.+2050   	; 0x1e0a <__mulsf3>
    1608:	41 d3       	rcall	.+1666   	; 0x1c8c <__fixsfsi>
	if( movingTime < MAIN_DELAY ){
    160a:	6a 30       	cpi	r22, 0x0A	; 10
    160c:	71 05       	cpc	r23, r1
    160e:	2c f0       	brlt	.+10     	; 0x161a <ServoControl+0x1c6>
		}
	}

//    diffmaxTest[motionCount-1] = diffMax;
//	movingTime = ((float)CYCLE_TIME/VALUE_MAX) * ((float)VALUE_MAX / angleList[act][SERVO_MAX]) * diffMax;
    movingTime = diffMax * (float)(((VALUE_MAX*10)/angleList[act][SERVO_MAX])/2);
    1610:	70 93 a1 0c 	sts	0x0CA1, r23
    1614:	60 93 a0 0c 	sts	0x0CA0, r22
    1618:	06 c0       	rjmp	.+12     	; 0x1626 <ServoControl+0x1d2>
	if( movingTime < MAIN_DELAY ){
		movingTime = MAIN_DELAY;
    161a:	8a e0       	ldi	r24, 0x0A	; 10
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	90 93 a1 0c 	sts	0x0CA1, r25
    1622:	80 93 a0 0c 	sts	0x0CA0, r24
	}
	
	//Speed
	dxl_set_txpacket_id(BROADCAST_ID);
    1626:	8e ef       	ldi	r24, 0xFE	; 254
    1628:	90 e0       	ldi	r25, 0x00	; 0
    162a:	0e 94 8d 00 	call	0x11a	; 0x11a <dxl_set_txpacket_id>
	dxl_set_txpacket_instruction(INST_SYNC_WRITE);
    162e:	83 e8       	ldi	r24, 0x83	; 131
    1630:	90 e0       	ldi	r25, 0x00	; 0
    1632:	0e 94 90 00 	call	0x120	; 0x120 <dxl_set_txpacket_instruction>
	dxl_set_txpacket_parameter(0, P_GOAL_SPEED_L);
    1636:	60 e2       	ldi	r22, 0x20	; 32
    1638:	70 e0       	ldi	r23, 0x00	; 0
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
	dxl_set_txpacket_parameter(1, 2);
    1642:	62 e0       	ldi	r22, 0x02	; 2
    1644:	70 e0       	ldi	r23, 0x00	; 0
    1646:	81 e0       	ldi	r24, 0x01	; 1
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    164e:	cb ac       	ldd	r12, Y+59	; 0x3b
    1650:	dc ac       	ldd	r13, Y+60	; 0x3c
    1652:	0f 2e       	mov	r0, r31
    1654:	fa ea       	ldi	r31, 0xAA	; 170
    1656:	ef 2e       	mov	r14, r31
    1658:	f7 e0       	ldi	r31, 0x07	; 7
    165a:	ff 2e       	mov	r15, r31
    165c:	f0 2d       	mov	r31, r0
    165e:	02 e0       	ldi	r16, 0x02	; 2
    1660:	10 e0       	ldi	r17, 0x00	; 0
	for( i=0; i<SERVO_MAX; i++ ){
		dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
    1662:	d7 01       	movw	r26, r14
    1664:	6d 91       	ld	r22, X+
    1666:	7d 91       	ld	r23, X+
    1668:	7d 01       	movw	r14, r26
    166a:	c8 01       	movw	r24, r16
    166c:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(speed[i]));
    1670:	f6 01       	movw	r30, r12
    1672:	a1 90       	ld	r10, Z+
    1674:	b1 90       	ld	r11, Z+
    1676:	6f 01       	movw	r12, r30
    1678:	c5 01       	movw	r24, r10
    167a:	0e 94 b5 00 	call	0x16a	; 0x16a <dxl_get_lowbyte>
    167e:	bc 01       	movw	r22, r24
    1680:	c8 01       	movw	r24, r16
    1682:	01 96       	adiw	r24, 0x01	; 1
    1684:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(speed[i]));
    1688:	c5 01       	movw	r24, r10
    168a:	0e 94 b9 00 	call	0x172	; 0x172 <dxl_get_highbyte>
    168e:	bc 01       	movw	r22, r24
    1690:	c8 01       	movw	r24, r16
    1692:	02 96       	adiw	r24, 0x02	; 2
    1694:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    1698:	0d 5f       	subi	r16, 0xFD	; 253
    169a:	1f 4f       	sbci	r17, 0xFF	; 255
	//Speed
	dxl_set_txpacket_id(BROADCAST_ID);
	dxl_set_txpacket_instruction(INST_SYNC_WRITE);
	dxl_set_txpacket_parameter(0, P_GOAL_SPEED_L);
	dxl_set_txpacket_parameter(1, 2);
	for( i=0; i<SERVO_MAX; i++ ){
    169c:	e8 14       	cp	r14, r8
    169e:	f9 04       	cpc	r15, r9
    16a0:	01 f7       	brne	.-64     	; 0x1662 <ServoControl+0x20e>
		dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
		dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(speed[i]));
		dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(speed[i]));
	}
	dxl_set_txpacket_length(4+3*SERVO_MAX);
    16a2:	88 e2       	ldi	r24, 0x28	; 40
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	0e 94 98 00 	call	0x130	; 0x130 <dxl_set_txpacket_length>
	dxl_txrx_packet();
    16aa:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <dxl_txrx_packet>
	CommStatus = dxl_get_result();
    16ae:	0e 94 88 00 	call	0x110	; 0x110 <dxl_get_result>
	if( CommStatus == COMM_RXSUCCESS ){
    16b2:	81 30       	cpi	r24, 0x01	; 1
    16b4:	91 05       	cpc	r25, r1
    16b6:	09 f0       	breq	.+2      	; 0x16ba <ServoControl+0x266>
    16b8:	50 c0       	rjmp	.+160    	; 0x175a <ServoControl+0x306>
		PrintErrorCode();
    16ba:	1d de       	rcall	.-966    	; 0x12f6 <PrintErrorCode>
		
		//Angle
		dxl_set_txpacket_id(BROADCAST_ID);
    16bc:	8e ef       	ldi	r24, 0xFE	; 254
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	0e 94 8d 00 	call	0x11a	; 0x11a <dxl_set_txpacket_id>
		dxl_set_txpacket_instruction(INST_SYNC_WRITE);
    16c4:	83 e8       	ldi	r24, 0x83	; 131
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	0e 94 90 00 	call	0x120	; 0x120 <dxl_set_txpacket_instruction>
		dxl_set_txpacket_parameter(0, P_GOAL_POSITION_L);
    16cc:	6e e1       	ldi	r22, 0x1E	; 30
    16ce:	70 e0       	ldi	r23, 0x00	; 0
    16d0:	80 e0       	ldi	r24, 0x00	; 0
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(1, 2);
    16d8:	62 e0       	ldi	r22, 0x02	; 2
    16da:	70 e0       	ldi	r23, 0x00	; 0
    16dc:	81 e0       	ldi	r24, 0x01	; 1
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    16e4:	c9 ac       	ldd	r12, Y+57	; 0x39
    16e6:	da ac       	ldd	r13, Y+58	; 0x3a
    16e8:	0f 2e       	mov	r0, r31
    16ea:	fa ea       	ldi	r31, 0xAA	; 170
    16ec:	ef 2e       	mov	r14, r31
    16ee:	f7 e0       	ldi	r31, 0x07	; 7
    16f0:	ff 2e       	mov	r15, r31
    16f2:	f0 2d       	mov	r31, r0
    16f4:	02 e0       	ldi	r16, 0x02	; 2
    16f6:	10 e0       	ldi	r17, 0x00	; 0
		for( i=0; i<SERVO_MAX; i++ ){
			dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
    16f8:	d7 01       	movw	r26, r14
    16fa:	6d 91       	ld	r22, X+
    16fc:	7d 91       	ld	r23, X+
    16fe:	7d 01       	movw	r14, r26
    1700:	c8 01       	movw	r24, r16
    1702:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    1706:	56 01       	movw	r10, r12
			dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(angleList[act][i]));
    1708:	f6 01       	movw	r30, r12
    170a:	81 91       	ld	r24, Z+
    170c:	91 91       	ld	r25, Z+
    170e:	6f 01       	movw	r12, r30
    1710:	0e 94 b5 00 	call	0x16a	; 0x16a <dxl_get_lowbyte>
    1714:	bc 01       	movw	r22, r24
    1716:	c8 01       	movw	r24, r16
    1718:	01 96       	adiw	r24, 0x01	; 1
    171a:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
			dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(angleList[act][i]));
    171e:	d5 01       	movw	r26, r10
    1720:	8d 91       	ld	r24, X+
    1722:	9c 91       	ld	r25, X
    1724:	0e 94 b9 00 	call	0x172	; 0x172 <dxl_get_highbyte>
    1728:	bc 01       	movw	r22, r24
    172a:	c8 01       	movw	r24, r16
    172c:	02 96       	adiw	r24, 0x02	; 2
    172e:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    1732:	0d 5f       	subi	r16, 0xFD	; 253
    1734:	1f 4f       	sbci	r17, 0xFF	; 255
		//Angle
		dxl_set_txpacket_id(BROADCAST_ID);
		dxl_set_txpacket_instruction(INST_SYNC_WRITE);
		dxl_set_txpacket_parameter(0, P_GOAL_POSITION_L);
		dxl_set_txpacket_parameter(1, 2);
		for( i=0; i<SERVO_MAX; i++ ){
    1736:	e8 14       	cp	r14, r8
    1738:	f9 04       	cpc	r15, r9
    173a:	f1 f6       	brne	.-68     	; 0x16f8 <ServoControl+0x2a4>
			dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
			dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(angleList[act][i]));
			dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(angleList[act][i]));
		}
		dxl_set_txpacket_length(4+3*SERVO_MAX);
    173c:	88 e2       	ldi	r24, 0x28	; 40
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	0e 94 98 00 	call	0x130	; 0x130 <dxl_set_txpacket_length>
		dxl_txrx_packet();
    1744:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <dxl_txrx_packet>
		CommStatus = dxl_get_result();
    1748:	0e 94 88 00 	call	0x110	; 0x110 <dxl_get_result>
		if( CommStatus == COMM_RXSUCCESS ){
    174c:	81 30       	cpi	r24, 0x01	; 1
    174e:	91 05       	cpc	r25, r1
    1750:	11 f4       	brne	.+4      	; 0x1756 <ServoControl+0x302>
			PrintErrorCode();
    1752:	d1 dd       	rcall	.-1118   	; 0x12f6 <PrintErrorCode>
    1754:	03 c0       	rjmp	.+6      	; 0x175c <ServoControl+0x308>
		}else{
			PrintCommStatus(CommStatus);
    1756:	0f de       	rcall	.-994    	; 0x1376 <PrintCommStatus>
    1758:	01 c0       	rjmp	.+2      	; 0x175c <ServoControl+0x308>
		}
	}else{
		PrintCommStatus(CommStatus);
    175a:	0d de       	rcall	.-998    	; 0x1376 <PrintCommStatus>
	}
}
    175c:	ec 96       	adiw	r28, 0x3c	; 60
    175e:	0f b6       	in	r0, 0x3f	; 63
    1760:	f8 94       	cli
    1762:	de bf       	out	0x3e, r29	; 62
    1764:	0f be       	out	0x3f, r0	; 63
    1766:	cd bf       	out	0x3d, r28	; 61
    1768:	df 91       	pop	r29
    176a:	cf 91       	pop	r28
    176c:	1f 91       	pop	r17
    176e:	0f 91       	pop	r16
    1770:	ff 90       	pop	r15
    1772:	ef 90       	pop	r14
    1774:	df 90       	pop	r13
    1776:	cf 90       	pop	r12
    1778:	bf 90       	pop	r11
    177a:	af 90       	pop	r10
    177c:	9f 90       	pop	r9
    177e:	8f 90       	pop	r8
    1780:	7f 90       	pop	r7
    1782:	6f 90       	pop	r6
    1784:	5f 90       	pop	r5
    1786:	4f 90       	pop	r4
    1788:	3f 90       	pop	r3
    178a:	2f 90       	pop	r2
    178c:	08 95       	ret

0000178e <setMode>:
}

void setMode(void){
	//		PORTC = ~(LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY);
	//		PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
	if( ~PIND & SW_BUTTON ){
    178e:	48 99       	sbic	0x09, 0	; 9
    1790:	0e c0       	rjmp	.+28     	; 0x17ae <setMode+0x20>
		if( SwitchSts == 0 ){
    1792:	80 91 ac 0c 	lds	r24, 0x0CAC
    1796:	90 91 ad 0c 	lds	r25, 0x0CAD
    179a:	89 2b       	or	r24, r25
    179c:	09 f0       	breq	.+2      	; 0x17a0 <setMode+0x12>
    179e:	50 c0       	rjmp	.+160    	; 0x1840 <setMode+0xb2>
			SwitchSts = 1;
    17a0:	81 e0       	ldi	r24, 0x01	; 1
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	90 93 ad 0c 	sts	0x0CAD, r25
    17a8:	80 93 ac 0c 	sts	0x0CAC, r24
    17ac:	08 95       	ret
		}
	}else{
		if( SwitchSts == 1 ){
    17ae:	80 91 ac 0c 	lds	r24, 0x0CAC
    17b2:	90 91 ad 0c 	lds	r25, 0x0CAD
    17b6:	01 97       	sbiw	r24, 0x01	; 1
    17b8:	09 f0       	breq	.+2      	; 0x17bc <setMode+0x2e>
    17ba:	42 c0       	rjmp	.+132    	; 0x1840 <setMode+0xb2>
			SwitchSts = 0;
    17bc:	10 92 ad 0c 	sts	0x0CAD, r1
    17c0:	10 92 ac 0c 	sts	0x0CAC, r1
			mMode++;
    17c4:	80 91 ae 0c 	lds	r24, 0x0CAE
    17c8:	90 91 af 0c 	lds	r25, 0x0CAF
    17cc:	9c 01       	movw	r18, r24
    17ce:	2f 5f       	subi	r18, 0xFF	; 255
    17d0:	3f 4f       	sbci	r19, 0xFF	; 255
    17d2:	30 93 af 0c 	sts	0x0CAF, r19
    17d6:	20 93 ae 0c 	sts	0x0CAE, r18
			if( (LED_MAX - mMode) <= 0 ){
    17da:	26 e0       	ldi	r18, 0x06	; 6
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	a9 01       	movw	r20, r18
    17e0:	48 1b       	sub	r20, r24
    17e2:	59 0b       	sbc	r21, r25
    17e4:	ca 01       	movw	r24, r20
    17e6:	18 16       	cp	r1, r24
    17e8:	19 06       	cpc	r1, r25
    17ea:	3c f0       	brlt	.+14     	; 0x17fa <setMode+0x6c>
				PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM;
    17ec:	8f e3       	ldi	r24, 0x3F	; 63
    17ee:	88 b9       	out	0x08, r24	; 8
				mMode = MODE_0;
    17f0:	10 92 af 0c 	sts	0x0CAF, r1
    17f4:	10 92 ae 0c 	sts	0x0CAE, r1
    17f8:	0b c0       	rjmp	.+22     	; 0x1810 <setMode+0x82>
			}else{
				PORTC = ~(1 << (LED_MAX - mMode));
    17fa:	21 e0       	ldi	r18, 0x01	; 1
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	a9 01       	movw	r20, r18
    1800:	02 c0       	rjmp	.+4      	; 0x1806 <setMode+0x78>
    1802:	44 0f       	add	r20, r20
    1804:	55 1f       	adc	r21, r21
    1806:	8a 95       	dec	r24
    1808:	e2 f7       	brpl	.-8      	; 0x1802 <setMode+0x74>
    180a:	ca 01       	movw	r24, r20
    180c:	80 95       	com	r24
    180e:	88 b9       	out	0x08, r24	; 8
			}
			stopMotion();
    1810:	5d dd       	rcall	.-1350   	; 0x12cc <stopMotion>
			ServoControl( 0 );
    1812:	80 e0       	ldi	r24, 0x00	; 0
    1814:	90 e0       	ldi	r25, 0x00	; 0
    1816:	1e de       	rcall	.-964    	; 0x1454 <ServoControl>

			modeCounter = 1;
    1818:	81 e0       	ldi	r24, 0x01	; 1
    181a:	90 e0       	ldi	r25, 0x00	; 0
    181c:	90 93 a9 0c 	sts	0x0CA9, r25
    1820:	80 93 a8 0c 	sts	0x0CA8, r24
			if( mMode == MODE_1 ){
    1824:	80 91 ae 0c 	lds	r24, 0x0CAE
    1828:	90 91 af 0c 	lds	r25, 0x0CAF
    182c:	01 97       	sbiw	r24, 0x01	; 1
    182e:	41 f4       	brne	.+16     	; 0x1840 <setMode+0xb2>
				modeWait = mode1act[0][0];
    1830:	80 91 0e 02 	lds	r24, 0x020E
    1834:	90 91 0f 02 	lds	r25, 0x020F
    1838:	90 93 ab 0c 	sts	0x0CAB, r25
    183c:	80 93 aa 0c 	sts	0x0CAA, r24
    1840:	08 95       	ret

00001842 <move>:
	motionTime = 0;
	motionFirst = -1;
}

void move(void){
	if( motionTimes > 0 && isMoving() == 0 ){
    1842:	80 91 a4 0c 	lds	r24, 0x0CA4
    1846:	90 91 a5 0c 	lds	r25, 0x0CA5
    184a:	18 16       	cp	r1, r24
    184c:	19 06       	cpc	r1, r25
    184e:	0c f0       	brlt	.+2      	; 0x1852 <move+0x10>
    1850:	94 c0       	rjmp	.+296    	; 0x197a <move+0x138>
    1852:	bb da       	rcall	.-2698   	; 0xdca <isMoving>
    1854:	89 2b       	or	r24, r25
    1856:	09 f0       	breq	.+2      	; 0x185a <move+0x18>
    1858:	90 c0       	rjmp	.+288    	; 0x197a <move+0x138>
		int *motion = motionList[motionNumber];
    185a:	80 91 a6 0c 	lds	r24, 0x0CA6
    185e:	90 91 a7 0c 	lds	r25, 0x0CA7
    1862:	fc 01       	movw	r30, r24
    1864:	ee 0f       	add	r30, r30
    1866:	ff 1f       	adc	r31, r31
    1868:	e6 5c       	subi	r30, 0xC6	; 198
    186a:	fd 4f       	sbci	r31, 0xFD	; 253
    186c:	01 90       	ld	r0, Z+
    186e:	f0 81       	ld	r31, Z
    1870:	e0 2d       	mov	r30, r0
		int max = motion[0];
		if( motionCount > max ){
    1872:	40 81       	ld	r20, Z
    1874:	51 81       	ldd	r21, Z+1	; 0x01
    1876:	20 91 0c 02 	lds	r18, 0x020C
    187a:	30 91 0d 02 	lds	r19, 0x020D
    187e:	42 17       	cp	r20, r18
    1880:	53 07       	cpc	r21, r19
    1882:	0c f0       	brlt	.+2      	; 0x1886 <move+0x44>
    1884:	66 c0       	rjmp	.+204    	; 0x1952 <move+0x110>
//			printf("#%d,%d,%d,%d,%d,%d;\n", diffmaxTest[0],diffmaxTest[1],diffmaxTest[2],diffmaxTest[3],diffmaxTest[4],diffmaxTest[5] );
			motionCount = 1;
    1886:	21 e0       	ldi	r18, 0x01	; 1
    1888:	30 e0       	ldi	r19, 0x00	; 0
    188a:	30 93 0d 02 	sts	0x020D, r19
    188e:	20 93 0c 02 	sts	0x020C, r18
			if( motionTimes < 99 && --motionTimes <= 0 ){
    1892:	20 91 a4 0c 	lds	r18, 0x0CA4
    1896:	30 91 a5 0c 	lds	r19, 0x0CA5
    189a:	23 36       	cpi	r18, 0x63	; 99
    189c:	31 05       	cpc	r19, r1
    189e:	0c f0       	brlt	.+2      	; 0x18a2 <move+0x60>
    18a0:	58 c0       	rjmp	.+176    	; 0x1952 <move+0x110>
    18a2:	21 50       	subi	r18, 0x01	; 1
    18a4:	31 09       	sbc	r19, r1
    18a6:	30 93 a5 0c 	sts	0x0CA5, r19
    18aa:	20 93 a4 0c 	sts	0x0CA4, r18
    18ae:	12 16       	cp	r1, r18
    18b0:	13 06       	cpc	r1, r19
    18b2:	0c f4       	brge	.+2      	; 0x18b6 <move+0x74>
    18b4:	4e c0       	rjmp	.+156    	; 0x1952 <move+0x110>
				if( nextMotionTimes > 0 ){
    18b6:	40 91 9c 0c 	lds	r20, 0x0C9C
    18ba:	50 91 9d 0c 	lds	r21, 0x0C9D
    18be:	14 16       	cp	r1, r20
    18c0:	15 06       	cpc	r1, r21
    18c2:	0c f0       	brlt	.+2      	; 0x18c6 <move+0x84>
    18c4:	44 c0       	rjmp	.+136    	; 0x194e <move+0x10c>
					if( (nextMotionNumber == ACT_WALK1 || nextMotionNumber == ACT_WALK2) &&
    18c6:	20 91 9e 0c 	lds	r18, 0x0C9E
    18ca:	30 91 9f 0c 	lds	r19, 0x0C9F
    18ce:	b9 01       	movw	r22, r18
    18d0:	62 50       	subi	r22, 0x02	; 2
    18d2:	71 09       	sbc	r23, r1
    18d4:	62 30       	cpi	r22, 0x02	; 2
    18d6:	71 05       	cpc	r23, r1
    18d8:	68 f4       	brcc	.+26     	; 0x18f4 <move+0xb2>
    18da:	01 97       	sbiw	r24, 0x01	; 1
    18dc:	11 f1       	breq	.+68     	; 0x1922 <move+0xe0>
						motionNumber != ACT_PRE_WALK ){
						motionNumber = ACT_PRE_WALK;
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	90 e0       	ldi	r25, 0x00	; 0
    18e2:	90 93 a7 0c 	sts	0x0CA7, r25
    18e6:	80 93 a6 0c 	sts	0x0CA6, r24
						motionTimes = 1;
    18ea:	90 93 a5 0c 	sts	0x0CA5, r25
    18ee:	80 93 a4 0c 	sts	0x0CA4, r24
    18f2:	23 c0       	rjmp	.+70     	; 0x193a <move+0xf8>
					}else if( (motionNumber == ACT_TURN_LEFT && nextMotionNumber == ACT_TURN_RIGHT) ||
    18f4:	84 30       	cpi	r24, 0x04	; 4
    18f6:	91 05       	cpc	r25, r1
    18f8:	21 f4       	brne	.+8      	; 0x1902 <move+0xc0>
    18fa:	25 30       	cpi	r18, 0x05	; 5
    18fc:	31 05       	cpc	r19, r1
    18fe:	89 f4       	brne	.+34     	; 0x1922 <move+0xe0>
    1900:	05 c0       	rjmp	.+10     	; 0x190c <move+0xca>
    1902:	24 30       	cpi	r18, 0x04	; 4
    1904:	31 05       	cpc	r19, r1
    1906:	69 f4       	brne	.+26     	; 0x1922 <move+0xe0>
						(nextMotionNumber == ACT_TURN_LEFT && motionNumber == ACT_TURN_RIGHT) ){
    1908:	05 97       	sbiw	r24, 0x05	; 5
    190a:	59 f4       	brne	.+22     	; 0x1922 <move+0xe0>
						motionNumber = ACT_DEFAULT;
    190c:	10 92 a7 0c 	sts	0x0CA7, r1
    1910:	10 92 a6 0c 	sts	0x0CA6, r1
						motionTimes = 1;
    1914:	81 e0       	ldi	r24, 0x01	; 1
    1916:	90 e0       	ldi	r25, 0x00	; 0
    1918:	90 93 a5 0c 	sts	0x0CA5, r25
    191c:	80 93 a4 0c 	sts	0x0CA4, r24
    1920:	0c c0       	rjmp	.+24     	; 0x193a <move+0xf8>
					}else{
						motionNumber = nextMotionNumber;
    1922:	30 93 a7 0c 	sts	0x0CA7, r19
    1926:	20 93 a6 0c 	sts	0x0CA6, r18
						motionTimes = nextMotionTimes;
    192a:	50 93 a5 0c 	sts	0x0CA5, r21
    192e:	40 93 a4 0c 	sts	0x0CA4, r20
						nextMotionTimes = 0;
    1932:	10 92 9d 0c 	sts	0x0C9D, r1
    1936:	10 92 9c 0c 	sts	0x0C9C, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    193a:	2f e5       	ldi	r18, 0x5F	; 95
    193c:	8a ee       	ldi	r24, 0xEA	; 234
    193e:	90 e0       	ldi	r25, 0x00	; 0
    1940:	21 50       	subi	r18, 0x01	; 1
    1942:	80 40       	sbci	r24, 0x00	; 0
    1944:	90 40       	sbci	r25, 0x00	; 0
    1946:	e1 f7       	brne	.-8      	; 0x1940 <move+0xfe>
    1948:	00 c0       	rjmp	.+0      	; 0x194a <move+0x108>
    194a:	00 00       	nop
    194c:	08 95       	ret
					}
					_delay_ms(300);
				}else{
					stopMotion();
    194e:	be cc       	rjmp	.-1668   	; 0x12cc <stopMotion>
    1950:	08 95       	ret
				}
				return;
			}
		}
		ServoControl( motion[motionCount] );
    1952:	80 91 0c 02 	lds	r24, 0x020C
    1956:	90 91 0d 02 	lds	r25, 0x020D
    195a:	88 0f       	add	r24, r24
    195c:	99 1f       	adc	r25, r25
    195e:	e8 0f       	add	r30, r24
    1960:	f9 1f       	adc	r31, r25
    1962:	80 81       	ld	r24, Z
    1964:	91 81       	ldd	r25, Z+1	; 0x01
    1966:	76 dd       	rcall	.-1300   	; 0x1454 <ServoControl>
		motionCount++;
    1968:	80 91 0c 02 	lds	r24, 0x020C
    196c:	90 91 0d 02 	lds	r25, 0x020D
    1970:	01 96       	adiw	r24, 0x01	; 1
    1972:	90 93 0d 02 	sts	0x020D, r25
    1976:	80 93 0c 02 	sts	0x020C, r24
    197a:	08 95       	ret

0000197c <main>:
	EVT_FORCE_MOTION    = 9,
	EVT_WATCH_DOG       = 10,
	EVT_MAX
	};

int main(void){
    197c:	8f 92       	push	r8
    197e:	9f 92       	push	r9
    1980:	af 92       	push	r10
    1982:	bf 92       	push	r11
    1984:	cf 92       	push	r12
    1986:	df 92       	push	r13
    1988:	ef 92       	push	r14
    198a:	ff 92       	push	r15
    198c:	0f 93       	push	r16
    198e:	1f 93       	push	r17
    1990:	cf 93       	push	r28
    1992:	df 93       	push	r29
	
	//Start Switch
	DDRA  = 0x00;
    1994:	11 b8       	out	0x01, r1	; 1
	PORTA = 0x12;
    1996:	82 e1       	ldi	r24, 0x12	; 18
    1998:	82 b9       	out	0x02, r24	; 2
	
	//LED Initial
	DDRC  = 0x7F;
    199a:	8f e7       	ldi	r24, 0x7F	; 127
    199c:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x7E;
    199e:	8e e7       	ldi	r24, 0x7E	; 126
    19a0:	88 b9       	out	0x08, r24	; 8
	DDRD  = 0x70;
    19a2:	80 e7       	ldi	r24, 0x70	; 112
    19a4:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x11;
    19a6:	81 e1       	ldi	r24, 0x11	; 17
    19a8:	8b b9       	out	0x0b, r24	; 11

	MotorInit();
    19aa:	be d9       	rcall	.-3204   	; 0xd28 <MotorInit>
	initSerial();
    19ac:	48 d9       	rcall	.-3440   	; 0xc3e <initSerial>
		if( checkSerialRead() > 0 ){
			readData = getReadBuffer();
			if( readData != NULL ){
//				printf( "readData=%s\n", &readData[0] );
				split( &readData[0] );
				switch( serCmd[0] ){
    19ae:	c0 eb       	ldi	r28, 0xB0	; 176
    19b0:	dc e0       	ldi	r29, 0x0C	; 12
				}
				if( isFinish > 0 ){
					MotorControl( 0, 0 );
					break;
				}
				memset( readData, 0x00, SERIAL_BUFFER_SIZE );
    19b2:	0f 2e       	mov	r0, r31
    19b4:	f0 e5       	ldi	r31, 0x50	; 80
    19b6:	af 2e       	mov	r10, r31
    19b8:	f0 2d       	mov	r31, r0
				case EVT_STOP_MOTION:
					stopMotion();
					sendAck(1);
					break;
				case EVT_FORCE_MOTION:
					forceMotion( serCmd[1], serCmd[2] );
    19ba:	0f 2e       	mov	r0, r31
    19bc:	f4 eb       	ldi	r31, 0xB4	; 180
    19be:	ef 2e       	mov	r14, r31
    19c0:	fc e0       	ldi	r31, 0x0C	; 12
    19c2:	ff 2e       	mov	r15, r31
    19c4:	f0 2d       	mov	r31, r0
    19c6:	02 eb       	ldi	r16, 0xB2	; 178
    19c8:	1c e0       	ldi	r17, 0x0C	; 12
//                    setSpeedTest( serCmd[1] );
					sendAck(1);
					break;
				case EVT_START_MOTION:
				    startMotion( serCmd[1], serCmd[2] );
					PORTC = ~(1 << (LED_MAX - 2));
    19ca:	0f 2e       	mov	r0, r31
    19cc:	ff ed       	ldi	r31, 0xDF	; 223
    19ce:	8f 2e       	mov	r8, r31
    19d0:	f0 2d       	mov	r31, r0
					break;
				}
				memset( readData, 0x00, SERIAL_BUFFER_SIZE );
			}
		}
		memset( &serCmd[0], 0x00, sizeof(int) * SERIAL_BUFFER_SIZE );
    19d2:	0f 2e       	mov	r0, r31
    19d4:	f0 ea       	ldi	r31, 0xA0	; 160
    19d6:	bf 2e       	mov	r11, r31
    19d8:	f0 2d       	mov	r31, r0
		
		if (~PINA & SW_START ) {
			if( iStart > 0 ){
				iStart = 0;
				PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
    19da:	0f 2e       	mov	r0, r31
    19dc:	ff e7       	ldi	r31, 0x7F	; 127
    19de:	9f 2e       	mov	r9, r31
    19e0:	f0 2d       	mov	r31, r0
	initSerial();
	char * readData = NULL;	
	int isFinish = 0;
	
	while(1){
		setMode();
    19e2:	d5 de       	rcall	.-598    	; 0x178e <setMode>
		
		if( checkSerialRead() > 0 ){
    19e4:	33 d9       	rcall	.-3482   	; 0xc4c <checkSerialRead>
    19e6:	18 16       	cp	r1, r24
    19e8:	19 06       	cpc	r1, r25
    19ea:	0c f0       	brlt	.+2      	; 0x19ee <main+0x72>
    19ec:	83 c0       	rjmp	.+262    	; 0x1af4 <main+0x178>
			readData = getReadBuffer();
    19ee:	7e d9       	rcall	.-3332   	; 0xcec <getReadBuffer>
    19f0:	6c 01       	movw	r12, r24
			if( readData != NULL ){
    19f2:	00 97       	sbiw	r24, 0x00	; 0
    19f4:	09 f4       	brne	.+2      	; 0x19f8 <main+0x7c>
    19f6:	7e c0       	rjmp	.+252    	; 0x1af4 <main+0x178>
//				printf( "readData=%s\n", &readData[0] );
				split( &readData[0] );
    19f8:	bb d9       	rcall	.-3210   	; 0xd70 <split>
				switch( serCmd[0] ){
    19fa:	88 81       	ld	r24, Y
    19fc:	99 81       	ldd	r25, Y+1	; 0x01
    19fe:	85 30       	cpi	r24, 0x05	; 5
    1a00:	91 05       	cpc	r25, r1
    1a02:	09 f4       	brne	.+2      	; 0x1a06 <main+0x8a>
    1a04:	5b c0       	rjmp	.+182    	; 0x1abc <main+0x140>
    1a06:	9c f4       	brge	.+38     	; 0x1a2e <main+0xb2>
    1a08:	82 30       	cpi	r24, 0x02	; 2
    1a0a:	91 05       	cpc	r25, r1
    1a0c:	09 f4       	brne	.+2      	; 0x1a10 <main+0x94>
    1a0e:	45 c0       	rjmp	.+138    	; 0x1a9a <main+0x11e>
    1a10:	34 f4       	brge	.+12     	; 0x1a1e <main+0xa2>
    1a12:	00 97       	sbiw	r24, 0x00	; 0
    1a14:	09 f1       	breq	.+66     	; 0x1a58 <main+0xdc>
    1a16:	01 97       	sbiw	r24, 0x01	; 1
    1a18:	09 f4       	brne	.+2      	; 0x1a1c <main+0xa0>
    1a1a:	41 c0       	rjmp	.+130    	; 0x1a9e <main+0x122>
    1a1c:	63 c0       	rjmp	.+198    	; 0x1ae4 <main+0x168>
    1a1e:	83 30       	cpi	r24, 0x03	; 3
    1a20:	91 05       	cpc	r25, r1
    1a22:	09 f4       	brne	.+2      	; 0x1a26 <main+0xaa>
    1a24:	3d c0       	rjmp	.+122    	; 0x1aa0 <main+0x124>
    1a26:	04 97       	sbiw	r24, 0x04	; 4
    1a28:	09 f4       	brne	.+2      	; 0x1a2c <main+0xb0>
    1a2a:	46 c0       	rjmp	.+140    	; 0x1ab8 <main+0x13c>
    1a2c:	5b c0       	rjmp	.+182    	; 0x1ae4 <main+0x168>
    1a2e:	88 30       	cpi	r24, 0x08	; 8
    1a30:	91 05       	cpc	r25, r1
    1a32:	31 f1       	breq	.+76     	; 0x1a80 <main+0x104>
    1a34:	3c f4       	brge	.+14     	; 0x1a44 <main+0xc8>
    1a36:	86 30       	cpi	r24, 0x06	; 6
    1a38:	91 05       	cpc	r25, r1
    1a3a:	09 f4       	brne	.+2      	; 0x1a3e <main+0xc2>
    1a3c:	41 c0       	rjmp	.+130    	; 0x1ac0 <main+0x144>
    1a3e:	07 97       	sbiw	r24, 0x07	; 7
    1a40:	99 f0       	breq	.+38     	; 0x1a68 <main+0xec>
    1a42:	50 c0       	rjmp	.+160    	; 0x1ae4 <main+0x168>
    1a44:	8a 30       	cpi	r24, 0x0A	; 10
    1a46:	91 05       	cpc	r25, r1
    1a48:	09 f4       	brne	.+2      	; 0x1a4c <main+0xd0>
    1a4a:	43 c0       	rjmp	.+134    	; 0x1ad2 <main+0x156>
    1a4c:	f4 f0       	brlt	.+60     	; 0x1a8a <main+0x10e>
    1a4e:	87 3e       	cpi	r24, 0xE7	; 231
    1a50:	93 40       	sbci	r25, 0x03	; 3
    1a52:	09 f4       	brne	.+2      	; 0x1a56 <main+0xda>
    1a54:	9c c0       	rjmp	.+312    	; 0x1b8e <main+0x212>
    1a56:	46 c0       	rjmp	.+140    	; 0x1ae4 <main+0x168>
				case EVT_ACTION:
					ServoControl( serCmd[1] );
    1a58:	f8 01       	movw	r30, r16
    1a5a:	80 81       	ld	r24, Z
    1a5c:	91 81       	ldd	r25, Z+1	; 0x01
    1a5e:	fa dc       	rcall	.-1548   	; 0x1454 <ServoControl>
//                    setSpeedTest( serCmd[1] );
					sendAck(1);
    1a60:	81 e0       	ldi	r24, 0x01	; 1
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	54 d9       	rcall	.-3416   	; 0xd0e <sendAck>
					break;
    1a66:	41 c0       	rjmp	.+130    	; 0x1aea <main+0x16e>
				case EVT_START_MOTION:
				    startMotion( serCmd[1], serCmd[2] );
    1a68:	f7 01       	movw	r30, r14
    1a6a:	60 81       	ld	r22, Z
    1a6c:	71 81       	ldd	r23, Z+1	; 0x01
    1a6e:	f8 01       	movw	r30, r16
    1a70:	80 81       	ld	r24, Z
    1a72:	91 81       	ldd	r25, Z+1	; 0x01
    1a74:	a0 db       	rcall	.-2240   	; 0x11b6 <startMotion>
					PORTC = ~(1 << (LED_MAX - 2));
    1a76:	88 b8       	out	0x08, r8	; 8
					sendAck(1);
    1a78:	81 e0       	ldi	r24, 0x01	; 1
    1a7a:	90 e0       	ldi	r25, 0x00	; 0
    1a7c:	48 d9       	rcall	.-3440   	; 0xd0e <sendAck>
					break;
    1a7e:	35 c0       	rjmp	.+106    	; 0x1aea <main+0x16e>
				case EVT_STOP_MOTION:
					stopMotion();
    1a80:	25 dc       	rcall	.-1974   	; 0x12cc <stopMotion>
					sendAck(1);
    1a82:	81 e0       	ldi	r24, 0x01	; 1
    1a84:	90 e0       	ldi	r25, 0x00	; 0
    1a86:	43 d9       	rcall	.-3450   	; 0xd0e <sendAck>
					break;
    1a88:	30 c0       	rjmp	.+96     	; 0x1aea <main+0x16e>
				case EVT_FORCE_MOTION:
					forceMotion( serCmd[1], serCmd[2] );
    1a8a:	f7 01       	movw	r30, r14
    1a8c:	60 81       	ld	r22, Z
    1a8e:	71 81       	ldd	r23, Z+1	; 0x01
    1a90:	f8 01       	movw	r30, r16
    1a92:	80 81       	ld	r24, Z
    1a94:	91 81       	ldd	r25, Z+1	; 0x01
    1a96:	03 dc       	rcall	.-2042   	; 0x129e <forceMotion>
					break;
    1a98:	28 c0       	rjmp	.+80     	; 0x1aea <main+0x16e>
				case EVT_GET_NOW_ANGLE:
					getAngle();
    1a9a:	cc d9       	rcall	.-3176   	; 0xe34 <getAngle>
					break;
    1a9c:	26 c0       	rjmp	.+76     	; 0x1aea <main+0x16e>
				case EVT_SET_ANGLE:
					setAngle();
    1a9e:	af d9       	rcall	.-3234   	; 0xdfe <setAngle>
				case EVT_GET_ACT_ANGLE:
				    if( serCmd[1] >= ACT_MAX ){
    1aa0:	f8 01       	movw	r30, r16
    1aa2:	80 81       	ld	r24, Z
    1aa4:	91 81       	ldd	r25, Z+1	; 0x01
    1aa6:	82 33       	cpi	r24, 0x32	; 50
    1aa8:	91 05       	cpc	r25, r1
    1aaa:	24 f0       	brlt	.+8      	; 0x1ab4 <main+0x138>
					    sendAck(0);
    1aac:	80 e0       	ldi	r24, 0x00	; 0
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	2e d9       	rcall	.-3492   	; 0xd0e <sendAck>
    1ab2:	1b c0       	rjmp	.+54     	; 0x1aea <main+0x16e>
					}else{
						sendActAngle(serCmd[1]);
    1ab4:	3a da       	rcall	.-2956   	; 0xf2a <sendActAngle>
    1ab6:	19 c0       	rjmp	.+50     	; 0x1aea <main+0x16e>
					}
					break;
				case EVT_GET_LOAD:
					getLoad();
    1ab8:	88 da       	rcall	.-2800   	; 0xfca <getLoad>
//					printf( "%d\n", movingTime );
					break;
    1aba:	17 c0       	rjmp	.+46     	; 0x1aea <main+0x16e>
				case EVT_GET_VOLTAGE:
					getVoltage();
    1abc:	01 db       	rcall	.-2558   	; 0x10c0 <getVoltage>
					break;
    1abe:	15 c0       	rjmp	.+42     	; 0x1aea <main+0x16e>
				case EVT_TORQUE_DISABLE:
					dxl_write_byte( BROADCAST_ID, P_TORQUE_ENABLE, 0 );
    1ac0:	40 e0       	ldi	r20, 0x00	; 0
    1ac2:	50 e0       	ldi	r21, 0x00	; 0
    1ac4:	68 e1       	ldi	r22, 0x18	; 24
    1ac6:	70 e0       	ldi	r23, 0x00	; 0
    1ac8:	8e ef       	ldi	r24, 0xFE	; 254
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	0e 94 33 02 	call	0x466	; 0x466 <dxl_write_byte>
					break;
    1ad0:	0c c0       	rjmp	.+24     	; 0x1aea <main+0x16e>
				case EVT_WATCH_DOG:
					watchDogCnt = 0;
    1ad2:	10 92 98 0c 	sts	0x0C98, r1
    1ad6:	10 92 99 0c 	sts	0x0C99, r1
    1ada:	10 92 9a 0c 	sts	0x0C9A, r1
    1ade:	10 92 9b 0c 	sts	0x0C9B, r1
					break;
    1ae2:	03 c0       	rjmp	.+6      	; 0x1aea <main+0x16e>
//					printf( "finish\n");
					sendAck(999);
					isFinish = 1;
					break;
				default:
					sendAck(0);
    1ae4:	80 e0       	ldi	r24, 0x00	; 0
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	12 d9       	rcall	.-3548   	; 0xd0e <sendAck>
				}
				if( isFinish > 0 ){
					MotorControl( 0, 0 );
					break;
				}
				memset( readData, 0x00, SERIAL_BUFFER_SIZE );
    1aea:	f6 01       	movw	r30, r12
    1aec:	2a 2d       	mov	r18, r10
    1aee:	11 92       	st	Z+, r1
    1af0:	2a 95       	dec	r18
    1af2:	e9 f7       	brne	.-6      	; 0x1aee <main+0x172>
			}
		}
		memset( &serCmd[0], 0x00, sizeof(int) * SERIAL_BUFFER_SIZE );
    1af4:	fe 01       	movw	r30, r28
    1af6:	2b 2d       	mov	r18, r11
    1af8:	11 92       	st	Z+, r1
    1afa:	2a 95       	dec	r18
    1afc:	e9 f7       	brne	.-6      	; 0x1af8 <main+0x17c>
		
		if (~PINA & SW_START ) {
    1afe:	01 99       	sbic	0x00, 1	; 0
    1b00:	10 c0       	rjmp	.+32     	; 0x1b22 <main+0x1a6>
			if( iStart > 0 ){
    1b02:	80 91 08 02 	lds	r24, 0x0208
    1b06:	90 91 09 02 	lds	r25, 0x0209
    1b0a:	18 16       	cp	r1, r24
    1b0c:	19 06       	cpc	r1, r25
    1b0e:	2c f5       	brge	.+74     	; 0x1b5a <main+0x1de>
				iStart = 0;
    1b10:	10 92 09 02 	sts	0x0209, r1
    1b14:	10 92 08 02 	sts	0x0208, r1
				PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
    1b18:	98 b8       	out	0x08, r9	; 8
				ServoControl( 0 );
    1b1a:	80 e0       	ldi	r24, 0x00	; 0
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	9a dc       	rcall	.-1740   	; 0x1454 <ServoControl>
    1b20:	1c c0       	rjmp	.+56     	; 0x1b5a <main+0x1de>
			}
		}else{
			if( iStart == 0 ){
    1b22:	80 91 08 02 	lds	r24, 0x0208
    1b26:	90 91 09 02 	lds	r25, 0x0209
    1b2a:	89 2b       	or	r24, r25
    1b2c:	39 f4       	brne	.+14     	; 0x1b3c <main+0x1c0>
				PORTC &= ~LED_PLAY;
    1b2e:	46 98       	cbi	0x08, 6	; 8
				iStart = 1;
    1b30:	81 e0       	ldi	r24, 0x01	; 1
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	90 93 09 02 	sts	0x0209, r25
    1b38:	80 93 08 02 	sts	0x0208, r24
			}
			if( modeWait <= 0 ){
    1b3c:	80 91 aa 0c 	lds	r24, 0x0CAA
    1b40:	90 91 ab 0c 	lds	r25, 0x0CAB
    1b44:	18 16       	cp	r1, r24
    1b46:	19 06       	cpc	r1, r25
    1b48:	1c f0       	brlt	.+6      	; 0x1b50 <main+0x1d4>
				setModeAction();
    1b4a:	50 db       	rcall	.-2400   	; 0x11ec <setModeAction>
				move();
    1b4c:	7a de       	rcall	.-780    	; 0x1842 <move>
    1b4e:	05 c0       	rjmp	.+10     	; 0x1b5a <main+0x1de>
			}else{
				modeWait -= MAIN_DELAY;
    1b50:	0a 97       	sbiw	r24, 0x0a	; 10
    1b52:	90 93 ab 0c 	sts	0x0CAB, r25
    1b56:	80 93 aa 0c 	sts	0x0CAA, r24
    1b5a:	83 ec       	ldi	r24, 0xC3	; 195
    1b5c:	99 e0       	ldi	r25, 0x09	; 9
    1b5e:	01 97       	sbiw	r24, 0x01	; 1
    1b60:	f1 f7       	brne	.-4      	; 0x1b5e <main+0x1e2>
    1b62:	00 c0       	rjmp	.+0      	; 0x1b64 <main+0x1e8>
    1b64:	00 00       	nop
			}
		}
		_delay_ms(MAIN_DELAY);
		watchDogCnt++;
    1b66:	80 91 98 0c 	lds	r24, 0x0C98
    1b6a:	90 91 99 0c 	lds	r25, 0x0C99
    1b6e:	a0 91 9a 0c 	lds	r26, 0x0C9A
    1b72:	b0 91 9b 0c 	lds	r27, 0x0C9B
    1b76:	01 96       	adiw	r24, 0x01	; 1
    1b78:	a1 1d       	adc	r26, r1
    1b7a:	b1 1d       	adc	r27, r1
    1b7c:	80 93 98 0c 	sts	0x0C98, r24
    1b80:	90 93 99 0c 	sts	0x0C99, r25
    1b84:	a0 93 9a 0c 	sts	0x0C9A, r26
    1b88:	b0 93 9b 0c 	sts	0x0C9B, r27
	}
    1b8c:	2a cf       	rjmp	.-428    	; 0x19e2 <main+0x66>
				case EVT_WATCH_DOG:
					watchDogCnt = 0;
					break;
				case 999:
//					printf( "finish\n");
					sendAck(999);
    1b8e:	87 ee       	ldi	r24, 0xE7	; 231
    1b90:	93 e0       	ldi	r25, 0x03	; 3
    1b92:	bd d8       	rcall	.-3718   	; 0xd0e <sendAck>
					break;
				default:
					sendAck(0);
				}
				if( isFinish > 0 ){
					MotorControl( 0, 0 );
    1b94:	60 e0       	ldi	r22, 0x00	; 0
    1b96:	70 e0       	ldi	r23, 0x00	; 0
    1b98:	80 e0       	ldi	r24, 0x00	; 0
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	19 dc       	rcall	.-1998   	; 0x13d0 <MotorControl>
			}
		}
		_delay_ms(MAIN_DELAY);
		watchDogCnt++;
	}
}
    1b9e:	80 e0       	ldi	r24, 0x00	; 0
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	df 91       	pop	r29
    1ba4:	cf 91       	pop	r28
    1ba6:	1f 91       	pop	r17
    1ba8:	0f 91       	pop	r16
    1baa:	ff 90       	pop	r15
    1bac:	ef 90       	pop	r14
    1bae:	df 90       	pop	r13
    1bb0:	cf 90       	pop	r12
    1bb2:	bf 90       	pop	r11
    1bb4:	af 90       	pop	r10
    1bb6:	9f 90       	pop	r9
    1bb8:	8f 90       	pop	r8
    1bba:	08 95       	ret

00001bbc <__divsf3>:
    1bbc:	0c d0       	rcall	.+24     	; 0x1bd6 <__divsf3x>
    1bbe:	eb c0       	rjmp	.+470    	; 0x1d96 <__fp_round>
    1bc0:	e3 d0       	rcall	.+454    	; 0x1d88 <__fp_pscB>
    1bc2:	40 f0       	brcs	.+16     	; 0x1bd4 <__divsf3+0x18>
    1bc4:	da d0       	rcall	.+436    	; 0x1d7a <__fp_pscA>
    1bc6:	30 f0       	brcs	.+12     	; 0x1bd4 <__divsf3+0x18>
    1bc8:	21 f4       	brne	.+8      	; 0x1bd2 <__divsf3+0x16>
    1bca:	5f 3f       	cpi	r21, 0xFF	; 255
    1bcc:	19 f0       	breq	.+6      	; 0x1bd4 <__divsf3+0x18>
    1bce:	cc c0       	rjmp	.+408    	; 0x1d68 <__fp_inf>
    1bd0:	51 11       	cpse	r21, r1
    1bd2:	15 c1       	rjmp	.+554    	; 0x1dfe <__fp_szero>
    1bd4:	cf c0       	rjmp	.+414    	; 0x1d74 <__fp_nan>

00001bd6 <__divsf3x>:
    1bd6:	f0 d0       	rcall	.+480    	; 0x1db8 <__fp_split3>
    1bd8:	98 f3       	brcs	.-26     	; 0x1bc0 <__divsf3+0x4>

00001bda <__divsf3_pse>:
    1bda:	99 23       	and	r25, r25
    1bdc:	c9 f3       	breq	.-14     	; 0x1bd0 <__divsf3+0x14>
    1bde:	55 23       	and	r21, r21
    1be0:	b1 f3       	breq	.-20     	; 0x1bce <__divsf3+0x12>
    1be2:	95 1b       	sub	r25, r21
    1be4:	55 0b       	sbc	r21, r21
    1be6:	bb 27       	eor	r27, r27
    1be8:	aa 27       	eor	r26, r26
    1bea:	62 17       	cp	r22, r18
    1bec:	73 07       	cpc	r23, r19
    1bee:	84 07       	cpc	r24, r20
    1bf0:	38 f0       	brcs	.+14     	; 0x1c00 <__divsf3_pse+0x26>
    1bf2:	9f 5f       	subi	r25, 0xFF	; 255
    1bf4:	5f 4f       	sbci	r21, 0xFF	; 255
    1bf6:	22 0f       	add	r18, r18
    1bf8:	33 1f       	adc	r19, r19
    1bfa:	44 1f       	adc	r20, r20
    1bfc:	aa 1f       	adc	r26, r26
    1bfe:	a9 f3       	breq	.-22     	; 0x1bea <__divsf3_pse+0x10>
    1c00:	33 d0       	rcall	.+102    	; 0x1c68 <__divsf3_pse+0x8e>
    1c02:	0e 2e       	mov	r0, r30
    1c04:	3a f0       	brmi	.+14     	; 0x1c14 <__divsf3_pse+0x3a>
    1c06:	e0 e8       	ldi	r30, 0x80	; 128
    1c08:	30 d0       	rcall	.+96     	; 0x1c6a <__divsf3_pse+0x90>
    1c0a:	91 50       	subi	r25, 0x01	; 1
    1c0c:	50 40       	sbci	r21, 0x00	; 0
    1c0e:	e6 95       	lsr	r30
    1c10:	00 1c       	adc	r0, r0
    1c12:	ca f7       	brpl	.-14     	; 0x1c06 <__divsf3_pse+0x2c>
    1c14:	29 d0       	rcall	.+82     	; 0x1c68 <__divsf3_pse+0x8e>
    1c16:	fe 2f       	mov	r31, r30
    1c18:	27 d0       	rcall	.+78     	; 0x1c68 <__divsf3_pse+0x8e>
    1c1a:	66 0f       	add	r22, r22
    1c1c:	77 1f       	adc	r23, r23
    1c1e:	88 1f       	adc	r24, r24
    1c20:	bb 1f       	adc	r27, r27
    1c22:	26 17       	cp	r18, r22
    1c24:	37 07       	cpc	r19, r23
    1c26:	48 07       	cpc	r20, r24
    1c28:	ab 07       	cpc	r26, r27
    1c2a:	b0 e8       	ldi	r27, 0x80	; 128
    1c2c:	09 f0       	breq	.+2      	; 0x1c30 <__divsf3_pse+0x56>
    1c2e:	bb 0b       	sbc	r27, r27
    1c30:	80 2d       	mov	r24, r0
    1c32:	bf 01       	movw	r22, r30
    1c34:	ff 27       	eor	r31, r31
    1c36:	93 58       	subi	r25, 0x83	; 131
    1c38:	5f 4f       	sbci	r21, 0xFF	; 255
    1c3a:	2a f0       	brmi	.+10     	; 0x1c46 <__divsf3_pse+0x6c>
    1c3c:	9e 3f       	cpi	r25, 0xFE	; 254
    1c3e:	51 05       	cpc	r21, r1
    1c40:	68 f0       	brcs	.+26     	; 0x1c5c <__divsf3_pse+0x82>
    1c42:	92 c0       	rjmp	.+292    	; 0x1d68 <__fp_inf>
    1c44:	dc c0       	rjmp	.+440    	; 0x1dfe <__fp_szero>
    1c46:	5f 3f       	cpi	r21, 0xFF	; 255
    1c48:	ec f3       	brlt	.-6      	; 0x1c44 <__divsf3_pse+0x6a>
    1c4a:	98 3e       	cpi	r25, 0xE8	; 232
    1c4c:	dc f3       	brlt	.-10     	; 0x1c44 <__divsf3_pse+0x6a>
    1c4e:	86 95       	lsr	r24
    1c50:	77 95       	ror	r23
    1c52:	67 95       	ror	r22
    1c54:	b7 95       	ror	r27
    1c56:	f7 95       	ror	r31
    1c58:	9f 5f       	subi	r25, 0xFF	; 255
    1c5a:	c9 f7       	brne	.-14     	; 0x1c4e <__divsf3_pse+0x74>
    1c5c:	88 0f       	add	r24, r24
    1c5e:	91 1d       	adc	r25, r1
    1c60:	96 95       	lsr	r25
    1c62:	87 95       	ror	r24
    1c64:	97 f9       	bld	r25, 7
    1c66:	08 95       	ret
    1c68:	e1 e0       	ldi	r30, 0x01	; 1
    1c6a:	66 0f       	add	r22, r22
    1c6c:	77 1f       	adc	r23, r23
    1c6e:	88 1f       	adc	r24, r24
    1c70:	bb 1f       	adc	r27, r27
    1c72:	62 17       	cp	r22, r18
    1c74:	73 07       	cpc	r23, r19
    1c76:	84 07       	cpc	r24, r20
    1c78:	ba 07       	cpc	r27, r26
    1c7a:	20 f0       	brcs	.+8      	; 0x1c84 <__divsf3_pse+0xaa>
    1c7c:	62 1b       	sub	r22, r18
    1c7e:	73 0b       	sbc	r23, r19
    1c80:	84 0b       	sbc	r24, r20
    1c82:	ba 0b       	sbc	r27, r26
    1c84:	ee 1f       	adc	r30, r30
    1c86:	88 f7       	brcc	.-30     	; 0x1c6a <__divsf3_pse+0x90>
    1c88:	e0 95       	com	r30
    1c8a:	08 95       	ret

00001c8c <__fixsfsi>:
    1c8c:	04 d0       	rcall	.+8      	; 0x1c96 <__fixunssfsi>
    1c8e:	68 94       	set
    1c90:	b1 11       	cpse	r27, r1
    1c92:	b5 c0       	rjmp	.+362    	; 0x1dfe <__fp_szero>
    1c94:	08 95       	ret

00001c96 <__fixunssfsi>:
    1c96:	98 d0       	rcall	.+304    	; 0x1dc8 <__fp_splitA>
    1c98:	88 f0       	brcs	.+34     	; 0x1cbc <__fixunssfsi+0x26>
    1c9a:	9f 57       	subi	r25, 0x7F	; 127
    1c9c:	90 f0       	brcs	.+36     	; 0x1cc2 <__fixunssfsi+0x2c>
    1c9e:	b9 2f       	mov	r27, r25
    1ca0:	99 27       	eor	r25, r25
    1ca2:	b7 51       	subi	r27, 0x17	; 23
    1ca4:	a0 f0       	brcs	.+40     	; 0x1cce <__fixunssfsi+0x38>
    1ca6:	d1 f0       	breq	.+52     	; 0x1cdc <__fixunssfsi+0x46>
    1ca8:	66 0f       	add	r22, r22
    1caa:	77 1f       	adc	r23, r23
    1cac:	88 1f       	adc	r24, r24
    1cae:	99 1f       	adc	r25, r25
    1cb0:	1a f0       	brmi	.+6      	; 0x1cb8 <__fixunssfsi+0x22>
    1cb2:	ba 95       	dec	r27
    1cb4:	c9 f7       	brne	.-14     	; 0x1ca8 <__fixunssfsi+0x12>
    1cb6:	12 c0       	rjmp	.+36     	; 0x1cdc <__fixunssfsi+0x46>
    1cb8:	b1 30       	cpi	r27, 0x01	; 1
    1cba:	81 f0       	breq	.+32     	; 0x1cdc <__fixunssfsi+0x46>
    1cbc:	9f d0       	rcall	.+318    	; 0x1dfc <__fp_zero>
    1cbe:	b1 e0       	ldi	r27, 0x01	; 1
    1cc0:	08 95       	ret
    1cc2:	9c c0       	rjmp	.+312    	; 0x1dfc <__fp_zero>
    1cc4:	67 2f       	mov	r22, r23
    1cc6:	78 2f       	mov	r23, r24
    1cc8:	88 27       	eor	r24, r24
    1cca:	b8 5f       	subi	r27, 0xF8	; 248
    1ccc:	39 f0       	breq	.+14     	; 0x1cdc <__fixunssfsi+0x46>
    1cce:	b9 3f       	cpi	r27, 0xF9	; 249
    1cd0:	cc f3       	brlt	.-14     	; 0x1cc4 <__fixunssfsi+0x2e>
    1cd2:	86 95       	lsr	r24
    1cd4:	77 95       	ror	r23
    1cd6:	67 95       	ror	r22
    1cd8:	b3 95       	inc	r27
    1cda:	d9 f7       	brne	.-10     	; 0x1cd2 <__fixunssfsi+0x3c>
    1cdc:	3e f4       	brtc	.+14     	; 0x1cec <__fixunssfsi+0x56>
    1cde:	90 95       	com	r25
    1ce0:	80 95       	com	r24
    1ce2:	70 95       	com	r23
    1ce4:	61 95       	neg	r22
    1ce6:	7f 4f       	sbci	r23, 0xFF	; 255
    1ce8:	8f 4f       	sbci	r24, 0xFF	; 255
    1cea:	9f 4f       	sbci	r25, 0xFF	; 255
    1cec:	08 95       	ret

00001cee <__floatunsisf>:
    1cee:	e8 94       	clt
    1cf0:	09 c0       	rjmp	.+18     	; 0x1d04 <__floatsisf+0x12>

00001cf2 <__floatsisf>:
    1cf2:	97 fb       	bst	r25, 7
    1cf4:	3e f4       	brtc	.+14     	; 0x1d04 <__floatsisf+0x12>
    1cf6:	90 95       	com	r25
    1cf8:	80 95       	com	r24
    1cfa:	70 95       	com	r23
    1cfc:	61 95       	neg	r22
    1cfe:	7f 4f       	sbci	r23, 0xFF	; 255
    1d00:	8f 4f       	sbci	r24, 0xFF	; 255
    1d02:	9f 4f       	sbci	r25, 0xFF	; 255
    1d04:	99 23       	and	r25, r25
    1d06:	a9 f0       	breq	.+42     	; 0x1d32 <__floatsisf+0x40>
    1d08:	f9 2f       	mov	r31, r25
    1d0a:	96 e9       	ldi	r25, 0x96	; 150
    1d0c:	bb 27       	eor	r27, r27
    1d0e:	93 95       	inc	r25
    1d10:	f6 95       	lsr	r31
    1d12:	87 95       	ror	r24
    1d14:	77 95       	ror	r23
    1d16:	67 95       	ror	r22
    1d18:	b7 95       	ror	r27
    1d1a:	f1 11       	cpse	r31, r1
    1d1c:	f8 cf       	rjmp	.-16     	; 0x1d0e <__floatsisf+0x1c>
    1d1e:	fa f4       	brpl	.+62     	; 0x1d5e <__floatsisf+0x6c>
    1d20:	bb 0f       	add	r27, r27
    1d22:	11 f4       	brne	.+4      	; 0x1d28 <__floatsisf+0x36>
    1d24:	60 ff       	sbrs	r22, 0
    1d26:	1b c0       	rjmp	.+54     	; 0x1d5e <__floatsisf+0x6c>
    1d28:	6f 5f       	subi	r22, 0xFF	; 255
    1d2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d2c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d2e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d30:	16 c0       	rjmp	.+44     	; 0x1d5e <__floatsisf+0x6c>
    1d32:	88 23       	and	r24, r24
    1d34:	11 f0       	breq	.+4      	; 0x1d3a <__floatsisf+0x48>
    1d36:	96 e9       	ldi	r25, 0x96	; 150
    1d38:	11 c0       	rjmp	.+34     	; 0x1d5c <__floatsisf+0x6a>
    1d3a:	77 23       	and	r23, r23
    1d3c:	21 f0       	breq	.+8      	; 0x1d46 <__floatsisf+0x54>
    1d3e:	9e e8       	ldi	r25, 0x8E	; 142
    1d40:	87 2f       	mov	r24, r23
    1d42:	76 2f       	mov	r23, r22
    1d44:	05 c0       	rjmp	.+10     	; 0x1d50 <__floatsisf+0x5e>
    1d46:	66 23       	and	r22, r22
    1d48:	71 f0       	breq	.+28     	; 0x1d66 <__floatsisf+0x74>
    1d4a:	96 e8       	ldi	r25, 0x86	; 134
    1d4c:	86 2f       	mov	r24, r22
    1d4e:	70 e0       	ldi	r23, 0x00	; 0
    1d50:	60 e0       	ldi	r22, 0x00	; 0
    1d52:	2a f0       	brmi	.+10     	; 0x1d5e <__floatsisf+0x6c>
    1d54:	9a 95       	dec	r25
    1d56:	66 0f       	add	r22, r22
    1d58:	77 1f       	adc	r23, r23
    1d5a:	88 1f       	adc	r24, r24
    1d5c:	da f7       	brpl	.-10     	; 0x1d54 <__floatsisf+0x62>
    1d5e:	88 0f       	add	r24, r24
    1d60:	96 95       	lsr	r25
    1d62:	87 95       	ror	r24
    1d64:	97 f9       	bld	r25, 7
    1d66:	08 95       	ret

00001d68 <__fp_inf>:
    1d68:	97 f9       	bld	r25, 7
    1d6a:	9f 67       	ori	r25, 0x7F	; 127
    1d6c:	80 e8       	ldi	r24, 0x80	; 128
    1d6e:	70 e0       	ldi	r23, 0x00	; 0
    1d70:	60 e0       	ldi	r22, 0x00	; 0
    1d72:	08 95       	ret

00001d74 <__fp_nan>:
    1d74:	9f ef       	ldi	r25, 0xFF	; 255
    1d76:	80 ec       	ldi	r24, 0xC0	; 192
    1d78:	08 95       	ret

00001d7a <__fp_pscA>:
    1d7a:	00 24       	eor	r0, r0
    1d7c:	0a 94       	dec	r0
    1d7e:	16 16       	cp	r1, r22
    1d80:	17 06       	cpc	r1, r23
    1d82:	18 06       	cpc	r1, r24
    1d84:	09 06       	cpc	r0, r25
    1d86:	08 95       	ret

00001d88 <__fp_pscB>:
    1d88:	00 24       	eor	r0, r0
    1d8a:	0a 94       	dec	r0
    1d8c:	12 16       	cp	r1, r18
    1d8e:	13 06       	cpc	r1, r19
    1d90:	14 06       	cpc	r1, r20
    1d92:	05 06       	cpc	r0, r21
    1d94:	08 95       	ret

00001d96 <__fp_round>:
    1d96:	09 2e       	mov	r0, r25
    1d98:	03 94       	inc	r0
    1d9a:	00 0c       	add	r0, r0
    1d9c:	11 f4       	brne	.+4      	; 0x1da2 <__fp_round+0xc>
    1d9e:	88 23       	and	r24, r24
    1da0:	52 f0       	brmi	.+20     	; 0x1db6 <__fp_round+0x20>
    1da2:	bb 0f       	add	r27, r27
    1da4:	40 f4       	brcc	.+16     	; 0x1db6 <__fp_round+0x20>
    1da6:	bf 2b       	or	r27, r31
    1da8:	11 f4       	brne	.+4      	; 0x1dae <__fp_round+0x18>
    1daa:	60 ff       	sbrs	r22, 0
    1dac:	04 c0       	rjmp	.+8      	; 0x1db6 <__fp_round+0x20>
    1dae:	6f 5f       	subi	r22, 0xFF	; 255
    1db0:	7f 4f       	sbci	r23, 0xFF	; 255
    1db2:	8f 4f       	sbci	r24, 0xFF	; 255
    1db4:	9f 4f       	sbci	r25, 0xFF	; 255
    1db6:	08 95       	ret

00001db8 <__fp_split3>:
    1db8:	57 fd       	sbrc	r21, 7
    1dba:	90 58       	subi	r25, 0x80	; 128
    1dbc:	44 0f       	add	r20, r20
    1dbe:	55 1f       	adc	r21, r21
    1dc0:	59 f0       	breq	.+22     	; 0x1dd8 <__fp_splitA+0x10>
    1dc2:	5f 3f       	cpi	r21, 0xFF	; 255
    1dc4:	71 f0       	breq	.+28     	; 0x1de2 <__fp_splitA+0x1a>
    1dc6:	47 95       	ror	r20

00001dc8 <__fp_splitA>:
    1dc8:	88 0f       	add	r24, r24
    1dca:	97 fb       	bst	r25, 7
    1dcc:	99 1f       	adc	r25, r25
    1dce:	61 f0       	breq	.+24     	; 0x1de8 <__fp_splitA+0x20>
    1dd0:	9f 3f       	cpi	r25, 0xFF	; 255
    1dd2:	79 f0       	breq	.+30     	; 0x1df2 <__fp_splitA+0x2a>
    1dd4:	87 95       	ror	r24
    1dd6:	08 95       	ret
    1dd8:	12 16       	cp	r1, r18
    1dda:	13 06       	cpc	r1, r19
    1ddc:	14 06       	cpc	r1, r20
    1dde:	55 1f       	adc	r21, r21
    1de0:	f2 cf       	rjmp	.-28     	; 0x1dc6 <__fp_split3+0xe>
    1de2:	46 95       	lsr	r20
    1de4:	f1 df       	rcall	.-30     	; 0x1dc8 <__fp_splitA>
    1de6:	08 c0       	rjmp	.+16     	; 0x1df8 <__fp_splitA+0x30>
    1de8:	16 16       	cp	r1, r22
    1dea:	17 06       	cpc	r1, r23
    1dec:	18 06       	cpc	r1, r24
    1dee:	99 1f       	adc	r25, r25
    1df0:	f1 cf       	rjmp	.-30     	; 0x1dd4 <__fp_splitA+0xc>
    1df2:	86 95       	lsr	r24
    1df4:	71 05       	cpc	r23, r1
    1df6:	61 05       	cpc	r22, r1
    1df8:	08 94       	sec
    1dfa:	08 95       	ret

00001dfc <__fp_zero>:
    1dfc:	e8 94       	clt

00001dfe <__fp_szero>:
    1dfe:	bb 27       	eor	r27, r27
    1e00:	66 27       	eor	r22, r22
    1e02:	77 27       	eor	r23, r23
    1e04:	cb 01       	movw	r24, r22
    1e06:	97 f9       	bld	r25, 7
    1e08:	08 95       	ret

00001e0a <__mulsf3>:
    1e0a:	0b d0       	rcall	.+22     	; 0x1e22 <__mulsf3x>
    1e0c:	c4 cf       	rjmp	.-120    	; 0x1d96 <__fp_round>
    1e0e:	b5 df       	rcall	.-150    	; 0x1d7a <__fp_pscA>
    1e10:	28 f0       	brcs	.+10     	; 0x1e1c <__mulsf3+0x12>
    1e12:	ba df       	rcall	.-140    	; 0x1d88 <__fp_pscB>
    1e14:	18 f0       	brcs	.+6      	; 0x1e1c <__mulsf3+0x12>
    1e16:	95 23       	and	r25, r21
    1e18:	09 f0       	breq	.+2      	; 0x1e1c <__mulsf3+0x12>
    1e1a:	a6 cf       	rjmp	.-180    	; 0x1d68 <__fp_inf>
    1e1c:	ab cf       	rjmp	.-170    	; 0x1d74 <__fp_nan>
    1e1e:	11 24       	eor	r1, r1
    1e20:	ee cf       	rjmp	.-36     	; 0x1dfe <__fp_szero>

00001e22 <__mulsf3x>:
    1e22:	ca df       	rcall	.-108    	; 0x1db8 <__fp_split3>
    1e24:	a0 f3       	brcs	.-24     	; 0x1e0e <__mulsf3+0x4>

00001e26 <__mulsf3_pse>:
    1e26:	95 9f       	mul	r25, r21
    1e28:	d1 f3       	breq	.-12     	; 0x1e1e <__mulsf3+0x14>
    1e2a:	95 0f       	add	r25, r21
    1e2c:	50 e0       	ldi	r21, 0x00	; 0
    1e2e:	55 1f       	adc	r21, r21
    1e30:	62 9f       	mul	r22, r18
    1e32:	f0 01       	movw	r30, r0
    1e34:	72 9f       	mul	r23, r18
    1e36:	bb 27       	eor	r27, r27
    1e38:	f0 0d       	add	r31, r0
    1e3a:	b1 1d       	adc	r27, r1
    1e3c:	63 9f       	mul	r22, r19
    1e3e:	aa 27       	eor	r26, r26
    1e40:	f0 0d       	add	r31, r0
    1e42:	b1 1d       	adc	r27, r1
    1e44:	aa 1f       	adc	r26, r26
    1e46:	64 9f       	mul	r22, r20
    1e48:	66 27       	eor	r22, r22
    1e4a:	b0 0d       	add	r27, r0
    1e4c:	a1 1d       	adc	r26, r1
    1e4e:	66 1f       	adc	r22, r22
    1e50:	82 9f       	mul	r24, r18
    1e52:	22 27       	eor	r18, r18
    1e54:	b0 0d       	add	r27, r0
    1e56:	a1 1d       	adc	r26, r1
    1e58:	62 1f       	adc	r22, r18
    1e5a:	73 9f       	mul	r23, r19
    1e5c:	b0 0d       	add	r27, r0
    1e5e:	a1 1d       	adc	r26, r1
    1e60:	62 1f       	adc	r22, r18
    1e62:	83 9f       	mul	r24, r19
    1e64:	a0 0d       	add	r26, r0
    1e66:	61 1d       	adc	r22, r1
    1e68:	22 1f       	adc	r18, r18
    1e6a:	74 9f       	mul	r23, r20
    1e6c:	33 27       	eor	r19, r19
    1e6e:	a0 0d       	add	r26, r0
    1e70:	61 1d       	adc	r22, r1
    1e72:	23 1f       	adc	r18, r19
    1e74:	84 9f       	mul	r24, r20
    1e76:	60 0d       	add	r22, r0
    1e78:	21 1d       	adc	r18, r1
    1e7a:	82 2f       	mov	r24, r18
    1e7c:	76 2f       	mov	r23, r22
    1e7e:	6a 2f       	mov	r22, r26
    1e80:	11 24       	eor	r1, r1
    1e82:	9f 57       	subi	r25, 0x7F	; 127
    1e84:	50 40       	sbci	r21, 0x00	; 0
    1e86:	8a f0       	brmi	.+34     	; 0x1eaa <__mulsf3_pse+0x84>
    1e88:	e1 f0       	breq	.+56     	; 0x1ec2 <__mulsf3_pse+0x9c>
    1e8a:	88 23       	and	r24, r24
    1e8c:	4a f0       	brmi	.+18     	; 0x1ea0 <__mulsf3_pse+0x7a>
    1e8e:	ee 0f       	add	r30, r30
    1e90:	ff 1f       	adc	r31, r31
    1e92:	bb 1f       	adc	r27, r27
    1e94:	66 1f       	adc	r22, r22
    1e96:	77 1f       	adc	r23, r23
    1e98:	88 1f       	adc	r24, r24
    1e9a:	91 50       	subi	r25, 0x01	; 1
    1e9c:	50 40       	sbci	r21, 0x00	; 0
    1e9e:	a9 f7       	brne	.-22     	; 0x1e8a <__mulsf3_pse+0x64>
    1ea0:	9e 3f       	cpi	r25, 0xFE	; 254
    1ea2:	51 05       	cpc	r21, r1
    1ea4:	70 f0       	brcs	.+28     	; 0x1ec2 <__mulsf3_pse+0x9c>
    1ea6:	60 cf       	rjmp	.-320    	; 0x1d68 <__fp_inf>
    1ea8:	aa cf       	rjmp	.-172    	; 0x1dfe <__fp_szero>
    1eaa:	5f 3f       	cpi	r21, 0xFF	; 255
    1eac:	ec f3       	brlt	.-6      	; 0x1ea8 <__mulsf3_pse+0x82>
    1eae:	98 3e       	cpi	r25, 0xE8	; 232
    1eb0:	dc f3       	brlt	.-10     	; 0x1ea8 <__mulsf3_pse+0x82>
    1eb2:	86 95       	lsr	r24
    1eb4:	77 95       	ror	r23
    1eb6:	67 95       	ror	r22
    1eb8:	b7 95       	ror	r27
    1eba:	f7 95       	ror	r31
    1ebc:	e7 95       	ror	r30
    1ebe:	9f 5f       	subi	r25, 0xFF	; 255
    1ec0:	c1 f7       	brne	.-16     	; 0x1eb2 <__mulsf3_pse+0x8c>
    1ec2:	fe 2b       	or	r31, r30
    1ec4:	88 0f       	add	r24, r24
    1ec6:	91 1d       	adc	r25, r1
    1ec8:	96 95       	lsr	r25
    1eca:	87 95       	ror	r24
    1ecc:	97 f9       	bld	r25, 7
    1ece:	08 95       	ret

00001ed0 <__cmpsf2>:
    1ed0:	03 d0       	rcall	.+6      	; 0x1ed8 <__fp_cmp>
    1ed2:	08 f4       	brcc	.+2      	; 0x1ed6 <__cmpsf2+0x6>
    1ed4:	81 e0       	ldi	r24, 0x01	; 1
    1ed6:	08 95       	ret

00001ed8 <__fp_cmp>:
    1ed8:	99 0f       	add	r25, r25
    1eda:	00 08       	sbc	r0, r0
    1edc:	55 0f       	add	r21, r21
    1ede:	aa 0b       	sbc	r26, r26
    1ee0:	e0 e8       	ldi	r30, 0x80	; 128
    1ee2:	fe ef       	ldi	r31, 0xFE	; 254
    1ee4:	16 16       	cp	r1, r22
    1ee6:	17 06       	cpc	r1, r23
    1ee8:	e8 07       	cpc	r30, r24
    1eea:	f9 07       	cpc	r31, r25
    1eec:	c0 f0       	brcs	.+48     	; 0x1f1e <__fp_cmp+0x46>
    1eee:	12 16       	cp	r1, r18
    1ef0:	13 06       	cpc	r1, r19
    1ef2:	e4 07       	cpc	r30, r20
    1ef4:	f5 07       	cpc	r31, r21
    1ef6:	98 f0       	brcs	.+38     	; 0x1f1e <__fp_cmp+0x46>
    1ef8:	62 1b       	sub	r22, r18
    1efa:	73 0b       	sbc	r23, r19
    1efc:	84 0b       	sbc	r24, r20
    1efe:	95 0b       	sbc	r25, r21
    1f00:	39 f4       	brne	.+14     	; 0x1f10 <__fp_cmp+0x38>
    1f02:	0a 26       	eor	r0, r26
    1f04:	61 f0       	breq	.+24     	; 0x1f1e <__fp_cmp+0x46>
    1f06:	23 2b       	or	r18, r19
    1f08:	24 2b       	or	r18, r20
    1f0a:	25 2b       	or	r18, r21
    1f0c:	21 f4       	brne	.+8      	; 0x1f16 <__fp_cmp+0x3e>
    1f0e:	08 95       	ret
    1f10:	0a 26       	eor	r0, r26
    1f12:	09 f4       	brne	.+2      	; 0x1f16 <__fp_cmp+0x3e>
    1f14:	a1 40       	sbci	r26, 0x01	; 1
    1f16:	a6 95       	lsr	r26
    1f18:	8f ef       	ldi	r24, 0xFF	; 255
    1f1a:	81 1d       	adc	r24, r1
    1f1c:	81 1d       	adc	r24, r1
    1f1e:	08 95       	ret

00001f20 <__gesf2>:
    1f20:	db df       	rcall	.-74     	; 0x1ed8 <__fp_cmp>
    1f22:	08 f4       	brcc	.+2      	; 0x1f26 <__gesf2+0x6>
    1f24:	8f ef       	ldi	r24, 0xFF	; 255
    1f26:	08 95       	ret

00001f28 <__divmodhi4>:
    1f28:	97 fb       	bst	r25, 7
    1f2a:	07 2e       	mov	r0, r23
    1f2c:	16 f4       	brtc	.+4      	; 0x1f32 <__divmodhi4+0xa>
    1f2e:	00 94       	com	r0
    1f30:	06 d0       	rcall	.+12     	; 0x1f3e <__divmodhi4_neg1>
    1f32:	77 fd       	sbrc	r23, 7
    1f34:	08 d0       	rcall	.+16     	; 0x1f46 <__divmodhi4_neg2>
    1f36:	0b d0       	rcall	.+22     	; 0x1f4e <__udivmodhi4>
    1f38:	07 fc       	sbrc	r0, 7
    1f3a:	05 d0       	rcall	.+10     	; 0x1f46 <__divmodhi4_neg2>
    1f3c:	3e f4       	brtc	.+14     	; 0x1f4c <__divmodhi4_exit>

00001f3e <__divmodhi4_neg1>:
    1f3e:	90 95       	com	r25
    1f40:	81 95       	neg	r24
    1f42:	9f 4f       	sbci	r25, 0xFF	; 255
    1f44:	08 95       	ret

00001f46 <__divmodhi4_neg2>:
    1f46:	70 95       	com	r23
    1f48:	61 95       	neg	r22
    1f4a:	7f 4f       	sbci	r23, 0xFF	; 255

00001f4c <__divmodhi4_exit>:
    1f4c:	08 95       	ret

00001f4e <__udivmodhi4>:
    1f4e:	aa 1b       	sub	r26, r26
    1f50:	bb 1b       	sub	r27, r27
    1f52:	51 e1       	ldi	r21, 0x11	; 17
    1f54:	07 c0       	rjmp	.+14     	; 0x1f64 <__udivmodhi4_ep>

00001f56 <__udivmodhi4_loop>:
    1f56:	aa 1f       	adc	r26, r26
    1f58:	bb 1f       	adc	r27, r27
    1f5a:	a6 17       	cp	r26, r22
    1f5c:	b7 07       	cpc	r27, r23
    1f5e:	10 f0       	brcs	.+4      	; 0x1f64 <__udivmodhi4_ep>
    1f60:	a6 1b       	sub	r26, r22
    1f62:	b7 0b       	sbc	r27, r23

00001f64 <__udivmodhi4_ep>:
    1f64:	88 1f       	adc	r24, r24
    1f66:	99 1f       	adc	r25, r25
    1f68:	5a 95       	dec	r21
    1f6a:	a9 f7       	brne	.-22     	; 0x1f56 <__udivmodhi4_loop>
    1f6c:	80 95       	com	r24
    1f6e:	90 95       	com	r25
    1f70:	bc 01       	movw	r22, r24
    1f72:	cd 01       	movw	r24, r26
    1f74:	08 95       	ret

00001f76 <atoi>:
    1f76:	fc 01       	movw	r30, r24
    1f78:	88 27       	eor	r24, r24
    1f7a:	99 27       	eor	r25, r25
    1f7c:	e8 94       	clt
    1f7e:	21 91       	ld	r18, Z+
    1f80:	20 32       	cpi	r18, 0x20	; 32
    1f82:	e9 f3       	breq	.-6      	; 0x1f7e <atoi+0x8>
    1f84:	29 30       	cpi	r18, 0x09	; 9
    1f86:	10 f0       	brcs	.+4      	; 0x1f8c <atoi+0x16>
    1f88:	2e 30       	cpi	r18, 0x0E	; 14
    1f8a:	c8 f3       	brcs	.-14     	; 0x1f7e <atoi+0x8>
    1f8c:	2b 32       	cpi	r18, 0x2B	; 43
    1f8e:	39 f0       	breq	.+14     	; 0x1f9e <atoi+0x28>
    1f90:	2d 32       	cpi	r18, 0x2D	; 45
    1f92:	31 f4       	brne	.+12     	; 0x1fa0 <atoi+0x2a>
    1f94:	68 94       	set
    1f96:	03 c0       	rjmp	.+6      	; 0x1f9e <atoi+0x28>
    1f98:	35 d0       	rcall	.+106    	; 0x2004 <__mulhi_const_10>
    1f9a:	82 0f       	add	r24, r18
    1f9c:	91 1d       	adc	r25, r1
    1f9e:	21 91       	ld	r18, Z+
    1fa0:	20 53       	subi	r18, 0x30	; 48
    1fa2:	2a 30       	cpi	r18, 0x0A	; 10
    1fa4:	c8 f3       	brcs	.-14     	; 0x1f98 <atoi+0x22>
    1fa6:	1e f4       	brtc	.+6      	; 0x1fae <atoi+0x38>
    1fa8:	90 95       	com	r25
    1faa:	81 95       	neg	r24
    1fac:	9f 4f       	sbci	r25, 0xFF	; 255
    1fae:	08 95       	ret

00001fb0 <strtok>:
    1fb0:	40 e4       	ldi	r20, 0x40	; 64
    1fb2:	5c e0       	ldi	r21, 0x0C	; 12
    1fb4:	00 c0       	rjmp	.+0      	; 0x1fb6 <strtok_r>

00001fb6 <strtok_r>:
    1fb6:	fa 01       	movw	r30, r20
    1fb8:	a1 91       	ld	r26, Z+
    1fba:	b0 81       	ld	r27, Z
    1fbc:	00 97       	sbiw	r24, 0x00	; 0
    1fbe:	19 f4       	brne	.+6      	; 0x1fc6 <strtok_r+0x10>
    1fc0:	10 97       	sbiw	r26, 0x00	; 0
    1fc2:	e1 f0       	breq	.+56     	; 0x1ffc <strtok_r+0x46>
    1fc4:	cd 01       	movw	r24, r26
    1fc6:	dc 01       	movw	r26, r24
    1fc8:	cd 01       	movw	r24, r26
    1fca:	0d 90       	ld	r0, X+
    1fcc:	00 20       	and	r0, r0
    1fce:	11 f4       	brne	.+4      	; 0x1fd4 <strtok_r+0x1e>
    1fd0:	c0 01       	movw	r24, r0
    1fd2:	13 c0       	rjmp	.+38     	; 0x1ffa <strtok_r+0x44>
    1fd4:	fb 01       	movw	r30, r22
    1fd6:	21 91       	ld	r18, Z+
    1fd8:	22 23       	and	r18, r18
    1fda:	19 f0       	breq	.+6      	; 0x1fe2 <strtok_r+0x2c>
    1fdc:	20 15       	cp	r18, r0
    1fde:	d9 f7       	brne	.-10     	; 0x1fd6 <strtok_r+0x20>
    1fe0:	f3 cf       	rjmp	.-26     	; 0x1fc8 <strtok_r+0x12>
    1fe2:	fb 01       	movw	r30, r22
    1fe4:	21 91       	ld	r18, Z+
    1fe6:	20 15       	cp	r18, r0
    1fe8:	19 f4       	brne	.+6      	; 0x1ff0 <strtok_r+0x3a>
    1fea:	1e 92       	st	-X, r1
    1fec:	11 96       	adiw	r26, 0x01	; 1
    1fee:	06 c0       	rjmp	.+12     	; 0x1ffc <strtok_r+0x46>
    1ff0:	22 23       	and	r18, r18
    1ff2:	c1 f7       	brne	.-16     	; 0x1fe4 <strtok_r+0x2e>
    1ff4:	0d 90       	ld	r0, X+
    1ff6:	00 20       	and	r0, r0
    1ff8:	a1 f7       	brne	.-24     	; 0x1fe2 <strtok_r+0x2c>
    1ffa:	d0 01       	movw	r26, r0
    1ffc:	fa 01       	movw	r30, r20
    1ffe:	a1 93       	st	Z+, r26
    2000:	b0 83       	st	Z, r27
    2002:	08 95       	ret

00002004 <__mulhi_const_10>:
    2004:	7a e0       	ldi	r23, 0x0A	; 10
    2006:	97 9f       	mul	r25, r23
    2008:	90 2d       	mov	r25, r0
    200a:	87 9f       	mul	r24, r23
    200c:	80 2d       	mov	r24, r0
    200e:	91 0d       	add	r25, r1
    2010:	11 24       	eor	r1, r1
    2012:	08 95       	ret

00002014 <fdevopen>:
    2014:	0f 93       	push	r16
    2016:	1f 93       	push	r17
    2018:	cf 93       	push	r28
    201a:	df 93       	push	r29
    201c:	ec 01       	movw	r28, r24
    201e:	8b 01       	movw	r16, r22
    2020:	00 97       	sbiw	r24, 0x00	; 0
    2022:	31 f4       	brne	.+12     	; 0x2030 <fdevopen+0x1c>
    2024:	61 15       	cp	r22, r1
    2026:	71 05       	cpc	r23, r1
    2028:	19 f4       	brne	.+6      	; 0x2030 <fdevopen+0x1c>
    202a:	80 e0       	ldi	r24, 0x00	; 0
    202c:	90 e0       	ldi	r25, 0x00	; 0
    202e:	37 c0       	rjmp	.+110    	; 0x209e <fdevopen+0x8a>
    2030:	6e e0       	ldi	r22, 0x0E	; 14
    2032:	70 e0       	ldi	r23, 0x00	; 0
    2034:	81 e0       	ldi	r24, 0x01	; 1
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	a1 d2       	rcall	.+1346   	; 0x257c <calloc>
    203a:	fc 01       	movw	r30, r24
    203c:	00 97       	sbiw	r24, 0x00	; 0
    203e:	a9 f3       	breq	.-22     	; 0x202a <fdevopen+0x16>
    2040:	80 e8       	ldi	r24, 0x80	; 128
    2042:	83 83       	std	Z+3, r24	; 0x03
    2044:	01 15       	cp	r16, r1
    2046:	11 05       	cpc	r17, r1
    2048:	71 f0       	breq	.+28     	; 0x2066 <fdevopen+0x52>
    204a:	13 87       	std	Z+11, r17	; 0x0b
    204c:	02 87       	std	Z+10, r16	; 0x0a
    204e:	81 e8       	ldi	r24, 0x81	; 129
    2050:	83 83       	std	Z+3, r24	; 0x03
    2052:	80 91 5a 0d 	lds	r24, 0x0D5A
    2056:	90 91 5b 0d 	lds	r25, 0x0D5B
    205a:	89 2b       	or	r24, r25
    205c:	21 f4       	brne	.+8      	; 0x2066 <fdevopen+0x52>
    205e:	f0 93 5b 0d 	sts	0x0D5B, r31
    2062:	e0 93 5a 0d 	sts	0x0D5A, r30
    2066:	20 97       	sbiw	r28, 0x00	; 0
    2068:	c9 f0       	breq	.+50     	; 0x209c <fdevopen+0x88>
    206a:	d1 87       	std	Z+9, r29	; 0x09
    206c:	c0 87       	std	Z+8, r28	; 0x08
    206e:	83 81       	ldd	r24, Z+3	; 0x03
    2070:	82 60       	ori	r24, 0x02	; 2
    2072:	83 83       	std	Z+3, r24	; 0x03
    2074:	80 91 5c 0d 	lds	r24, 0x0D5C
    2078:	90 91 5d 0d 	lds	r25, 0x0D5D
    207c:	89 2b       	or	r24, r25
    207e:	71 f4       	brne	.+28     	; 0x209c <fdevopen+0x88>
    2080:	f0 93 5d 0d 	sts	0x0D5D, r31
    2084:	e0 93 5c 0d 	sts	0x0D5C, r30
    2088:	80 91 5e 0d 	lds	r24, 0x0D5E
    208c:	90 91 5f 0d 	lds	r25, 0x0D5F
    2090:	89 2b       	or	r24, r25
    2092:	21 f4       	brne	.+8      	; 0x209c <fdevopen+0x88>
    2094:	f0 93 5f 0d 	sts	0x0D5F, r31
    2098:	e0 93 5e 0d 	sts	0x0D5E, r30
    209c:	cf 01       	movw	r24, r30
    209e:	df 91       	pop	r29
    20a0:	cf 91       	pop	r28
    20a2:	1f 91       	pop	r17
    20a4:	0f 91       	pop	r16
    20a6:	08 95       	ret

000020a8 <fgetc>:
    20a8:	cf 93       	push	r28
    20aa:	df 93       	push	r29
    20ac:	ec 01       	movw	r28, r24
    20ae:	2b 81       	ldd	r18, Y+3	; 0x03
    20b0:	20 ff       	sbrs	r18, 0
    20b2:	33 c0       	rjmp	.+102    	; 0x211a <fgetc+0x72>
    20b4:	26 ff       	sbrs	r18, 6
    20b6:	0a c0       	rjmp	.+20     	; 0x20cc <fgetc+0x24>
    20b8:	2f 7b       	andi	r18, 0xBF	; 191
    20ba:	2b 83       	std	Y+3, r18	; 0x03
    20bc:	8e 81       	ldd	r24, Y+6	; 0x06
    20be:	9f 81       	ldd	r25, Y+7	; 0x07
    20c0:	01 96       	adiw	r24, 0x01	; 1
    20c2:	9f 83       	std	Y+7, r25	; 0x07
    20c4:	8e 83       	std	Y+6, r24	; 0x06
    20c6:	8a 81       	ldd	r24, Y+2	; 0x02
    20c8:	90 e0       	ldi	r25, 0x00	; 0
    20ca:	29 c0       	rjmp	.+82     	; 0x211e <fgetc+0x76>
    20cc:	22 ff       	sbrs	r18, 2
    20ce:	0f c0       	rjmp	.+30     	; 0x20ee <fgetc+0x46>
    20d0:	e8 81       	ld	r30, Y
    20d2:	f9 81       	ldd	r31, Y+1	; 0x01
    20d4:	80 81       	ld	r24, Z
    20d6:	99 27       	eor	r25, r25
    20d8:	87 fd       	sbrc	r24, 7
    20da:	90 95       	com	r25
    20dc:	00 97       	sbiw	r24, 0x00	; 0
    20de:	19 f4       	brne	.+6      	; 0x20e6 <fgetc+0x3e>
    20e0:	20 62       	ori	r18, 0x20	; 32
    20e2:	2b 83       	std	Y+3, r18	; 0x03
    20e4:	1a c0       	rjmp	.+52     	; 0x211a <fgetc+0x72>
    20e6:	31 96       	adiw	r30, 0x01	; 1
    20e8:	f9 83       	std	Y+1, r31	; 0x01
    20ea:	e8 83       	st	Y, r30
    20ec:	0e c0       	rjmp	.+28     	; 0x210a <fgetc+0x62>
    20ee:	ea 85       	ldd	r30, Y+10	; 0x0a
    20f0:	fb 85       	ldd	r31, Y+11	; 0x0b
    20f2:	19 95       	eicall
    20f4:	97 ff       	sbrs	r25, 7
    20f6:	09 c0       	rjmp	.+18     	; 0x210a <fgetc+0x62>
    20f8:	2b 81       	ldd	r18, Y+3	; 0x03
    20fa:	01 96       	adiw	r24, 0x01	; 1
    20fc:	11 f4       	brne	.+4      	; 0x2102 <fgetc+0x5a>
    20fe:	80 e1       	ldi	r24, 0x10	; 16
    2100:	01 c0       	rjmp	.+2      	; 0x2104 <fgetc+0x5c>
    2102:	80 e2       	ldi	r24, 0x20	; 32
    2104:	82 2b       	or	r24, r18
    2106:	8b 83       	std	Y+3, r24	; 0x03
    2108:	08 c0       	rjmp	.+16     	; 0x211a <fgetc+0x72>
    210a:	2e 81       	ldd	r18, Y+6	; 0x06
    210c:	3f 81       	ldd	r19, Y+7	; 0x07
    210e:	2f 5f       	subi	r18, 0xFF	; 255
    2110:	3f 4f       	sbci	r19, 0xFF	; 255
    2112:	3f 83       	std	Y+7, r19	; 0x07
    2114:	2e 83       	std	Y+6, r18	; 0x06
    2116:	99 27       	eor	r25, r25
    2118:	02 c0       	rjmp	.+4      	; 0x211e <fgetc+0x76>
    211a:	8f ef       	ldi	r24, 0xFF	; 255
    211c:	9f ef       	ldi	r25, 0xFF	; 255
    211e:	df 91       	pop	r29
    2120:	cf 91       	pop	r28
    2122:	08 95       	ret

00002124 <printf>:
    2124:	cf 93       	push	r28
    2126:	df 93       	push	r29
    2128:	cd b7       	in	r28, 0x3d	; 61
    212a:	de b7       	in	r29, 0x3e	; 62
    212c:	fe 01       	movw	r30, r28
    212e:	36 96       	adiw	r30, 0x06	; 6
    2130:	61 91       	ld	r22, Z+
    2132:	71 91       	ld	r23, Z+
    2134:	af 01       	movw	r20, r30
    2136:	80 91 5c 0d 	lds	r24, 0x0D5C
    213a:	90 91 5d 0d 	lds	r25, 0x0D5D
    213e:	30 d0       	rcall	.+96     	; 0x21a0 <vfprintf>
    2140:	df 91       	pop	r29
    2142:	cf 91       	pop	r28
    2144:	08 95       	ret

00002146 <puts>:
    2146:	0f 93       	push	r16
    2148:	1f 93       	push	r17
    214a:	cf 93       	push	r28
    214c:	df 93       	push	r29
    214e:	e0 91 5c 0d 	lds	r30, 0x0D5C
    2152:	f0 91 5d 0d 	lds	r31, 0x0D5D
    2156:	23 81       	ldd	r18, Z+3	; 0x03
    2158:	21 ff       	sbrs	r18, 1
    215a:	1b c0       	rjmp	.+54     	; 0x2192 <puts+0x4c>
    215c:	ec 01       	movw	r28, r24
    215e:	00 e0       	ldi	r16, 0x00	; 0
    2160:	10 e0       	ldi	r17, 0x00	; 0
    2162:	89 91       	ld	r24, Y+
    2164:	60 91 5c 0d 	lds	r22, 0x0D5C
    2168:	70 91 5d 0d 	lds	r23, 0x0D5D
    216c:	db 01       	movw	r26, r22
    216e:	18 96       	adiw	r26, 0x08	; 8
    2170:	ed 91       	ld	r30, X+
    2172:	fc 91       	ld	r31, X
    2174:	19 97       	sbiw	r26, 0x09	; 9
    2176:	88 23       	and	r24, r24
    2178:	31 f0       	breq	.+12     	; 0x2186 <puts+0x40>
    217a:	19 95       	eicall
    217c:	89 2b       	or	r24, r25
    217e:	89 f3       	breq	.-30     	; 0x2162 <puts+0x1c>
    2180:	0f ef       	ldi	r16, 0xFF	; 255
    2182:	1f ef       	ldi	r17, 0xFF	; 255
    2184:	ee cf       	rjmp	.-36     	; 0x2162 <puts+0x1c>
    2186:	8a e0       	ldi	r24, 0x0A	; 10
    2188:	19 95       	eicall
    218a:	89 2b       	or	r24, r25
    218c:	11 f4       	brne	.+4      	; 0x2192 <puts+0x4c>
    218e:	c8 01       	movw	r24, r16
    2190:	02 c0       	rjmp	.+4      	; 0x2196 <puts+0x50>
    2192:	8f ef       	ldi	r24, 0xFF	; 255
    2194:	9f ef       	ldi	r25, 0xFF	; 255
    2196:	df 91       	pop	r29
    2198:	cf 91       	pop	r28
    219a:	1f 91       	pop	r17
    219c:	0f 91       	pop	r16
    219e:	08 95       	ret

000021a0 <vfprintf>:
    21a0:	2f 92       	push	r2
    21a2:	3f 92       	push	r3
    21a4:	4f 92       	push	r4
    21a6:	5f 92       	push	r5
    21a8:	6f 92       	push	r6
    21aa:	7f 92       	push	r7
    21ac:	8f 92       	push	r8
    21ae:	9f 92       	push	r9
    21b0:	af 92       	push	r10
    21b2:	bf 92       	push	r11
    21b4:	cf 92       	push	r12
    21b6:	df 92       	push	r13
    21b8:	ef 92       	push	r14
    21ba:	ff 92       	push	r15
    21bc:	0f 93       	push	r16
    21be:	1f 93       	push	r17
    21c0:	cf 93       	push	r28
    21c2:	df 93       	push	r29
    21c4:	cd b7       	in	r28, 0x3d	; 61
    21c6:	de b7       	in	r29, 0x3e	; 62
    21c8:	2c 97       	sbiw	r28, 0x0c	; 12
    21ca:	0f b6       	in	r0, 0x3f	; 63
    21cc:	f8 94       	cli
    21ce:	de bf       	out	0x3e, r29	; 62
    21d0:	0f be       	out	0x3f, r0	; 63
    21d2:	cd bf       	out	0x3d, r28	; 61
    21d4:	7c 01       	movw	r14, r24
    21d6:	6b 01       	movw	r12, r22
    21d8:	8a 01       	movw	r16, r20
    21da:	fc 01       	movw	r30, r24
    21dc:	17 82       	std	Z+7, r1	; 0x07
    21de:	16 82       	std	Z+6, r1	; 0x06
    21e0:	83 81       	ldd	r24, Z+3	; 0x03
    21e2:	81 ff       	sbrs	r24, 1
    21e4:	b0 c1       	rjmp	.+864    	; 0x2546 <__stack+0x347>
    21e6:	ce 01       	movw	r24, r28
    21e8:	01 96       	adiw	r24, 0x01	; 1
    21ea:	4c 01       	movw	r8, r24
    21ec:	f7 01       	movw	r30, r14
    21ee:	93 81       	ldd	r25, Z+3	; 0x03
    21f0:	f6 01       	movw	r30, r12
    21f2:	93 fd       	sbrc	r25, 3
    21f4:	85 91       	lpm	r24, Z+
    21f6:	93 ff       	sbrs	r25, 3
    21f8:	81 91       	ld	r24, Z+
    21fa:	6f 01       	movw	r12, r30
    21fc:	88 23       	and	r24, r24
    21fe:	09 f4       	brne	.+2      	; 0x2202 <__stack+0x3>
    2200:	9e c1       	rjmp	.+828    	; 0x253e <__stack+0x33f>
    2202:	85 32       	cpi	r24, 0x25	; 37
    2204:	39 f4       	brne	.+14     	; 0x2214 <__stack+0x15>
    2206:	93 fd       	sbrc	r25, 3
    2208:	85 91       	lpm	r24, Z+
    220a:	93 ff       	sbrs	r25, 3
    220c:	81 91       	ld	r24, Z+
    220e:	6f 01       	movw	r12, r30
    2210:	85 32       	cpi	r24, 0x25	; 37
    2212:	21 f4       	brne	.+8      	; 0x221c <__stack+0x1d>
    2214:	b7 01       	movw	r22, r14
    2216:	90 e0       	ldi	r25, 0x00	; 0
    2218:	0f d3       	rcall	.+1566   	; 0x2838 <fputc>
    221a:	e8 cf       	rjmp	.-48     	; 0x21ec <vfprintf+0x4c>
    221c:	51 2c       	mov	r5, r1
    221e:	31 2c       	mov	r3, r1
    2220:	20 e0       	ldi	r18, 0x00	; 0
    2222:	20 32       	cpi	r18, 0x20	; 32
    2224:	a0 f4       	brcc	.+40     	; 0x224e <__stack+0x4f>
    2226:	8b 32       	cpi	r24, 0x2B	; 43
    2228:	69 f0       	breq	.+26     	; 0x2244 <__stack+0x45>
    222a:	30 f4       	brcc	.+12     	; 0x2238 <__stack+0x39>
    222c:	80 32       	cpi	r24, 0x20	; 32
    222e:	59 f0       	breq	.+22     	; 0x2246 <__stack+0x47>
    2230:	83 32       	cpi	r24, 0x23	; 35
    2232:	69 f4       	brne	.+26     	; 0x224e <__stack+0x4f>
    2234:	20 61       	ori	r18, 0x10	; 16
    2236:	2c c0       	rjmp	.+88     	; 0x2290 <__stack+0x91>
    2238:	8d 32       	cpi	r24, 0x2D	; 45
    223a:	39 f0       	breq	.+14     	; 0x224a <__stack+0x4b>
    223c:	80 33       	cpi	r24, 0x30	; 48
    223e:	39 f4       	brne	.+14     	; 0x224e <__stack+0x4f>
    2240:	21 60       	ori	r18, 0x01	; 1
    2242:	26 c0       	rjmp	.+76     	; 0x2290 <__stack+0x91>
    2244:	22 60       	ori	r18, 0x02	; 2
    2246:	24 60       	ori	r18, 0x04	; 4
    2248:	23 c0       	rjmp	.+70     	; 0x2290 <__stack+0x91>
    224a:	28 60       	ori	r18, 0x08	; 8
    224c:	21 c0       	rjmp	.+66     	; 0x2290 <__stack+0x91>
    224e:	27 fd       	sbrc	r18, 7
    2250:	27 c0       	rjmp	.+78     	; 0x22a0 <__stack+0xa1>
    2252:	30 ed       	ldi	r19, 0xD0	; 208
    2254:	38 0f       	add	r19, r24
    2256:	3a 30       	cpi	r19, 0x0A	; 10
    2258:	78 f4       	brcc	.+30     	; 0x2278 <__stack+0x79>
    225a:	26 ff       	sbrs	r18, 6
    225c:	06 c0       	rjmp	.+12     	; 0x226a <__stack+0x6b>
    225e:	fa e0       	ldi	r31, 0x0A	; 10
    2260:	5f 9e       	mul	r5, r31
    2262:	30 0d       	add	r19, r0
    2264:	11 24       	eor	r1, r1
    2266:	53 2e       	mov	r5, r19
    2268:	13 c0       	rjmp	.+38     	; 0x2290 <__stack+0x91>
    226a:	8a e0       	ldi	r24, 0x0A	; 10
    226c:	38 9e       	mul	r3, r24
    226e:	30 0d       	add	r19, r0
    2270:	11 24       	eor	r1, r1
    2272:	33 2e       	mov	r3, r19
    2274:	20 62       	ori	r18, 0x20	; 32
    2276:	0c c0       	rjmp	.+24     	; 0x2290 <__stack+0x91>
    2278:	8e 32       	cpi	r24, 0x2E	; 46
    227a:	21 f4       	brne	.+8      	; 0x2284 <__stack+0x85>
    227c:	26 fd       	sbrc	r18, 6
    227e:	5f c1       	rjmp	.+702    	; 0x253e <__stack+0x33f>
    2280:	20 64       	ori	r18, 0x40	; 64
    2282:	06 c0       	rjmp	.+12     	; 0x2290 <__stack+0x91>
    2284:	8c 36       	cpi	r24, 0x6C	; 108
    2286:	11 f4       	brne	.+4      	; 0x228c <__stack+0x8d>
    2288:	20 68       	ori	r18, 0x80	; 128
    228a:	02 c0       	rjmp	.+4      	; 0x2290 <__stack+0x91>
    228c:	88 36       	cpi	r24, 0x68	; 104
    228e:	41 f4       	brne	.+16     	; 0x22a0 <__stack+0xa1>
    2290:	f6 01       	movw	r30, r12
    2292:	93 fd       	sbrc	r25, 3
    2294:	85 91       	lpm	r24, Z+
    2296:	93 ff       	sbrs	r25, 3
    2298:	81 91       	ld	r24, Z+
    229a:	6f 01       	movw	r12, r30
    229c:	81 11       	cpse	r24, r1
    229e:	c1 cf       	rjmp	.-126    	; 0x2222 <__stack+0x23>
    22a0:	98 2f       	mov	r25, r24
    22a2:	9f 7d       	andi	r25, 0xDF	; 223
    22a4:	95 54       	subi	r25, 0x45	; 69
    22a6:	93 30       	cpi	r25, 0x03	; 3
    22a8:	28 f4       	brcc	.+10     	; 0x22b4 <__stack+0xb5>
    22aa:	0c 5f       	subi	r16, 0xFC	; 252
    22ac:	1f 4f       	sbci	r17, 0xFF	; 255
    22ae:	ff e3       	ldi	r31, 0x3F	; 63
    22b0:	f9 83       	std	Y+1, r31	; 0x01
    22b2:	0d c0       	rjmp	.+26     	; 0x22ce <__stack+0xcf>
    22b4:	83 36       	cpi	r24, 0x63	; 99
    22b6:	31 f0       	breq	.+12     	; 0x22c4 <__stack+0xc5>
    22b8:	83 37       	cpi	r24, 0x73	; 115
    22ba:	71 f0       	breq	.+28     	; 0x22d8 <__stack+0xd9>
    22bc:	83 35       	cpi	r24, 0x53	; 83
    22be:	09 f0       	breq	.+2      	; 0x22c2 <__stack+0xc3>
    22c0:	57 c0       	rjmp	.+174    	; 0x2370 <__stack+0x171>
    22c2:	21 c0       	rjmp	.+66     	; 0x2306 <__stack+0x107>
    22c4:	f8 01       	movw	r30, r16
    22c6:	80 81       	ld	r24, Z
    22c8:	89 83       	std	Y+1, r24	; 0x01
    22ca:	0e 5f       	subi	r16, 0xFE	; 254
    22cc:	1f 4f       	sbci	r17, 0xFF	; 255
    22ce:	44 24       	eor	r4, r4
    22d0:	43 94       	inc	r4
    22d2:	51 2c       	mov	r5, r1
    22d4:	54 01       	movw	r10, r8
    22d6:	14 c0       	rjmp	.+40     	; 0x2300 <__stack+0x101>
    22d8:	38 01       	movw	r6, r16
    22da:	f2 e0       	ldi	r31, 0x02	; 2
    22dc:	6f 0e       	add	r6, r31
    22de:	71 1c       	adc	r7, r1
    22e0:	f8 01       	movw	r30, r16
    22e2:	a0 80       	ld	r10, Z
    22e4:	b1 80       	ldd	r11, Z+1	; 0x01
    22e6:	26 ff       	sbrs	r18, 6
    22e8:	03 c0       	rjmp	.+6      	; 0x22f0 <__stack+0xf1>
    22ea:	65 2d       	mov	r22, r5
    22ec:	70 e0       	ldi	r23, 0x00	; 0
    22ee:	02 c0       	rjmp	.+4      	; 0x22f4 <__stack+0xf5>
    22f0:	6f ef       	ldi	r22, 0xFF	; 255
    22f2:	7f ef       	ldi	r23, 0xFF	; 255
    22f4:	c5 01       	movw	r24, r10
    22f6:	2c 87       	std	Y+12, r18	; 0x0c
    22f8:	94 d2       	rcall	.+1320   	; 0x2822 <strnlen>
    22fa:	2c 01       	movw	r4, r24
    22fc:	83 01       	movw	r16, r6
    22fe:	2c 85       	ldd	r18, Y+12	; 0x0c
    2300:	2f 77       	andi	r18, 0x7F	; 127
    2302:	22 2e       	mov	r2, r18
    2304:	16 c0       	rjmp	.+44     	; 0x2332 <__stack+0x133>
    2306:	38 01       	movw	r6, r16
    2308:	f2 e0       	ldi	r31, 0x02	; 2
    230a:	6f 0e       	add	r6, r31
    230c:	71 1c       	adc	r7, r1
    230e:	f8 01       	movw	r30, r16
    2310:	a0 80       	ld	r10, Z
    2312:	b1 80       	ldd	r11, Z+1	; 0x01
    2314:	26 ff       	sbrs	r18, 6
    2316:	03 c0       	rjmp	.+6      	; 0x231e <__stack+0x11f>
    2318:	65 2d       	mov	r22, r5
    231a:	70 e0       	ldi	r23, 0x00	; 0
    231c:	02 c0       	rjmp	.+4      	; 0x2322 <__stack+0x123>
    231e:	6f ef       	ldi	r22, 0xFF	; 255
    2320:	7f ef       	ldi	r23, 0xFF	; 255
    2322:	c5 01       	movw	r24, r10
    2324:	2c 87       	std	Y+12, r18	; 0x0c
    2326:	6b d2       	rcall	.+1238   	; 0x27fe <strnlen_P>
    2328:	2c 01       	movw	r4, r24
    232a:	2c 85       	ldd	r18, Y+12	; 0x0c
    232c:	20 68       	ori	r18, 0x80	; 128
    232e:	22 2e       	mov	r2, r18
    2330:	83 01       	movw	r16, r6
    2332:	23 fc       	sbrc	r2, 3
    2334:	19 c0       	rjmp	.+50     	; 0x2368 <__stack+0x169>
    2336:	83 2d       	mov	r24, r3
    2338:	90 e0       	ldi	r25, 0x00	; 0
    233a:	48 16       	cp	r4, r24
    233c:	59 06       	cpc	r5, r25
    233e:	a0 f4       	brcc	.+40     	; 0x2368 <__stack+0x169>
    2340:	b7 01       	movw	r22, r14
    2342:	80 e2       	ldi	r24, 0x20	; 32
    2344:	90 e0       	ldi	r25, 0x00	; 0
    2346:	78 d2       	rcall	.+1264   	; 0x2838 <fputc>
    2348:	3a 94       	dec	r3
    234a:	f5 cf       	rjmp	.-22     	; 0x2336 <__stack+0x137>
    234c:	f5 01       	movw	r30, r10
    234e:	27 fc       	sbrc	r2, 7
    2350:	85 91       	lpm	r24, Z+
    2352:	27 fe       	sbrs	r2, 7
    2354:	81 91       	ld	r24, Z+
    2356:	5f 01       	movw	r10, r30
    2358:	b7 01       	movw	r22, r14
    235a:	90 e0       	ldi	r25, 0x00	; 0
    235c:	6d d2       	rcall	.+1242   	; 0x2838 <fputc>
    235e:	31 10       	cpse	r3, r1
    2360:	3a 94       	dec	r3
    2362:	f1 e0       	ldi	r31, 0x01	; 1
    2364:	4f 1a       	sub	r4, r31
    2366:	51 08       	sbc	r5, r1
    2368:	41 14       	cp	r4, r1
    236a:	51 04       	cpc	r5, r1
    236c:	79 f7       	brne	.-34     	; 0x234c <__stack+0x14d>
    236e:	de c0       	rjmp	.+444    	; 0x252c <__stack+0x32d>
    2370:	84 36       	cpi	r24, 0x64	; 100
    2372:	11 f0       	breq	.+4      	; 0x2378 <__stack+0x179>
    2374:	89 36       	cpi	r24, 0x69	; 105
    2376:	31 f5       	brne	.+76     	; 0x23c4 <__stack+0x1c5>
    2378:	f8 01       	movw	r30, r16
    237a:	27 ff       	sbrs	r18, 7
    237c:	07 c0       	rjmp	.+14     	; 0x238c <__stack+0x18d>
    237e:	60 81       	ld	r22, Z
    2380:	71 81       	ldd	r23, Z+1	; 0x01
    2382:	82 81       	ldd	r24, Z+2	; 0x02
    2384:	93 81       	ldd	r25, Z+3	; 0x03
    2386:	0c 5f       	subi	r16, 0xFC	; 252
    2388:	1f 4f       	sbci	r17, 0xFF	; 255
    238a:	08 c0       	rjmp	.+16     	; 0x239c <__stack+0x19d>
    238c:	60 81       	ld	r22, Z
    238e:	71 81       	ldd	r23, Z+1	; 0x01
    2390:	88 27       	eor	r24, r24
    2392:	77 fd       	sbrc	r23, 7
    2394:	80 95       	com	r24
    2396:	98 2f       	mov	r25, r24
    2398:	0e 5f       	subi	r16, 0xFE	; 254
    239a:	1f 4f       	sbci	r17, 0xFF	; 255
    239c:	2f 76       	andi	r18, 0x6F	; 111
    239e:	b2 2e       	mov	r11, r18
    23a0:	97 ff       	sbrs	r25, 7
    23a2:	09 c0       	rjmp	.+18     	; 0x23b6 <__stack+0x1b7>
    23a4:	90 95       	com	r25
    23a6:	80 95       	com	r24
    23a8:	70 95       	com	r23
    23aa:	61 95       	neg	r22
    23ac:	7f 4f       	sbci	r23, 0xFF	; 255
    23ae:	8f 4f       	sbci	r24, 0xFF	; 255
    23b0:	9f 4f       	sbci	r25, 0xFF	; 255
    23b2:	20 68       	ori	r18, 0x80	; 128
    23b4:	b2 2e       	mov	r11, r18
    23b6:	2a e0       	ldi	r18, 0x0A	; 10
    23b8:	30 e0       	ldi	r19, 0x00	; 0
    23ba:	a4 01       	movw	r20, r8
    23bc:	6f d2       	rcall	.+1246   	; 0x289c <__ultoa_invert>
    23be:	a8 2e       	mov	r10, r24
    23c0:	a8 18       	sub	r10, r8
    23c2:	43 c0       	rjmp	.+134    	; 0x244a <__stack+0x24b>
    23c4:	85 37       	cpi	r24, 0x75	; 117
    23c6:	29 f4       	brne	.+10     	; 0x23d2 <__stack+0x1d3>
    23c8:	2f 7e       	andi	r18, 0xEF	; 239
    23ca:	b2 2e       	mov	r11, r18
    23cc:	2a e0       	ldi	r18, 0x0A	; 10
    23ce:	30 e0       	ldi	r19, 0x00	; 0
    23d0:	25 c0       	rjmp	.+74     	; 0x241c <__stack+0x21d>
    23d2:	f2 2f       	mov	r31, r18
    23d4:	f9 7f       	andi	r31, 0xF9	; 249
    23d6:	bf 2e       	mov	r11, r31
    23d8:	8f 36       	cpi	r24, 0x6F	; 111
    23da:	c1 f0       	breq	.+48     	; 0x240c <__stack+0x20d>
    23dc:	18 f4       	brcc	.+6      	; 0x23e4 <__stack+0x1e5>
    23de:	88 35       	cpi	r24, 0x58	; 88
    23e0:	79 f0       	breq	.+30     	; 0x2400 <__stack+0x201>
    23e2:	ad c0       	rjmp	.+346    	; 0x253e <__stack+0x33f>
    23e4:	80 37       	cpi	r24, 0x70	; 112
    23e6:	19 f0       	breq	.+6      	; 0x23ee <__stack+0x1ef>
    23e8:	88 37       	cpi	r24, 0x78	; 120
    23ea:	21 f0       	breq	.+8      	; 0x23f4 <__stack+0x1f5>
    23ec:	a8 c0       	rjmp	.+336    	; 0x253e <__stack+0x33f>
    23ee:	2f 2f       	mov	r18, r31
    23f0:	20 61       	ori	r18, 0x10	; 16
    23f2:	b2 2e       	mov	r11, r18
    23f4:	b4 fe       	sbrs	r11, 4
    23f6:	0d c0       	rjmp	.+26     	; 0x2412 <__stack+0x213>
    23f8:	8b 2d       	mov	r24, r11
    23fa:	84 60       	ori	r24, 0x04	; 4
    23fc:	b8 2e       	mov	r11, r24
    23fe:	09 c0       	rjmp	.+18     	; 0x2412 <__stack+0x213>
    2400:	24 ff       	sbrs	r18, 4
    2402:	0a c0       	rjmp	.+20     	; 0x2418 <__stack+0x219>
    2404:	9f 2f       	mov	r25, r31
    2406:	96 60       	ori	r25, 0x06	; 6
    2408:	b9 2e       	mov	r11, r25
    240a:	06 c0       	rjmp	.+12     	; 0x2418 <__stack+0x219>
    240c:	28 e0       	ldi	r18, 0x08	; 8
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	05 c0       	rjmp	.+10     	; 0x241c <__stack+0x21d>
    2412:	20 e1       	ldi	r18, 0x10	; 16
    2414:	30 e0       	ldi	r19, 0x00	; 0
    2416:	02 c0       	rjmp	.+4      	; 0x241c <__stack+0x21d>
    2418:	20 e1       	ldi	r18, 0x10	; 16
    241a:	32 e0       	ldi	r19, 0x02	; 2
    241c:	f8 01       	movw	r30, r16
    241e:	b7 fe       	sbrs	r11, 7
    2420:	07 c0       	rjmp	.+14     	; 0x2430 <__stack+0x231>
    2422:	60 81       	ld	r22, Z
    2424:	71 81       	ldd	r23, Z+1	; 0x01
    2426:	82 81       	ldd	r24, Z+2	; 0x02
    2428:	93 81       	ldd	r25, Z+3	; 0x03
    242a:	0c 5f       	subi	r16, 0xFC	; 252
    242c:	1f 4f       	sbci	r17, 0xFF	; 255
    242e:	06 c0       	rjmp	.+12     	; 0x243c <__stack+0x23d>
    2430:	60 81       	ld	r22, Z
    2432:	71 81       	ldd	r23, Z+1	; 0x01
    2434:	80 e0       	ldi	r24, 0x00	; 0
    2436:	90 e0       	ldi	r25, 0x00	; 0
    2438:	0e 5f       	subi	r16, 0xFE	; 254
    243a:	1f 4f       	sbci	r17, 0xFF	; 255
    243c:	a4 01       	movw	r20, r8
    243e:	2e d2       	rcall	.+1116   	; 0x289c <__ultoa_invert>
    2440:	a8 2e       	mov	r10, r24
    2442:	a8 18       	sub	r10, r8
    2444:	fb 2d       	mov	r31, r11
    2446:	ff 77       	andi	r31, 0x7F	; 127
    2448:	bf 2e       	mov	r11, r31
    244a:	b6 fe       	sbrs	r11, 6
    244c:	0b c0       	rjmp	.+22     	; 0x2464 <__stack+0x265>
    244e:	2b 2d       	mov	r18, r11
    2450:	2e 7f       	andi	r18, 0xFE	; 254
    2452:	a5 14       	cp	r10, r5
    2454:	50 f4       	brcc	.+20     	; 0x246a <__stack+0x26b>
    2456:	b4 fe       	sbrs	r11, 4
    2458:	0a c0       	rjmp	.+20     	; 0x246e <__stack+0x26f>
    245a:	b2 fc       	sbrc	r11, 2
    245c:	08 c0       	rjmp	.+16     	; 0x246e <__stack+0x26f>
    245e:	2b 2d       	mov	r18, r11
    2460:	2e 7e       	andi	r18, 0xEE	; 238
    2462:	05 c0       	rjmp	.+10     	; 0x246e <__stack+0x26f>
    2464:	7a 2c       	mov	r7, r10
    2466:	2b 2d       	mov	r18, r11
    2468:	03 c0       	rjmp	.+6      	; 0x2470 <__stack+0x271>
    246a:	7a 2c       	mov	r7, r10
    246c:	01 c0       	rjmp	.+2      	; 0x2470 <__stack+0x271>
    246e:	75 2c       	mov	r7, r5
    2470:	24 ff       	sbrs	r18, 4
    2472:	0d c0       	rjmp	.+26     	; 0x248e <__stack+0x28f>
    2474:	fe 01       	movw	r30, r28
    2476:	ea 0d       	add	r30, r10
    2478:	f1 1d       	adc	r31, r1
    247a:	80 81       	ld	r24, Z
    247c:	80 33       	cpi	r24, 0x30	; 48
    247e:	11 f4       	brne	.+4      	; 0x2484 <__stack+0x285>
    2480:	29 7e       	andi	r18, 0xE9	; 233
    2482:	09 c0       	rjmp	.+18     	; 0x2496 <__stack+0x297>
    2484:	22 ff       	sbrs	r18, 2
    2486:	06 c0       	rjmp	.+12     	; 0x2494 <__stack+0x295>
    2488:	73 94       	inc	r7
    248a:	73 94       	inc	r7
    248c:	04 c0       	rjmp	.+8      	; 0x2496 <__stack+0x297>
    248e:	82 2f       	mov	r24, r18
    2490:	86 78       	andi	r24, 0x86	; 134
    2492:	09 f0       	breq	.+2      	; 0x2496 <__stack+0x297>
    2494:	73 94       	inc	r7
    2496:	23 fd       	sbrc	r18, 3
    2498:	12 c0       	rjmp	.+36     	; 0x24be <__stack+0x2bf>
    249a:	20 ff       	sbrs	r18, 0
    249c:	06 c0       	rjmp	.+12     	; 0x24aa <__stack+0x2ab>
    249e:	5a 2c       	mov	r5, r10
    24a0:	73 14       	cp	r7, r3
    24a2:	18 f4       	brcc	.+6      	; 0x24aa <__stack+0x2ab>
    24a4:	53 0c       	add	r5, r3
    24a6:	57 18       	sub	r5, r7
    24a8:	73 2c       	mov	r7, r3
    24aa:	73 14       	cp	r7, r3
    24ac:	60 f4       	brcc	.+24     	; 0x24c6 <__stack+0x2c7>
    24ae:	b7 01       	movw	r22, r14
    24b0:	80 e2       	ldi	r24, 0x20	; 32
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	2c 87       	std	Y+12, r18	; 0x0c
    24b6:	c0 d1       	rcall	.+896    	; 0x2838 <fputc>
    24b8:	73 94       	inc	r7
    24ba:	2c 85       	ldd	r18, Y+12	; 0x0c
    24bc:	f6 cf       	rjmp	.-20     	; 0x24aa <__stack+0x2ab>
    24be:	73 14       	cp	r7, r3
    24c0:	10 f4       	brcc	.+4      	; 0x24c6 <__stack+0x2c7>
    24c2:	37 18       	sub	r3, r7
    24c4:	01 c0       	rjmp	.+2      	; 0x24c8 <__stack+0x2c9>
    24c6:	31 2c       	mov	r3, r1
    24c8:	24 ff       	sbrs	r18, 4
    24ca:	11 c0       	rjmp	.+34     	; 0x24ee <__stack+0x2ef>
    24cc:	b7 01       	movw	r22, r14
    24ce:	80 e3       	ldi	r24, 0x30	; 48
    24d0:	90 e0       	ldi	r25, 0x00	; 0
    24d2:	2c 87       	std	Y+12, r18	; 0x0c
    24d4:	b1 d1       	rcall	.+866    	; 0x2838 <fputc>
    24d6:	2c 85       	ldd	r18, Y+12	; 0x0c
    24d8:	22 ff       	sbrs	r18, 2
    24da:	16 c0       	rjmp	.+44     	; 0x2508 <__stack+0x309>
    24dc:	21 ff       	sbrs	r18, 1
    24de:	03 c0       	rjmp	.+6      	; 0x24e6 <__stack+0x2e7>
    24e0:	88 e5       	ldi	r24, 0x58	; 88
    24e2:	90 e0       	ldi	r25, 0x00	; 0
    24e4:	02 c0       	rjmp	.+4      	; 0x24ea <__stack+0x2eb>
    24e6:	88 e7       	ldi	r24, 0x78	; 120
    24e8:	90 e0       	ldi	r25, 0x00	; 0
    24ea:	b7 01       	movw	r22, r14
    24ec:	0c c0       	rjmp	.+24     	; 0x2506 <__stack+0x307>
    24ee:	82 2f       	mov	r24, r18
    24f0:	86 78       	andi	r24, 0x86	; 134
    24f2:	51 f0       	breq	.+20     	; 0x2508 <__stack+0x309>
    24f4:	21 fd       	sbrc	r18, 1
    24f6:	02 c0       	rjmp	.+4      	; 0x24fc <__stack+0x2fd>
    24f8:	80 e2       	ldi	r24, 0x20	; 32
    24fa:	01 c0       	rjmp	.+2      	; 0x24fe <__stack+0x2ff>
    24fc:	8b e2       	ldi	r24, 0x2B	; 43
    24fe:	27 fd       	sbrc	r18, 7
    2500:	8d e2       	ldi	r24, 0x2D	; 45
    2502:	b7 01       	movw	r22, r14
    2504:	90 e0       	ldi	r25, 0x00	; 0
    2506:	98 d1       	rcall	.+816    	; 0x2838 <fputc>
    2508:	a5 14       	cp	r10, r5
    250a:	30 f4       	brcc	.+12     	; 0x2518 <__stack+0x319>
    250c:	b7 01       	movw	r22, r14
    250e:	80 e3       	ldi	r24, 0x30	; 48
    2510:	90 e0       	ldi	r25, 0x00	; 0
    2512:	92 d1       	rcall	.+804    	; 0x2838 <fputc>
    2514:	5a 94       	dec	r5
    2516:	f8 cf       	rjmp	.-16     	; 0x2508 <__stack+0x309>
    2518:	aa 94       	dec	r10
    251a:	f4 01       	movw	r30, r8
    251c:	ea 0d       	add	r30, r10
    251e:	f1 1d       	adc	r31, r1
    2520:	80 81       	ld	r24, Z
    2522:	b7 01       	movw	r22, r14
    2524:	90 e0       	ldi	r25, 0x00	; 0
    2526:	88 d1       	rcall	.+784    	; 0x2838 <fputc>
    2528:	a1 10       	cpse	r10, r1
    252a:	f6 cf       	rjmp	.-20     	; 0x2518 <__stack+0x319>
    252c:	33 20       	and	r3, r3
    252e:	09 f4       	brne	.+2      	; 0x2532 <__stack+0x333>
    2530:	5d ce       	rjmp	.-838    	; 0x21ec <vfprintf+0x4c>
    2532:	b7 01       	movw	r22, r14
    2534:	80 e2       	ldi	r24, 0x20	; 32
    2536:	90 e0       	ldi	r25, 0x00	; 0
    2538:	7f d1       	rcall	.+766    	; 0x2838 <fputc>
    253a:	3a 94       	dec	r3
    253c:	f7 cf       	rjmp	.-18     	; 0x252c <__stack+0x32d>
    253e:	f7 01       	movw	r30, r14
    2540:	86 81       	ldd	r24, Z+6	; 0x06
    2542:	97 81       	ldd	r25, Z+7	; 0x07
    2544:	02 c0       	rjmp	.+4      	; 0x254a <__stack+0x34b>
    2546:	8f ef       	ldi	r24, 0xFF	; 255
    2548:	9f ef       	ldi	r25, 0xFF	; 255
    254a:	2c 96       	adiw	r28, 0x0c	; 12
    254c:	0f b6       	in	r0, 0x3f	; 63
    254e:	f8 94       	cli
    2550:	de bf       	out	0x3e, r29	; 62
    2552:	0f be       	out	0x3f, r0	; 63
    2554:	cd bf       	out	0x3d, r28	; 61
    2556:	df 91       	pop	r29
    2558:	cf 91       	pop	r28
    255a:	1f 91       	pop	r17
    255c:	0f 91       	pop	r16
    255e:	ff 90       	pop	r15
    2560:	ef 90       	pop	r14
    2562:	df 90       	pop	r13
    2564:	cf 90       	pop	r12
    2566:	bf 90       	pop	r11
    2568:	af 90       	pop	r10
    256a:	9f 90       	pop	r9
    256c:	8f 90       	pop	r8
    256e:	7f 90       	pop	r7
    2570:	6f 90       	pop	r6
    2572:	5f 90       	pop	r5
    2574:	4f 90       	pop	r4
    2576:	3f 90       	pop	r3
    2578:	2f 90       	pop	r2
    257a:	08 95       	ret

0000257c <calloc>:
    257c:	0f 93       	push	r16
    257e:	1f 93       	push	r17
    2580:	cf 93       	push	r28
    2582:	df 93       	push	r29
    2584:	86 9f       	mul	r24, r22
    2586:	80 01       	movw	r16, r0
    2588:	87 9f       	mul	r24, r23
    258a:	10 0d       	add	r17, r0
    258c:	96 9f       	mul	r25, r22
    258e:	10 0d       	add	r17, r0
    2590:	11 24       	eor	r1, r1
    2592:	c8 01       	movw	r24, r16
    2594:	0d d0       	rcall	.+26     	; 0x25b0 <malloc>
    2596:	ec 01       	movw	r28, r24
    2598:	00 97       	sbiw	r24, 0x00	; 0
    259a:	21 f0       	breq	.+8      	; 0x25a4 <calloc+0x28>
    259c:	a8 01       	movw	r20, r16
    259e:	60 e0       	ldi	r22, 0x00	; 0
    25a0:	70 e0       	ldi	r23, 0x00	; 0
    25a2:	38 d1       	rcall	.+624    	; 0x2814 <memset>
    25a4:	ce 01       	movw	r24, r28
    25a6:	df 91       	pop	r29
    25a8:	cf 91       	pop	r28
    25aa:	1f 91       	pop	r17
    25ac:	0f 91       	pop	r16
    25ae:	08 95       	ret

000025b0 <malloc>:
    25b0:	cf 93       	push	r28
    25b2:	df 93       	push	r29
    25b4:	82 30       	cpi	r24, 0x02	; 2
    25b6:	91 05       	cpc	r25, r1
    25b8:	10 f4       	brcc	.+4      	; 0x25be <malloc+0xe>
    25ba:	82 e0       	ldi	r24, 0x02	; 2
    25bc:	90 e0       	ldi	r25, 0x00	; 0
    25be:	e0 91 62 0d 	lds	r30, 0x0D62
    25c2:	f0 91 63 0d 	lds	r31, 0x0D63
    25c6:	20 e0       	ldi	r18, 0x00	; 0
    25c8:	30 e0       	ldi	r19, 0x00	; 0
    25ca:	a0 e0       	ldi	r26, 0x00	; 0
    25cc:	b0 e0       	ldi	r27, 0x00	; 0
    25ce:	30 97       	sbiw	r30, 0x00	; 0
    25d0:	39 f1       	breq	.+78     	; 0x2620 <malloc+0x70>
    25d2:	40 81       	ld	r20, Z
    25d4:	51 81       	ldd	r21, Z+1	; 0x01
    25d6:	48 17       	cp	r20, r24
    25d8:	59 07       	cpc	r21, r25
    25da:	b8 f0       	brcs	.+46     	; 0x260a <malloc+0x5a>
    25dc:	48 17       	cp	r20, r24
    25de:	59 07       	cpc	r21, r25
    25e0:	71 f4       	brne	.+28     	; 0x25fe <malloc+0x4e>
    25e2:	82 81       	ldd	r24, Z+2	; 0x02
    25e4:	93 81       	ldd	r25, Z+3	; 0x03
    25e6:	10 97       	sbiw	r26, 0x00	; 0
    25e8:	29 f0       	breq	.+10     	; 0x25f4 <malloc+0x44>
    25ea:	13 96       	adiw	r26, 0x03	; 3
    25ec:	9c 93       	st	X, r25
    25ee:	8e 93       	st	-X, r24
    25f0:	12 97       	sbiw	r26, 0x02	; 2
    25f2:	2c c0       	rjmp	.+88     	; 0x264c <malloc+0x9c>
    25f4:	90 93 63 0d 	sts	0x0D63, r25
    25f8:	80 93 62 0d 	sts	0x0D62, r24
    25fc:	27 c0       	rjmp	.+78     	; 0x264c <malloc+0x9c>
    25fe:	21 15       	cp	r18, r1
    2600:	31 05       	cpc	r19, r1
    2602:	31 f0       	breq	.+12     	; 0x2610 <malloc+0x60>
    2604:	42 17       	cp	r20, r18
    2606:	53 07       	cpc	r21, r19
    2608:	18 f0       	brcs	.+6      	; 0x2610 <malloc+0x60>
    260a:	a9 01       	movw	r20, r18
    260c:	db 01       	movw	r26, r22
    260e:	01 c0       	rjmp	.+2      	; 0x2612 <malloc+0x62>
    2610:	ef 01       	movw	r28, r30
    2612:	9a 01       	movw	r18, r20
    2614:	bd 01       	movw	r22, r26
    2616:	df 01       	movw	r26, r30
    2618:	02 80       	ldd	r0, Z+2	; 0x02
    261a:	f3 81       	ldd	r31, Z+3	; 0x03
    261c:	e0 2d       	mov	r30, r0
    261e:	d7 cf       	rjmp	.-82     	; 0x25ce <malloc+0x1e>
    2620:	21 15       	cp	r18, r1
    2622:	31 05       	cpc	r19, r1
    2624:	f9 f0       	breq	.+62     	; 0x2664 <malloc+0xb4>
    2626:	28 1b       	sub	r18, r24
    2628:	39 0b       	sbc	r19, r25
    262a:	24 30       	cpi	r18, 0x04	; 4
    262c:	31 05       	cpc	r19, r1
    262e:	80 f4       	brcc	.+32     	; 0x2650 <malloc+0xa0>
    2630:	8a 81       	ldd	r24, Y+2	; 0x02
    2632:	9b 81       	ldd	r25, Y+3	; 0x03
    2634:	61 15       	cp	r22, r1
    2636:	71 05       	cpc	r23, r1
    2638:	21 f0       	breq	.+8      	; 0x2642 <malloc+0x92>
    263a:	fb 01       	movw	r30, r22
    263c:	93 83       	std	Z+3, r25	; 0x03
    263e:	82 83       	std	Z+2, r24	; 0x02
    2640:	04 c0       	rjmp	.+8      	; 0x264a <malloc+0x9a>
    2642:	90 93 63 0d 	sts	0x0D63, r25
    2646:	80 93 62 0d 	sts	0x0D62, r24
    264a:	fe 01       	movw	r30, r28
    264c:	32 96       	adiw	r30, 0x02	; 2
    264e:	44 c0       	rjmp	.+136    	; 0x26d8 <malloc+0x128>
    2650:	fe 01       	movw	r30, r28
    2652:	e2 0f       	add	r30, r18
    2654:	f3 1f       	adc	r31, r19
    2656:	81 93       	st	Z+, r24
    2658:	91 93       	st	Z+, r25
    265a:	22 50       	subi	r18, 0x02	; 2
    265c:	31 09       	sbc	r19, r1
    265e:	39 83       	std	Y+1, r19	; 0x01
    2660:	28 83       	st	Y, r18
    2662:	3a c0       	rjmp	.+116    	; 0x26d8 <malloc+0x128>
    2664:	20 91 60 0d 	lds	r18, 0x0D60
    2668:	30 91 61 0d 	lds	r19, 0x0D61
    266c:	23 2b       	or	r18, r19
    266e:	41 f4       	brne	.+16     	; 0x2680 <malloc+0xd0>
    2670:	20 91 04 02 	lds	r18, 0x0204
    2674:	30 91 05 02 	lds	r19, 0x0205
    2678:	30 93 61 0d 	sts	0x0D61, r19
    267c:	20 93 60 0d 	sts	0x0D60, r18
    2680:	20 91 02 02 	lds	r18, 0x0202
    2684:	30 91 03 02 	lds	r19, 0x0203
    2688:	21 15       	cp	r18, r1
    268a:	31 05       	cpc	r19, r1
    268c:	41 f4       	brne	.+16     	; 0x269e <malloc+0xee>
    268e:	2d b7       	in	r18, 0x3d	; 61
    2690:	3e b7       	in	r19, 0x3e	; 62
    2692:	40 91 06 02 	lds	r20, 0x0206
    2696:	50 91 07 02 	lds	r21, 0x0207
    269a:	24 1b       	sub	r18, r20
    269c:	35 0b       	sbc	r19, r21
    269e:	e0 91 60 0d 	lds	r30, 0x0D60
    26a2:	f0 91 61 0d 	lds	r31, 0x0D61
    26a6:	e2 17       	cp	r30, r18
    26a8:	f3 07       	cpc	r31, r19
    26aa:	a0 f4       	brcc	.+40     	; 0x26d4 <malloc+0x124>
    26ac:	2e 1b       	sub	r18, r30
    26ae:	3f 0b       	sbc	r19, r31
    26b0:	28 17       	cp	r18, r24
    26b2:	39 07       	cpc	r19, r25
    26b4:	78 f0       	brcs	.+30     	; 0x26d4 <malloc+0x124>
    26b6:	ac 01       	movw	r20, r24
    26b8:	4e 5f       	subi	r20, 0xFE	; 254
    26ba:	5f 4f       	sbci	r21, 0xFF	; 255
    26bc:	24 17       	cp	r18, r20
    26be:	35 07       	cpc	r19, r21
    26c0:	48 f0       	brcs	.+18     	; 0x26d4 <malloc+0x124>
    26c2:	4e 0f       	add	r20, r30
    26c4:	5f 1f       	adc	r21, r31
    26c6:	50 93 61 0d 	sts	0x0D61, r21
    26ca:	40 93 60 0d 	sts	0x0D60, r20
    26ce:	81 93       	st	Z+, r24
    26d0:	91 93       	st	Z+, r25
    26d2:	02 c0       	rjmp	.+4      	; 0x26d8 <malloc+0x128>
    26d4:	e0 e0       	ldi	r30, 0x00	; 0
    26d6:	f0 e0       	ldi	r31, 0x00	; 0
    26d8:	cf 01       	movw	r24, r30
    26da:	df 91       	pop	r29
    26dc:	cf 91       	pop	r28
    26de:	08 95       	ret

000026e0 <free>:
    26e0:	cf 93       	push	r28
    26e2:	df 93       	push	r29
    26e4:	00 97       	sbiw	r24, 0x00	; 0
    26e6:	09 f4       	brne	.+2      	; 0x26ea <free+0xa>
    26e8:	87 c0       	rjmp	.+270    	; 0x27f8 <free+0x118>
    26ea:	fc 01       	movw	r30, r24
    26ec:	32 97       	sbiw	r30, 0x02	; 2
    26ee:	13 82       	std	Z+3, r1	; 0x03
    26f0:	12 82       	std	Z+2, r1	; 0x02
    26f2:	c0 91 62 0d 	lds	r28, 0x0D62
    26f6:	d0 91 63 0d 	lds	r29, 0x0D63
    26fa:	20 97       	sbiw	r28, 0x00	; 0
    26fc:	81 f4       	brne	.+32     	; 0x271e <free+0x3e>
    26fe:	20 81       	ld	r18, Z
    2700:	31 81       	ldd	r19, Z+1	; 0x01
    2702:	28 0f       	add	r18, r24
    2704:	39 1f       	adc	r19, r25
    2706:	80 91 60 0d 	lds	r24, 0x0D60
    270a:	90 91 61 0d 	lds	r25, 0x0D61
    270e:	82 17       	cp	r24, r18
    2710:	93 07       	cpc	r25, r19
    2712:	79 f5       	brne	.+94     	; 0x2772 <free+0x92>
    2714:	f0 93 61 0d 	sts	0x0D61, r31
    2718:	e0 93 60 0d 	sts	0x0D60, r30
    271c:	6d c0       	rjmp	.+218    	; 0x27f8 <free+0x118>
    271e:	de 01       	movw	r26, r28
    2720:	20 e0       	ldi	r18, 0x00	; 0
    2722:	30 e0       	ldi	r19, 0x00	; 0
    2724:	ae 17       	cp	r26, r30
    2726:	bf 07       	cpc	r27, r31
    2728:	50 f4       	brcc	.+20     	; 0x273e <free+0x5e>
    272a:	12 96       	adiw	r26, 0x02	; 2
    272c:	4d 91       	ld	r20, X+
    272e:	5c 91       	ld	r21, X
    2730:	13 97       	sbiw	r26, 0x03	; 3
    2732:	9d 01       	movw	r18, r26
    2734:	41 15       	cp	r20, r1
    2736:	51 05       	cpc	r21, r1
    2738:	09 f1       	breq	.+66     	; 0x277c <free+0x9c>
    273a:	da 01       	movw	r26, r20
    273c:	f3 cf       	rjmp	.-26     	; 0x2724 <free+0x44>
    273e:	b3 83       	std	Z+3, r27	; 0x03
    2740:	a2 83       	std	Z+2, r26	; 0x02
    2742:	40 81       	ld	r20, Z
    2744:	51 81       	ldd	r21, Z+1	; 0x01
    2746:	84 0f       	add	r24, r20
    2748:	95 1f       	adc	r25, r21
    274a:	8a 17       	cp	r24, r26
    274c:	9b 07       	cpc	r25, r27
    274e:	71 f4       	brne	.+28     	; 0x276c <free+0x8c>
    2750:	8d 91       	ld	r24, X+
    2752:	9c 91       	ld	r25, X
    2754:	11 97       	sbiw	r26, 0x01	; 1
    2756:	84 0f       	add	r24, r20
    2758:	95 1f       	adc	r25, r21
    275a:	02 96       	adiw	r24, 0x02	; 2
    275c:	91 83       	std	Z+1, r25	; 0x01
    275e:	80 83       	st	Z, r24
    2760:	12 96       	adiw	r26, 0x02	; 2
    2762:	8d 91       	ld	r24, X+
    2764:	9c 91       	ld	r25, X
    2766:	13 97       	sbiw	r26, 0x03	; 3
    2768:	93 83       	std	Z+3, r25	; 0x03
    276a:	82 83       	std	Z+2, r24	; 0x02
    276c:	21 15       	cp	r18, r1
    276e:	31 05       	cpc	r19, r1
    2770:	29 f4       	brne	.+10     	; 0x277c <free+0x9c>
    2772:	f0 93 63 0d 	sts	0x0D63, r31
    2776:	e0 93 62 0d 	sts	0x0D62, r30
    277a:	3e c0       	rjmp	.+124    	; 0x27f8 <free+0x118>
    277c:	d9 01       	movw	r26, r18
    277e:	13 96       	adiw	r26, 0x03	; 3
    2780:	fc 93       	st	X, r31
    2782:	ee 93       	st	-X, r30
    2784:	12 97       	sbiw	r26, 0x02	; 2
    2786:	4d 91       	ld	r20, X+
    2788:	5d 91       	ld	r21, X+
    278a:	a4 0f       	add	r26, r20
    278c:	b5 1f       	adc	r27, r21
    278e:	ea 17       	cp	r30, r26
    2790:	fb 07       	cpc	r31, r27
    2792:	79 f4       	brne	.+30     	; 0x27b2 <free+0xd2>
    2794:	80 81       	ld	r24, Z
    2796:	91 81       	ldd	r25, Z+1	; 0x01
    2798:	84 0f       	add	r24, r20
    279a:	95 1f       	adc	r25, r21
    279c:	02 96       	adiw	r24, 0x02	; 2
    279e:	d9 01       	movw	r26, r18
    27a0:	11 96       	adiw	r26, 0x01	; 1
    27a2:	9c 93       	st	X, r25
    27a4:	8e 93       	st	-X, r24
    27a6:	82 81       	ldd	r24, Z+2	; 0x02
    27a8:	93 81       	ldd	r25, Z+3	; 0x03
    27aa:	13 96       	adiw	r26, 0x03	; 3
    27ac:	9c 93       	st	X, r25
    27ae:	8e 93       	st	-X, r24
    27b0:	12 97       	sbiw	r26, 0x02	; 2
    27b2:	e0 e0       	ldi	r30, 0x00	; 0
    27b4:	f0 e0       	ldi	r31, 0x00	; 0
    27b6:	8a 81       	ldd	r24, Y+2	; 0x02
    27b8:	9b 81       	ldd	r25, Y+3	; 0x03
    27ba:	00 97       	sbiw	r24, 0x00	; 0
    27bc:	19 f0       	breq	.+6      	; 0x27c4 <free+0xe4>
    27be:	fe 01       	movw	r30, r28
    27c0:	ec 01       	movw	r28, r24
    27c2:	f9 cf       	rjmp	.-14     	; 0x27b6 <free+0xd6>
    27c4:	ce 01       	movw	r24, r28
    27c6:	02 96       	adiw	r24, 0x02	; 2
    27c8:	28 81       	ld	r18, Y
    27ca:	39 81       	ldd	r19, Y+1	; 0x01
    27cc:	82 0f       	add	r24, r18
    27ce:	93 1f       	adc	r25, r19
    27d0:	20 91 60 0d 	lds	r18, 0x0D60
    27d4:	30 91 61 0d 	lds	r19, 0x0D61
    27d8:	28 17       	cp	r18, r24
    27da:	39 07       	cpc	r19, r25
    27dc:	69 f4       	brne	.+26     	; 0x27f8 <free+0x118>
    27de:	30 97       	sbiw	r30, 0x00	; 0
    27e0:	29 f4       	brne	.+10     	; 0x27ec <free+0x10c>
    27e2:	10 92 63 0d 	sts	0x0D63, r1
    27e6:	10 92 62 0d 	sts	0x0D62, r1
    27ea:	02 c0       	rjmp	.+4      	; 0x27f0 <free+0x110>
    27ec:	13 82       	std	Z+3, r1	; 0x03
    27ee:	12 82       	std	Z+2, r1	; 0x02
    27f0:	d0 93 61 0d 	sts	0x0D61, r29
    27f4:	c0 93 60 0d 	sts	0x0D60, r28
    27f8:	df 91       	pop	r29
    27fa:	cf 91       	pop	r28
    27fc:	08 95       	ret

000027fe <strnlen_P>:
    27fe:	fc 01       	movw	r30, r24
    2800:	05 90       	lpm	r0, Z+
    2802:	61 50       	subi	r22, 0x01	; 1
    2804:	70 40       	sbci	r23, 0x00	; 0
    2806:	01 10       	cpse	r0, r1
    2808:	d8 f7       	brcc	.-10     	; 0x2800 <strnlen_P+0x2>
    280a:	80 95       	com	r24
    280c:	90 95       	com	r25
    280e:	8e 0f       	add	r24, r30
    2810:	9f 1f       	adc	r25, r31
    2812:	08 95       	ret

00002814 <memset>:
    2814:	dc 01       	movw	r26, r24
    2816:	01 c0       	rjmp	.+2      	; 0x281a <memset+0x6>
    2818:	6d 93       	st	X+, r22
    281a:	41 50       	subi	r20, 0x01	; 1
    281c:	50 40       	sbci	r21, 0x00	; 0
    281e:	e0 f7       	brcc	.-8      	; 0x2818 <memset+0x4>
    2820:	08 95       	ret

00002822 <strnlen>:
    2822:	fc 01       	movw	r30, r24
    2824:	61 50       	subi	r22, 0x01	; 1
    2826:	70 40       	sbci	r23, 0x00	; 0
    2828:	01 90       	ld	r0, Z+
    282a:	01 10       	cpse	r0, r1
    282c:	d8 f7       	brcc	.-10     	; 0x2824 <strnlen+0x2>
    282e:	80 95       	com	r24
    2830:	90 95       	com	r25
    2832:	8e 0f       	add	r24, r30
    2834:	9f 1f       	adc	r25, r31
    2836:	08 95       	ret

00002838 <fputc>:
    2838:	0f 93       	push	r16
    283a:	1f 93       	push	r17
    283c:	cf 93       	push	r28
    283e:	df 93       	push	r29
    2840:	18 2f       	mov	r17, r24
    2842:	09 2f       	mov	r16, r25
    2844:	eb 01       	movw	r28, r22
    2846:	8b 81       	ldd	r24, Y+3	; 0x03
    2848:	81 fd       	sbrc	r24, 1
    284a:	03 c0       	rjmp	.+6      	; 0x2852 <fputc+0x1a>
    284c:	8f ef       	ldi	r24, 0xFF	; 255
    284e:	9f ef       	ldi	r25, 0xFF	; 255
    2850:	20 c0       	rjmp	.+64     	; 0x2892 <fputc+0x5a>
    2852:	82 ff       	sbrs	r24, 2
    2854:	10 c0       	rjmp	.+32     	; 0x2876 <fputc+0x3e>
    2856:	4e 81       	ldd	r20, Y+6	; 0x06
    2858:	5f 81       	ldd	r21, Y+7	; 0x07
    285a:	2c 81       	ldd	r18, Y+4	; 0x04
    285c:	3d 81       	ldd	r19, Y+5	; 0x05
    285e:	42 17       	cp	r20, r18
    2860:	53 07       	cpc	r21, r19
    2862:	7c f4       	brge	.+30     	; 0x2882 <fputc+0x4a>
    2864:	e8 81       	ld	r30, Y
    2866:	f9 81       	ldd	r31, Y+1	; 0x01
    2868:	9f 01       	movw	r18, r30
    286a:	2f 5f       	subi	r18, 0xFF	; 255
    286c:	3f 4f       	sbci	r19, 0xFF	; 255
    286e:	39 83       	std	Y+1, r19	; 0x01
    2870:	28 83       	st	Y, r18
    2872:	10 83       	st	Z, r17
    2874:	06 c0       	rjmp	.+12     	; 0x2882 <fputc+0x4a>
    2876:	e8 85       	ldd	r30, Y+8	; 0x08
    2878:	f9 85       	ldd	r31, Y+9	; 0x09
    287a:	81 2f       	mov	r24, r17
    287c:	19 95       	eicall
    287e:	89 2b       	or	r24, r25
    2880:	29 f7       	brne	.-54     	; 0x284c <fputc+0x14>
    2882:	2e 81       	ldd	r18, Y+6	; 0x06
    2884:	3f 81       	ldd	r19, Y+7	; 0x07
    2886:	2f 5f       	subi	r18, 0xFF	; 255
    2888:	3f 4f       	sbci	r19, 0xFF	; 255
    288a:	3f 83       	std	Y+7, r19	; 0x07
    288c:	2e 83       	std	Y+6, r18	; 0x06
    288e:	81 2f       	mov	r24, r17
    2890:	90 2f       	mov	r25, r16
    2892:	df 91       	pop	r29
    2894:	cf 91       	pop	r28
    2896:	1f 91       	pop	r17
    2898:	0f 91       	pop	r16
    289a:	08 95       	ret

0000289c <__ultoa_invert>:
    289c:	fa 01       	movw	r30, r20
    289e:	aa 27       	eor	r26, r26
    28a0:	28 30       	cpi	r18, 0x08	; 8
    28a2:	51 f1       	breq	.+84     	; 0x28f8 <__ultoa_invert+0x5c>
    28a4:	20 31       	cpi	r18, 0x10	; 16
    28a6:	81 f1       	breq	.+96     	; 0x2908 <__ultoa_invert+0x6c>
    28a8:	e8 94       	clt
    28aa:	6f 93       	push	r22
    28ac:	6e 7f       	andi	r22, 0xFE	; 254
    28ae:	6e 5f       	subi	r22, 0xFE	; 254
    28b0:	7f 4f       	sbci	r23, 0xFF	; 255
    28b2:	8f 4f       	sbci	r24, 0xFF	; 255
    28b4:	9f 4f       	sbci	r25, 0xFF	; 255
    28b6:	af 4f       	sbci	r26, 0xFF	; 255
    28b8:	b1 e0       	ldi	r27, 0x01	; 1
    28ba:	3e d0       	rcall	.+124    	; 0x2938 <__ultoa_invert+0x9c>
    28bc:	b4 e0       	ldi	r27, 0x04	; 4
    28be:	3c d0       	rcall	.+120    	; 0x2938 <__ultoa_invert+0x9c>
    28c0:	67 0f       	add	r22, r23
    28c2:	78 1f       	adc	r23, r24
    28c4:	89 1f       	adc	r24, r25
    28c6:	9a 1f       	adc	r25, r26
    28c8:	a1 1d       	adc	r26, r1
    28ca:	68 0f       	add	r22, r24
    28cc:	79 1f       	adc	r23, r25
    28ce:	8a 1f       	adc	r24, r26
    28d0:	91 1d       	adc	r25, r1
    28d2:	a1 1d       	adc	r26, r1
    28d4:	6a 0f       	add	r22, r26
    28d6:	71 1d       	adc	r23, r1
    28d8:	81 1d       	adc	r24, r1
    28da:	91 1d       	adc	r25, r1
    28dc:	a1 1d       	adc	r26, r1
    28de:	20 d0       	rcall	.+64     	; 0x2920 <__ultoa_invert+0x84>
    28e0:	09 f4       	brne	.+2      	; 0x28e4 <__ultoa_invert+0x48>
    28e2:	68 94       	set
    28e4:	3f 91       	pop	r19
    28e6:	2a e0       	ldi	r18, 0x0A	; 10
    28e8:	26 9f       	mul	r18, r22
    28ea:	11 24       	eor	r1, r1
    28ec:	30 19       	sub	r19, r0
    28ee:	30 5d       	subi	r19, 0xD0	; 208
    28f0:	31 93       	st	Z+, r19
    28f2:	de f6       	brtc	.-74     	; 0x28aa <__ultoa_invert+0xe>
    28f4:	cf 01       	movw	r24, r30
    28f6:	08 95       	ret
    28f8:	46 2f       	mov	r20, r22
    28fa:	47 70       	andi	r20, 0x07	; 7
    28fc:	40 5d       	subi	r20, 0xD0	; 208
    28fe:	41 93       	st	Z+, r20
    2900:	b3 e0       	ldi	r27, 0x03	; 3
    2902:	0f d0       	rcall	.+30     	; 0x2922 <__ultoa_invert+0x86>
    2904:	c9 f7       	brne	.-14     	; 0x28f8 <__ultoa_invert+0x5c>
    2906:	f6 cf       	rjmp	.-20     	; 0x28f4 <__ultoa_invert+0x58>
    2908:	46 2f       	mov	r20, r22
    290a:	4f 70       	andi	r20, 0x0F	; 15
    290c:	40 5d       	subi	r20, 0xD0	; 208
    290e:	4a 33       	cpi	r20, 0x3A	; 58
    2910:	18 f0       	brcs	.+6      	; 0x2918 <__ultoa_invert+0x7c>
    2912:	49 5d       	subi	r20, 0xD9	; 217
    2914:	31 fd       	sbrc	r19, 1
    2916:	40 52       	subi	r20, 0x20	; 32
    2918:	41 93       	st	Z+, r20
    291a:	02 d0       	rcall	.+4      	; 0x2920 <__ultoa_invert+0x84>
    291c:	a9 f7       	brne	.-22     	; 0x2908 <__ultoa_invert+0x6c>
    291e:	ea cf       	rjmp	.-44     	; 0x28f4 <__ultoa_invert+0x58>
    2920:	b4 e0       	ldi	r27, 0x04	; 4
    2922:	a6 95       	lsr	r26
    2924:	97 95       	ror	r25
    2926:	87 95       	ror	r24
    2928:	77 95       	ror	r23
    292a:	67 95       	ror	r22
    292c:	ba 95       	dec	r27
    292e:	c9 f7       	brne	.-14     	; 0x2922 <__ultoa_invert+0x86>
    2930:	00 97       	sbiw	r24, 0x00	; 0
    2932:	61 05       	cpc	r22, r1
    2934:	71 05       	cpc	r23, r1
    2936:	08 95       	ret
    2938:	9b 01       	movw	r18, r22
    293a:	ac 01       	movw	r20, r24
    293c:	0a 2e       	mov	r0, r26
    293e:	06 94       	lsr	r0
    2940:	57 95       	ror	r21
    2942:	47 95       	ror	r20
    2944:	37 95       	ror	r19
    2946:	27 95       	ror	r18
    2948:	ba 95       	dec	r27
    294a:	c9 f7       	brne	.-14     	; 0x293e <__ultoa_invert+0xa2>
    294c:	62 0f       	add	r22, r18
    294e:	73 1f       	adc	r23, r19
    2950:	84 1f       	adc	r24, r20
    2952:	95 1f       	adc	r25, r21
    2954:	a0 1d       	adc	r26, r0
    2956:	08 95       	ret

00002958 <_exit>:
    2958:	f8 94       	cli

0000295a <__stop_program>:
    295a:	ff cf       	rjmp	.-2      	; 0x295a <__stop_program>

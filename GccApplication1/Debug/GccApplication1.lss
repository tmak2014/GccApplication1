
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000006b4  00800200  00002a56  00002aea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a56  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000394  008008b4  008008b4  0000319e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000319e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000178  00000000  00000000  000031fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000004bb  00000000  00000000  00003372  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002840  00000000  00000000  0000382d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000af8  00000000  00000000  0000606d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018a6  00000000  00000000  00006b65  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000714  00000000  00000000  0000840c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b2a  00000000  00000000  00008b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001686  00000000  00000000  0000964a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  0000acd0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
       2:	00 00       	nop
       4:	84 c0       	rjmp	.+264    	; 0x10e <__bad_interrupt>
       6:	00 00       	nop
       8:	82 c0       	rjmp	.+260    	; 0x10e <__bad_interrupt>
       a:	00 00       	nop
       c:	80 c0       	rjmp	.+256    	; 0x10e <__bad_interrupt>
       e:	00 00       	nop
      10:	7e c0       	rjmp	.+252    	; 0x10e <__bad_interrupt>
      12:	00 00       	nop
      14:	7c c0       	rjmp	.+248    	; 0x10e <__bad_interrupt>
      16:	00 00       	nop
      18:	7a c0       	rjmp	.+244    	; 0x10e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	78 c0       	rjmp	.+240    	; 0x10e <__bad_interrupt>
      1e:	00 00       	nop
      20:	76 c0       	rjmp	.+236    	; 0x10e <__bad_interrupt>
      22:	00 00       	nop
      24:	74 c0       	rjmp	.+232    	; 0x10e <__bad_interrupt>
      26:	00 00       	nop
      28:	72 c0       	rjmp	.+228    	; 0x10e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	70 c0       	rjmp	.+224    	; 0x10e <__bad_interrupt>
      2e:	00 00       	nop
      30:	6e c0       	rjmp	.+220    	; 0x10e <__bad_interrupt>
      32:	00 00       	nop
      34:	6c c0       	rjmp	.+216    	; 0x10e <__bad_interrupt>
      36:	00 00       	nop
      38:	6a c0       	rjmp	.+212    	; 0x10e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	68 c0       	rjmp	.+208    	; 0x10e <__bad_interrupt>
      3e:	00 00       	nop
      40:	66 c0       	rjmp	.+204    	; 0x10e <__bad_interrupt>
      42:	00 00       	nop
      44:	64 c0       	rjmp	.+200    	; 0x10e <__bad_interrupt>
      46:	00 00       	nop
      48:	62 c0       	rjmp	.+196    	; 0x10e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	60 c0       	rjmp	.+192    	; 0x10e <__bad_interrupt>
      4e:	00 00       	nop
      50:	5e c0       	rjmp	.+188    	; 0x10e <__bad_interrupt>
      52:	00 00       	nop
      54:	5c c0       	rjmp	.+184    	; 0x10e <__bad_interrupt>
      56:	00 00       	nop
      58:	5a c0       	rjmp	.+180    	; 0x10e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	58 c0       	rjmp	.+176    	; 0x10e <__bad_interrupt>
      5e:	00 00       	nop
      60:	56 c0       	rjmp	.+172    	; 0x10e <__bad_interrupt>
      62:	00 00       	nop
      64:	24 c4       	rjmp	.+2120   	; 0x8ae <__vector_25>
      66:	00 00       	nop
      68:	52 c0       	rjmp	.+164    	; 0x10e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	50 c0       	rjmp	.+160    	; 0x10e <__bad_interrupt>
      6e:	00 00       	nop
      70:	4e c0       	rjmp	.+156    	; 0x10e <__bad_interrupt>
      72:	00 00       	nop
      74:	4c c0       	rjmp	.+152    	; 0x10e <__bad_interrupt>
      76:	00 00       	nop
      78:	4a c0       	rjmp	.+148    	; 0x10e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	48 c0       	rjmp	.+144    	; 0x10e <__bad_interrupt>
      7e:	00 00       	nop
      80:	46 c0       	rjmp	.+140    	; 0x10e <__bad_interrupt>
      82:	00 00       	nop
      84:	44 c0       	rjmp	.+136    	; 0x10e <__bad_interrupt>
      86:	00 00       	nop
      88:	42 c0       	rjmp	.+132    	; 0x10e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	40 c0       	rjmp	.+128    	; 0x10e <__bad_interrupt>
      8e:	00 00       	nop
      90:	13 c5       	rjmp	.+2598   	; 0xab8 <__vector_36>
      92:	00 00       	nop
      94:	3c c0       	rjmp	.+120    	; 0x10e <__bad_interrupt>
      96:	00 00       	nop
      98:	3a c0       	rjmp	.+116    	; 0x10e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	38 c0       	rjmp	.+112    	; 0x10e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	36 c0       	rjmp	.+108    	; 0x10e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	34 c0       	rjmp	.+104    	; 0x10e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	32 c0       	rjmp	.+100    	; 0x10e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	30 c0       	rjmp	.+96     	; 0x10e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	2e c0       	rjmp	.+92     	; 0x10e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	2c c0       	rjmp	.+88     	; 0x10e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	2a c0       	rjmp	.+84     	; 0x10e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	28 c0       	rjmp	.+80     	; 0x10e <__bad_interrupt>
      be:	00 00       	nop
      c0:	26 c0       	rjmp	.+76     	; 0x10e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	24 c0       	rjmp	.+72     	; 0x10e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	22 c0       	rjmp	.+68     	; 0x10e <__bad_interrupt>
	...

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d1 e2       	ldi	r29, 0x21	; 33
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61
      d8:	00 e0       	ldi	r16, 0x00	; 0
      da:	0c bf       	out	0x3c, r16	; 60

000000dc <__do_copy_data>:
      dc:	18 e0       	ldi	r17, 0x08	; 8
      de:	a0 e0       	ldi	r26, 0x00	; 0
      e0:	b2 e0       	ldi	r27, 0x02	; 2
      e2:	e6 e5       	ldi	r30, 0x56	; 86
      e4:	fa e2       	ldi	r31, 0x2A	; 42
      e6:	00 e0       	ldi	r16, 0x00	; 0
      e8:	0b bf       	out	0x3b, r16	; 59
      ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x14>
      ec:	07 90       	elpm	r0, Z+
      ee:	0d 92       	st	X+, r0
      f0:	a4 3b       	cpi	r26, 0xB4	; 180
      f2:	b1 07       	cpc	r27, r17
      f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0x10>

000000f6 <__do_clear_bss>:
      f6:	2c e0       	ldi	r18, 0x0C	; 12
      f8:	a4 eb       	ldi	r26, 0xB4	; 180
      fa:	b8 e0       	ldi	r27, 0x08	; 8
      fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
      fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
     100:	a8 34       	cpi	r26, 0x48	; 72
     102:	b2 07       	cpc	r27, r18
     104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
     106:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <main>
     10a:	0c 94 29 15 	jmp	0x2a52	; 0x2a52 <_exit>

0000010e <__bad_interrupt>:
     10e:	78 cf       	rjmp	.-272    	; 0x0 <__vectors>

00000110 <dxl_get_result>:
     110:	80 91 00 02 	lds	r24, 0x0200
     114:	90 91 01 02 	lds	r25, 0x0201
     118:	08 95       	ret

0000011a <dxl_set_txpacket_id>:
     11a:	80 93 b6 08 	sts	0x08B6, r24
     11e:	08 95       	ret

00000120 <dxl_set_txpacket_instruction>:
     120:	80 93 b8 08 	sts	0x08B8, r24
     124:	08 95       	ret

00000126 <dxl_set_txpacket_parameter>:
     126:	fc 01       	movw	r30, r24
     128:	ec 54       	subi	r30, 0x4C	; 76
     12a:	f7 4f       	sbci	r31, 0xF7	; 247
     12c:	65 83       	std	Z+5, r22	; 0x05
     12e:	08 95       	ret

00000130 <dxl_set_txpacket_length>:
     130:	80 93 b7 08 	sts	0x08B7, r24
     134:	08 95       	ret

00000136 <dxl_get_rxpacket_error>:
     136:	20 e0       	ldi	r18, 0x00	; 0
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	90 91 58 09 	lds	r25, 0x0958
     13e:	98 23       	and	r25, r24
     140:	11 f0       	breq	.+4      	; 0x146 <dxl_get_rxpacket_error+0x10>
     142:	21 e0       	ldi	r18, 0x01	; 1
     144:	30 e0       	ldi	r19, 0x00	; 0
     146:	c9 01       	movw	r24, r18
     148:	08 95       	ret

0000014a <dxl_get_rxpacket_length>:
     14a:	80 91 57 09 	lds	r24, 0x0957
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	08 95       	ret

00000152 <dxl_get_rxpacket_parameter>:
     152:	fc 01       	movw	r30, r24
     154:	ec 5a       	subi	r30, 0xAC	; 172
     156:	f6 4f       	sbci	r31, 0xF6	; 246
     158:	85 81       	ldd	r24, Z+5	; 0x05
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	08 95       	ret

0000015e <dxl_makeword>:
     15e:	36 2f       	mov	r19, r22
     160:	20 e0       	ldi	r18, 0x00	; 0
     162:	28 0f       	add	r18, r24
     164:	39 1f       	adc	r19, r25
     166:	c9 01       	movw	r24, r18
     168:	08 95       	ret

0000016a <dxl_get_lowbyte>:
     16a:	28 2f       	mov	r18, r24
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	c9 01       	movw	r24, r18
     170:	08 95       	ret

00000172 <dxl_get_highbyte>:
     172:	80 70       	andi	r24, 0x00	; 0
     174:	89 2f       	mov	r24, r25
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	08 95       	ret

0000017a <dxl_rx_packet>:
     17a:	0f 93       	push	r16
     17c:	1f 93       	push	r17
     17e:	cf 93       	push	r28
     180:	df 93       	push	r29
     182:	80 91 9c 09 	lds	r24, 0x099C
     186:	90 91 9d 09 	lds	r25, 0x099D
     18a:	89 2b       	or	r24, r25
     18c:	09 f4       	brne	.+2      	; 0x190 <dxl_rx_packet+0x16>
     18e:	b8 c0       	rjmp	.+368    	; 0x300 <dxl_rx_packet+0x186>
     190:	80 91 b6 08 	lds	r24, 0x08B6
     194:	8e 3f       	cpi	r24, 0xFE	; 254
     196:	09 f4       	brne	.+2      	; 0x19a <dxl_rx_packet+0x20>
     198:	a9 c0       	rjmp	.+338    	; 0x2ec <dxl_rx_packet+0x172>
     19a:	80 91 00 02 	lds	r24, 0x0200
     19e:	90 91 01 02 	lds	r25, 0x0201
     1a2:	89 2b       	or	r24, r25
     1a4:	29 f4       	brne	.+10     	; 0x1b0 <dxl_rx_packet+0x36>
     1a6:	10 92 9b 09 	sts	0x099B, r1
     1aa:	86 e0       	ldi	r24, 0x06	; 6
     1ac:	80 93 9a 09 	sts	0x099A, r24
     1b0:	80 91 9b 09 	lds	r24, 0x099B
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	60 91 9a 09 	lds	r22, 0x099A
     1ba:	70 e0       	ldi	r23, 0x00	; 0
     1bc:	68 1b       	sub	r22, r24
     1be:	79 0b       	sbc	r23, r25
     1c0:	8c 5a       	subi	r24, 0xAC	; 172
     1c2:	96 4f       	sbci	r25, 0xF6	; 246
     1c4:	49 d3       	rcall	.+1682   	; 0x858 <dxl_hal_rx>
     1c6:	90 91 9b 09 	lds	r25, 0x099B
     1ca:	98 0f       	add	r25, r24
     1cc:	90 93 9b 09 	sts	0x099B, r25
     1d0:	80 91 9a 09 	lds	r24, 0x099A
     1d4:	98 17       	cp	r25, r24
     1d6:	18 f4       	brcc	.+6      	; 0x1de <dxl_rx_packet+0x64>
     1d8:	4a d2       	rcall	.+1172   	; 0x66e <dxl_hal_timeout>
     1da:	01 97       	sbiw	r24, 0x01	; 1
     1dc:	71 f0       	breq	.+28     	; 0x1fa <dxl_rx_packet+0x80>
     1de:	70 91 9b 09 	lds	r23, 0x099B
     1e2:	47 2f       	mov	r20, r23
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	da 01       	movw	r26, r20
     1e8:	11 97       	sbiw	r26, 0x01	; 1
     1ea:	8a 01       	movw	r16, r20
     1ec:	02 50       	subi	r16, 0x02	; 2
     1ee:	10 40       	sbci	r17, 0x00	; 0
     1f0:	60 e0       	ldi	r22, 0x00	; 0
     1f2:	ed 01       	movw	r28, r26
     1f4:	cc 5a       	subi	r28, 0xAC	; 172
     1f6:	d6 4f       	sbci	r29, 0xF6	; 246
     1f8:	18 c0       	rjmp	.+48     	; 0x22a <dxl_rx_packet+0xb0>
     1fa:	80 91 9b 09 	lds	r24, 0x099B
     1fe:	88 23       	and	r24, r24
     200:	09 f0       	breq	.+2      	; 0x204 <dxl_rx_packet+0x8a>
     202:	71 c0       	rjmp	.+226    	; 0x2e6 <dxl_rx_packet+0x16c>
     204:	86 e0       	ldi	r24, 0x06	; 6
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	73 c0       	rjmp	.+230    	; 0x2f0 <dxl_rx_packet+0x176>
     20a:	f9 01       	movw	r30, r18
     20c:	ec 5a       	subi	r30, 0xAC	; 172
     20e:	f6 4f       	sbci	r31, 0xF6	; 246
     210:	80 81       	ld	r24, Z
     212:	8f 3f       	cpi	r24, 0xFF	; 255
     214:	19 f4       	brne	.+6      	; 0x21c <dxl_rx_packet+0xa2>
     216:	81 81       	ldd	r24, Z+1	; 0x01
     218:	8f 3f       	cpi	r24, 0xFF	; 255
     21a:	61 f0       	breq	.+24     	; 0x234 <dxl_rx_packet+0xba>
     21c:	20 17       	cp	r18, r16
     21e:	31 07       	cpc	r19, r17
     220:	19 f4       	brne	.+6      	; 0x228 <dxl_rx_packet+0xae>
     222:	88 81       	ld	r24, Y
     224:	8f 3f       	cpi	r24, 0xFF	; 255
     226:	31 f0       	breq	.+12     	; 0x234 <dxl_rx_packet+0xba>
     228:	6f 5f       	subi	r22, 0xFF	; 255
     22a:	26 2f       	mov	r18, r22
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	2a 17       	cp	r18, r26
     230:	3b 07       	cpc	r19, r27
     232:	5c f3       	brlt	.-42     	; 0x20a <dxl_rx_packet+0x90>
     234:	66 23       	and	r22, r22
     236:	a1 f0       	breq	.+40     	; 0x260 <dxl_rx_packet+0xe6>
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	42 1b       	sub	r20, r18
     23c:	53 0b       	sbc	r21, r19
     23e:	08 c0       	rjmp	.+16     	; 0x250 <dxl_rx_packet+0xd6>
     240:	ec 5a       	subi	r30, 0xAC	; 172
     242:	f6 4f       	sbci	r31, 0xF6	; 246
     244:	df 01       	movw	r26, r30
     246:	a2 0f       	add	r26, r18
     248:	b3 1f       	adc	r27, r19
     24a:	8c 91       	ld	r24, X
     24c:	80 83       	st	Z, r24
     24e:	9f 5f       	subi	r25, 0xFF	; 255
     250:	e9 2f       	mov	r30, r25
     252:	f0 e0       	ldi	r31, 0x00	; 0
     254:	e4 17       	cp	r30, r20
     256:	f5 07       	cpc	r31, r21
     258:	9c f3       	brlt	.-26     	; 0x240 <dxl_rx_packet+0xc6>
     25a:	76 1b       	sub	r23, r22
     25c:	70 93 9b 09 	sts	0x099B, r23
     260:	20 91 9b 09 	lds	r18, 0x099B
     264:	80 91 9a 09 	lds	r24, 0x099A
     268:	28 17       	cp	r18, r24
     26a:	28 f1       	brcs	.+74     	; 0x2b6 <dxl_rx_packet+0x13c>
     26c:	90 91 b6 08 	lds	r25, 0x08B6
     270:	80 91 56 09 	lds	r24, 0x0956
     274:	98 17       	cp	r25, r24
     276:	b9 f5       	brne	.+110    	; 0x2e6 <dxl_rx_packet+0x16c>
     278:	60 91 57 09 	lds	r22, 0x0957
     27c:	6c 5f       	subi	r22, 0xFC	; 252
     27e:	60 93 9a 09 	sts	0x099A, r22
     282:	26 17       	cp	r18, r22
     284:	88 f4       	brcc	.+34     	; 0x2a8 <dxl_rx_packet+0x12e>
     286:	82 2f       	mov	r24, r18
     288:	90 e0       	ldi	r25, 0x00	; 0
     28a:	70 e0       	ldi	r23, 0x00	; 0
     28c:	68 1b       	sub	r22, r24
     28e:	79 0b       	sbc	r23, r25
     290:	8c 5a       	subi	r24, 0xAC	; 172
     292:	96 4f       	sbci	r25, 0xF6	; 246
     294:	e1 d2       	rcall	.+1474   	; 0x858 <dxl_hal_rx>
     296:	90 91 9b 09 	lds	r25, 0x099B
     29a:	98 0f       	add	r25, r24
     29c:	90 93 9b 09 	sts	0x099B, r25
     2a0:	80 91 9a 09 	lds	r24, 0x099A
     2a4:	98 17       	cp	r25, r24
     2a6:	38 f0       	brcs	.+14     	; 0x2b6 <dxl_rx_packet+0x13c>
     2a8:	80 91 57 09 	lds	r24, 0x0957
     2ac:	a8 2f       	mov	r26, r24
     2ae:	b0 e0       	ldi	r27, 0x00	; 0
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	0c c0       	rjmp	.+24     	; 0x2ce <dxl_rx_packet+0x154>
     2b6:	85 e0       	ldi	r24, 0x05	; 5
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	90 93 01 02 	sts	0x0201, r25
     2be:	80 93 00 02 	sts	0x0200, r24
     2c2:	1e c0       	rjmp	.+60     	; 0x300 <dxl_rx_packet+0x186>
     2c4:	ec 5a       	subi	r30, 0xAC	; 172
     2c6:	f6 4f       	sbci	r31, 0xF6	; 246
     2c8:	82 81       	ldd	r24, Z+2	; 0x02
     2ca:	98 0f       	add	r25, r24
     2cc:	2f 5f       	subi	r18, 0xFF	; 255
     2ce:	e2 2f       	mov	r30, r18
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	ae 17       	cp	r26, r30
     2d4:	bf 07       	cpc	r27, r31
     2d6:	b4 f7       	brge	.-20     	; 0x2c4 <dxl_rx_packet+0x14a>
     2d8:	ac 5a       	subi	r26, 0xAC	; 172
     2da:	b6 4f       	sbci	r27, 0xF6	; 246
     2dc:	90 95       	com	r25
     2de:	13 96       	adiw	r26, 0x03	; 3
     2e0:	8c 91       	ld	r24, X
     2e2:	89 17       	cp	r24, r25
     2e4:	19 f0       	breq	.+6      	; 0x2ec <dxl_rx_packet+0x172>
     2e6:	87 e0       	ldi	r24, 0x07	; 7
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <dxl_rx_packet+0x176>
     2ec:	81 e0       	ldi	r24, 0x01	; 1
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	90 93 01 02 	sts	0x0201, r25
     2f4:	80 93 00 02 	sts	0x0200, r24
     2f8:	10 92 9d 09 	sts	0x099D, r1
     2fc:	10 92 9c 09 	sts	0x099C, r1
     300:	df 91       	pop	r29
     302:	cf 91       	pop	r28
     304:	1f 91       	pop	r17
     306:	0f 91       	pop	r16
     308:	08 95       	ret

0000030a <dxl_tx_packet>:
     30a:	1f 93       	push	r17
     30c:	80 91 9c 09 	lds	r24, 0x099C
     310:	90 91 9d 09 	lds	r25, 0x099D
     314:	01 97       	sbiw	r24, 0x01	; 1
     316:	09 f4       	brne	.+2      	; 0x31a <dxl_tx_packet+0x10>
     318:	5d c0       	rjmp	.+186    	; 0x3d4 <dxl_tx_packet+0xca>
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	90 93 9d 09 	sts	0x099D, r25
     322:	80 93 9c 09 	sts	0x099C, r24
     326:	80 91 b7 08 	lds	r24, 0x08B7
     32a:	89 39       	cpi	r24, 0x99	; 153
     32c:	40 f4       	brcc	.+16     	; 0x33e <dxl_tx_packet+0x34>
     32e:	90 91 b8 08 	lds	r25, 0x08B8
     332:	89 2f       	mov	r24, r25
     334:	81 50       	subi	r24, 0x01	; 1
     336:	86 30       	cpi	r24, 0x06	; 6
     338:	28 f0       	brcs	.+10     	; 0x344 <dxl_tx_packet+0x3a>
     33a:	93 38       	cpi	r25, 0x83	; 131
     33c:	19 f0       	breq	.+6      	; 0x344 <dxl_tx_packet+0x3a>
     33e:	84 e0       	ldi	r24, 0x04	; 4
     340:	90 e0       	ldi	r25, 0x00	; 0
     342:	2f c0       	rjmp	.+94     	; 0x3a2 <dxl_tx_packet+0x98>
     344:	8f ef       	ldi	r24, 0xFF	; 255
     346:	80 93 b4 08 	sts	0x08B4, r24
     34a:	80 93 b5 08 	sts	0x08B5, r24
     34e:	80 91 b7 08 	lds	r24, 0x08B7
     352:	a8 2f       	mov	r26, r24
     354:	b0 e0       	ldi	r27, 0x00	; 0
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	05 c0       	rjmp	.+10     	; 0x366 <dxl_tx_packet+0x5c>
     35c:	ec 54       	subi	r30, 0x4C	; 76
     35e:	f7 4f       	sbci	r31, 0xF7	; 247
     360:	82 81       	ldd	r24, Z+2	; 0x02
     362:	98 0f       	add	r25, r24
     364:	2f 5f       	subi	r18, 0xFF	; 255
     366:	e2 2f       	mov	r30, r18
     368:	f0 e0       	ldi	r31, 0x00	; 0
     36a:	ae 17       	cp	r26, r30
     36c:	bf 07       	cpc	r27, r31
     36e:	b4 f7       	brge	.-20     	; 0x35c <dxl_tx_packet+0x52>
     370:	ac 54       	subi	r26, 0x4C	; 76
     372:	b7 4f       	sbci	r27, 0xF7	; 247
     374:	90 95       	com	r25
     376:	13 96       	adiw	r26, 0x03	; 3
     378:	9c 93       	st	X, r25
     37a:	80 91 00 02 	lds	r24, 0x0200
     37e:	90 91 01 02 	lds	r25, 0x0201
     382:	06 97       	sbiw	r24, 0x06	; 6
     384:	02 97       	sbiw	r24, 0x02	; 2
     386:	08 f4       	brcc	.+2      	; 0x38a <dxl_tx_packet+0x80>
     388:	38 d1       	rcall	.+624    	; 0x5fa <dxl_hal_clear>
     38a:	10 91 b7 08 	lds	r17, 0x08B7
     38e:	1c 5f       	subi	r17, 0xFC	; 252
     390:	84 eb       	ldi	r24, 0xB4	; 180
     392:	98 e0       	ldi	r25, 0x08	; 8
     394:	61 2f       	mov	r22, r17
     396:	70 e0       	ldi	r23, 0x00	; 0
     398:	35 d1       	rcall	.+618    	; 0x604 <dxl_hal_tx>
     39a:	18 17       	cp	r17, r24
     39c:	59 f0       	breq	.+22     	; 0x3b4 <dxl_tx_packet+0xaa>
     39e:	82 e0       	ldi	r24, 0x02	; 2
     3a0:	90 e0       	ldi	r25, 0x00	; 0
     3a2:	90 93 01 02 	sts	0x0201, r25
     3a6:	80 93 00 02 	sts	0x0200, r24
     3aa:	10 92 9d 09 	sts	0x099D, r1
     3ae:	10 92 9c 09 	sts	0x099C, r1
     3b2:	10 c0       	rjmp	.+32     	; 0x3d4 <dxl_tx_packet+0xca>
     3b4:	80 91 b8 08 	lds	r24, 0x08B8
     3b8:	82 30       	cpi	r24, 0x02	; 2
     3ba:	29 f4       	brne	.+10     	; 0x3c6 <dxl_tx_packet+0xbc>
     3bc:	80 91 ba 08 	lds	r24, 0x08BA
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	06 96       	adiw	r24, 0x06	; 6
     3c4:	02 c0       	rjmp	.+4      	; 0x3ca <dxl_tx_packet+0xc0>
     3c6:	86 e0       	ldi	r24, 0x06	; 6
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	40 d1       	rcall	.+640    	; 0x64c <dxl_hal_set_timeout>
     3cc:	10 92 01 02 	sts	0x0201, r1
     3d0:	10 92 00 02 	sts	0x0200, r1
     3d4:	1f 91       	pop	r17
     3d6:	08 95       	ret

000003d8 <dxl_txrx_packet>:
     3d8:	98 df       	rcall	.-208    	; 0x30a <dxl_tx_packet>
     3da:	80 91 00 02 	lds	r24, 0x0200
     3de:	90 91 01 02 	lds	r25, 0x0201
     3e2:	89 2b       	or	r24, r25
     3e4:	39 f4       	brne	.+14     	; 0x3f4 <dxl_txrx_packet+0x1c>
     3e6:	c9 de       	rcall	.-622    	; 0x17a <dxl_rx_packet>
     3e8:	80 91 00 02 	lds	r24, 0x0200
     3ec:	90 91 01 02 	lds	r25, 0x0201
     3f0:	05 97       	sbiw	r24, 0x05	; 5
     3f2:	c9 f3       	breq	.-14     	; 0x3e6 <dxl_txrx_packet+0xe>
     3f4:	08 95       	ret

000003f6 <dxl_write_word>:
     3f6:	28 2f       	mov	r18, r24
     3f8:	80 91 9c 09 	lds	r24, 0x099C
     3fc:	90 91 9d 09 	lds	r25, 0x099D
     400:	89 2b       	or	r24, r25
     402:	91 f4       	brne	.+36     	; 0x428 <dxl_write_word+0x32>
     404:	20 93 b6 08 	sts	0x08B6, r18
     408:	83 e0       	ldi	r24, 0x03	; 3
     40a:	80 93 b8 08 	sts	0x08B8, r24
     40e:	60 93 b9 08 	sts	0x08B9, r22
     412:	ca 01       	movw	r24, r20
     414:	40 93 ba 08 	sts	0x08BA, r20
     418:	80 70       	andi	r24, 0x00	; 0
     41a:	90 93 bb 08 	sts	0x08BB, r25
     41e:	85 e0       	ldi	r24, 0x05	; 5
     420:	80 93 b7 08 	sts	0x08B7, r24
     424:	d9 cf       	rjmp	.-78     	; 0x3d8 <dxl_txrx_packet>
     426:	08 95       	ret
     428:	ff cf       	rjmp	.-2      	; 0x428 <dxl_write_word+0x32>

0000042a <dxl_read_word>:
     42a:	28 2f       	mov	r18, r24
     42c:	80 91 9c 09 	lds	r24, 0x099C
     430:	90 91 9d 09 	lds	r25, 0x099D
     434:	89 2b       	or	r24, r25
     436:	b1 f4       	brne	.+44     	; 0x464 <dxl_read_word+0x3a>
     438:	20 93 b6 08 	sts	0x08B6, r18
     43c:	82 e0       	ldi	r24, 0x02	; 2
     43e:	80 93 b8 08 	sts	0x08B8, r24
     442:	60 93 b9 08 	sts	0x08B9, r22
     446:	80 93 ba 08 	sts	0x08BA, r24
     44a:	84 e0       	ldi	r24, 0x04	; 4
     44c:	80 93 b7 08 	sts	0x08B7, r24
     450:	c3 df       	rcall	.-122    	; 0x3d8 <dxl_txrx_packet>
     452:	30 91 5a 09 	lds	r19, 0x095A
     456:	20 e0       	ldi	r18, 0x00	; 0
     458:	80 91 59 09 	lds	r24, 0x0959
     45c:	28 0f       	add	r18, r24
     45e:	31 1d       	adc	r19, r1
     460:	c9 01       	movw	r24, r18
     462:	08 95       	ret
     464:	ff cf       	rjmp	.-2      	; 0x464 <dxl_read_word+0x3a>

00000466 <dxl_write_byte>:
     466:	28 2f       	mov	r18, r24
     468:	80 91 9c 09 	lds	r24, 0x099C
     46c:	90 91 9d 09 	lds	r25, 0x099D
     470:	89 2b       	or	r24, r25
     472:	71 f4       	brne	.+28     	; 0x490 <dxl_write_byte+0x2a>
     474:	20 93 b6 08 	sts	0x08B6, r18
     478:	83 e0       	ldi	r24, 0x03	; 3
     47a:	80 93 b8 08 	sts	0x08B8, r24
     47e:	60 93 b9 08 	sts	0x08B9, r22
     482:	40 93 ba 08 	sts	0x08BA, r20
     486:	84 e0       	ldi	r24, 0x04	; 4
     488:	80 93 b7 08 	sts	0x08B7, r24
     48c:	a5 cf       	rjmp	.-182    	; 0x3d8 <dxl_txrx_packet>
     48e:	08 95       	ret
     490:	ff cf       	rjmp	.-2      	; 0x490 <dxl_write_byte+0x2a>

00000492 <dxl_read_byte>:
     492:	28 2f       	mov	r18, r24
     494:	80 91 9c 09 	lds	r24, 0x099C
     498:	90 91 9d 09 	lds	r25, 0x099D
     49c:	89 2b       	or	r24, r25
     49e:	91 f4       	brne	.+36     	; 0x4c4 <dxl_read_byte+0x32>
     4a0:	20 93 b6 08 	sts	0x08B6, r18
     4a4:	82 e0       	ldi	r24, 0x02	; 2
     4a6:	80 93 b8 08 	sts	0x08B8, r24
     4aa:	60 93 b9 08 	sts	0x08B9, r22
     4ae:	81 e0       	ldi	r24, 0x01	; 1
     4b0:	80 93 ba 08 	sts	0x08BA, r24
     4b4:	84 e0       	ldi	r24, 0x04	; 4
     4b6:	80 93 b7 08 	sts	0x08B7, r24
     4ba:	8e df       	rcall	.-228    	; 0x3d8 <dxl_txrx_packet>
     4bc:	80 91 59 09 	lds	r24, 0x0959
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	08 95       	ret
     4c4:	ff cf       	rjmp	.-2      	; 0x4c4 <dxl_read_byte+0x32>

000004c6 <dxl_ping>:
     4c6:	28 2f       	mov	r18, r24
     4c8:	80 91 9c 09 	lds	r24, 0x099C
     4cc:	90 91 9d 09 	lds	r25, 0x099D
     4d0:	89 2b       	or	r24, r25
     4d2:	51 f4       	brne	.+20     	; 0x4e8 <dxl_ping+0x22>
     4d4:	20 93 b6 08 	sts	0x08B6, r18
     4d8:	81 e0       	ldi	r24, 0x01	; 1
     4da:	80 93 b8 08 	sts	0x08B8, r24
     4de:	82 e0       	ldi	r24, 0x02	; 2
     4e0:	80 93 b7 08 	sts	0x08B7, r24
     4e4:	79 cf       	rjmp	.-270    	; 0x3d8 <dxl_txrx_packet>
     4e6:	08 95       	ret
     4e8:	ff cf       	rjmp	.-2      	; 0x4e8 <dxl_ping+0x22>

000004ea <dxl_terminate>:
     4ea:	86 c0       	rjmp	.+268    	; 0x5f8 <dxl_hal_close>
     4ec:	08 95       	ret

000004ee <dxl_initialize>:
     4ee:	0f 93       	push	r16
     4f0:	1f 93       	push	r17
     4f2:	8c 01       	movw	r16, r24
     4f4:	6f 5f       	subi	r22, 0xFF	; 255
     4f6:	7f 4f       	sbci	r23, 0xFF	; 255
     4f8:	88 27       	eor	r24, r24
     4fa:	77 fd       	sbrc	r23, 7
     4fc:	80 95       	com	r24
     4fe:	98 2f       	mov	r25, r24
     500:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__floatsisf>
     504:	9b 01       	movw	r18, r22
     506:	ac 01       	movw	r20, r24
     508:	60 e0       	ldi	r22, 0x00	; 0
     50a:	74 e2       	ldi	r23, 0x24	; 36
     50c:	84 ef       	ldi	r24, 0xF4	; 244
     50e:	99 e4       	ldi	r25, 0x49	; 73
     510:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__divsf3>
     514:	ab 01       	movw	r20, r22
     516:	bc 01       	movw	r22, r24
     518:	c8 01       	movw	r24, r16
     51a:	15 d0       	rcall	.+42     	; 0x546 <dxl_hal_open>
     51c:	89 2b       	or	r24, r25
     51e:	19 f4       	brne	.+6      	; 0x526 <dxl_initialize+0x38>
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	0c c0       	rjmp	.+24     	; 0x53e <dxl_initialize+0x50>
     526:	81 e0       	ldi	r24, 0x01	; 1
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	90 93 01 02 	sts	0x0201, r25
     52e:	80 93 00 02 	sts	0x0200, r24
     532:	10 92 9d 09 	sts	0x099D, r1
     536:	10 92 9c 09 	sts	0x099C, r1
     53a:	21 e0       	ldi	r18, 0x01	; 1
     53c:	30 e0       	ldi	r19, 0x00	; 0
     53e:	c9 01       	movw	r24, r18
     540:	1f 91       	pop	r17
     542:	0f 91       	pop	r16
     544:	08 95       	ret

00000546 <dxl_hal_open>:
     546:	ef 92       	push	r14
     548:	ff 92       	push	r15
     54a:	0f 93       	push	r16
     54c:	1f 93       	push	r17
     54e:	7a 01       	movw	r14, r20
     550:	8b 01       	movw	r16, r22
     552:	82 e4       	ldi	r24, 0x42	; 66
     554:	80 93 c0 00 	sts	0x00C0, r24
     558:	88 e9       	ldi	r24, 0x98	; 152
     55a:	80 93 c1 00 	sts	0x00C1, r24
     55e:	86 e0       	ldi	r24, 0x06	; 6
     560:	80 93 c2 00 	sts	0x00C2, r24
     564:	60 e0       	ldi	r22, 0x00	; 0
     566:	74 e2       	ldi	r23, 0x24	; 36
     568:	84 ef       	ldi	r24, 0xF4	; 244
     56a:	99 e4       	ldi	r25, 0x49	; 73
     56c:	a8 01       	movw	r20, r16
     56e:	97 01       	movw	r18, r14
     570:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__divsf3>
     574:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__fixunssfsi>
     578:	61 50       	subi	r22, 0x01	; 1
     57a:	70 40       	sbci	r23, 0x00	; 0
     57c:	70 93 c5 00 	sts	0x00C5, r23
     580:	60 93 c4 00 	sts	0x00C4, r22
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	74 e2       	ldi	r23, 0x24	; 36
     588:	84 e7       	ldi	r24, 0x74	; 116
     58a:	99 e4       	ldi	r25, 0x49	; 73
     58c:	a8 01       	movw	r20, r16
     58e:	97 01       	movw	r18, r14
     590:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__divsf3>
     594:	20 e0       	ldi	r18, 0x00	; 0
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	40 e4       	ldi	r20, 0x40	; 64
     59a:	51 e4       	ldi	r21, 0x41	; 65
     59c:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <__mulsf3>
     5a0:	60 93 36 0c 	sts	0x0C36, r22
     5a4:	70 93 37 0c 	sts	0x0C37, r23
     5a8:	80 93 38 0c 	sts	0x0C38, r24
     5ac:	90 93 39 0c 	sts	0x0C39, r25
     5b0:	20 91 36 0c 	lds	r18, 0x0C36
     5b4:	30 91 37 0c 	lds	r19, 0x0C37
     5b8:	40 91 38 0c 	lds	r20, 0x0C38
     5bc:	50 91 39 0c 	lds	r21, 0x0C39
     5c0:	60 e0       	ldi	r22, 0x00	; 0
     5c2:	70 e0       	ldi	r23, 0x00	; 0
     5c4:	8a e7       	ldi	r24, 0x7A	; 122
     5c6:	93 e4       	ldi	r25, 0x43	; 67
     5c8:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__divsf3>
     5cc:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__fixunssfsi>
     5d0:	70 93 35 0c 	sts	0x0C35, r23
     5d4:	60 93 34 0c 	sts	0x0C34, r22
     5d8:	72 98       	cbi	0x0e, 2	; 14
     5da:	73 9a       	sbi	0x0e, 3	; 14
     5dc:	8f ef       	ldi	r24, 0xFF	; 255
     5de:	80 93 c6 00 	sts	0x00C6, r24
     5e2:	10 92 9e 0a 	sts	0x0A9E, r1
     5e6:	10 92 9f 0a 	sts	0x0A9F, r1
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	ff 90       	pop	r15
     5f4:	ef 90       	pop	r14
     5f6:	08 95       	ret

000005f8 <dxl_hal_close>:
     5f8:	08 95       	ret

000005fa <dxl_hal_clear>:
     5fa:	80 91 9f 0a 	lds	r24, 0x0A9F
     5fe:	80 93 9e 0a 	sts	0x0A9E, r24
     602:	08 95       	ret

00000604 <dxl_hal_tx>:
     604:	ac 01       	movw	r20, r24
     606:	f8 94       	cli
     608:	73 98       	cbi	0x0e, 3	; 14
     60a:	72 9a       	sbi	0x0e, 2	; 14
     60c:	20 e0       	ldi	r18, 0x00	; 0
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	11 c0       	rjmp	.+34     	; 0x634 <dxl_hal_tx+0x30>
     612:	80 91 c0 00 	lds	r24, 0x00C0
     616:	85 ff       	sbrs	r24, 5
     618:	fc cf       	rjmp	.-8      	; 0x612 <dxl_hal_tx+0xe>
     61a:	80 91 c0 00 	lds	r24, 0x00C0
     61e:	80 64       	ori	r24, 0x40	; 64
     620:	80 93 c0 00 	sts	0x00C0, r24
     624:	fa 01       	movw	r30, r20
     626:	e2 0f       	add	r30, r18
     628:	f3 1f       	adc	r31, r19
     62a:	80 81       	ld	r24, Z
     62c:	80 93 c6 00 	sts	0x00C6, r24
     630:	2f 5f       	subi	r18, 0xFF	; 255
     632:	3f 4f       	sbci	r19, 0xFF	; 255
     634:	26 17       	cp	r18, r22
     636:	37 07       	cpc	r19, r23
     638:	64 f3       	brlt	.-40     	; 0x612 <dxl_hal_tx+0xe>
     63a:	80 91 c0 00 	lds	r24, 0x00C0
     63e:	86 ff       	sbrs	r24, 6
     640:	fc cf       	rjmp	.-8      	; 0x63a <dxl_hal_tx+0x36>
     642:	72 98       	cbi	0x0e, 2	; 14
     644:	73 9a       	sbi	0x0e, 3	; 14
     646:	78 94       	sei
     648:	c9 01       	movw	r24, r18
     64a:	08 95       	ret

0000064c <dxl_hal_set_timeout>:
     64c:	10 92 3d 0c 	sts	0x0C3D, r1
     650:	10 92 3c 0c 	sts	0x0C3C, r1
     654:	20 91 34 0c 	lds	r18, 0x0C34
     658:	30 91 35 0c 	lds	r19, 0x0C35
     65c:	26 5f       	subi	r18, 0xF6	; 246
     65e:	3f 4f       	sbci	r19, 0xFF	; 255
     660:	28 0f       	add	r18, r24
     662:	39 1f       	adc	r19, r25
     664:	30 93 3b 0c 	sts	0x0C3B, r19
     668:	20 93 3a 0c 	sts	0x0C3A, r18
     66c:	08 95       	ret

0000066e <dxl_hal_timeout>:
     66e:	af 92       	push	r10
     670:	bf 92       	push	r11
     672:	cf 92       	push	r12
     674:	df 92       	push	r13
     676:	ef 92       	push	r14
     678:	ff 92       	push	r15
     67a:	0f 93       	push	r16
     67c:	1f 93       	push	r17
     67e:	80 91 3c 0c 	lds	r24, 0x0C3C
     682:	90 91 3d 0c 	lds	r25, 0x0C3D
     686:	01 96       	adiw	r24, 0x01	; 1
     688:	90 93 3d 0c 	sts	0x0C3D, r25
     68c:	80 93 3c 0c 	sts	0x0C3C, r24
     690:	20 91 3c 0c 	lds	r18, 0x0C3C
     694:	30 91 3d 0c 	lds	r19, 0x0C3D
     698:	80 91 3a 0c 	lds	r24, 0x0C3A
     69c:	90 91 3b 0c 	lds	r25, 0x0C3B
     6a0:	82 17       	cp	r24, r18
     6a2:	93 07       	cpc	r25, r19
     6a4:	18 f4       	brcc	.+6      	; 0x6ac <dxl_hal_timeout+0x3e>
     6a6:	21 e0       	ldi	r18, 0x01	; 1
     6a8:	30 e0       	ldi	r19, 0x00	; 0
     6aa:	74 c0       	rjmp	.+232    	; 0x794 <dxl_hal_timeout+0x126>
     6ac:	a0 90 36 0c 	lds	r10, 0x0C36
     6b0:	b0 90 37 0c 	lds	r11, 0x0C37
     6b4:	c0 90 38 0c 	lds	r12, 0x0C38
     6b8:	d0 90 39 0c 	lds	r13, 0x0C39
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     6bc:	c6 01       	movw	r24, r12
     6be:	b5 01       	movw	r22, r10
     6c0:	2b ea       	ldi	r18, 0xAB	; 171
     6c2:	3a ea       	ldi	r19, 0xAA	; 170
     6c4:	4a ea       	ldi	r20, 0xAA	; 170
     6c6:	50 e4       	ldi	r21, 0x40	; 64
     6c8:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <__mulsf3>
     6cc:	7b 01       	movw	r14, r22
     6ce:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     6d0:	20 e0       	ldi	r18, 0x00	; 0
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	40 e8       	ldi	r20, 0x80	; 128
     6d6:	5f e3       	ldi	r21, 0x3F	; 63
     6d8:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__cmpsf2>
     6dc:	88 23       	and	r24, r24
     6de:	14 f4       	brge	.+4      	; 0x6e4 <dxl_hal_timeout+0x76>
     6e0:	61 e0       	ldi	r22, 0x01	; 1
     6e2:	54 c0       	rjmp	.+168    	; 0x78c <dxl_hal_timeout+0x11e>
		__ticks = 1;
	else if (__tmp > 255)
     6e4:	c8 01       	movw	r24, r16
     6e6:	b7 01       	movw	r22, r14
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	4f e7       	ldi	r20, 0x7F	; 127
     6ee:	53 e4       	ldi	r21, 0x43	; 67
     6f0:	0e 94 0d 10 	call	0x201a	; 0x201a <__gesf2>
     6f4:	18 16       	cp	r1, r24
     6f6:	0c f0       	brlt	.+2      	; 0x6fa <dxl_hal_timeout+0x8c>
     6f8:	45 c0       	rjmp	.+138    	; 0x784 <dxl_hal_timeout+0x116>
	{
		_delay_ms(__us / 1000.0);
     6fa:	c6 01       	movw	r24, r12
     6fc:	b5 01       	movw	r22, r10
     6fe:	20 e0       	ldi	r18, 0x00	; 0
     700:	30 e0       	ldi	r19, 0x00	; 0
     702:	4a e7       	ldi	r20, 0x7A	; 122
     704:	54 e4       	ldi	r21, 0x44	; 68
     706:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__divsf3>
     70a:	5b 01       	movw	r10, r22
     70c:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     70e:	20 e0       	ldi	r18, 0x00	; 0
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	4a e7       	ldi	r20, 0x7A	; 122
     714:	55 e4       	ldi	r21, 0x45	; 69
     716:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <__mulsf3>
     71a:	7b 01       	movw	r14, r22
     71c:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	40 e8       	ldi	r20, 0x80	; 128
     724:	5f e3       	ldi	r21, 0x3F	; 63
     726:	0e 94 e5 0f 	call	0x1fca	; 0x1fca <__cmpsf2>
     72a:	88 23       	and	r24, r24
     72c:	1c f4       	brge	.+6      	; 0x734 <dxl_hal_timeout+0xc6>
     72e:	61 e0       	ldi	r22, 0x01	; 1
     730:	70 e0       	ldi	r23, 0x00	; 0
     732:	24 c0       	rjmp	.+72     	; 0x77c <dxl_hal_timeout+0x10e>
		__ticks = 1;
	else if (__tmp > 65535)
     734:	c8 01       	movw	r24, r16
     736:	b7 01       	movw	r22, r14
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	3f ef       	ldi	r19, 0xFF	; 255
     73c:	4f e7       	ldi	r20, 0x7F	; 127
     73e:	57 e4       	ldi	r21, 0x47	; 71
     740:	0e 94 0d 10 	call	0x201a	; 0x201a <__gesf2>
     744:	18 16       	cp	r1, r24
     746:	b4 f4       	brge	.+44     	; 0x774 <dxl_hal_timeout+0x106>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     748:	c6 01       	movw	r24, r12
     74a:	b5 01       	movw	r22, r10
     74c:	20 e0       	ldi	r18, 0x00	; 0
     74e:	30 e0       	ldi	r19, 0x00	; 0
     750:	40 e2       	ldi	r20, 0x20	; 32
     752:	51 e4       	ldi	r21, 0x41	; 65
     754:	0e 94 82 0f 	call	0x1f04	; 0x1f04 <__mulsf3>
     758:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     75c:	80 e9       	ldi	r24, 0x90	; 144
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	05 c0       	rjmp	.+10     	; 0x76c <dxl_hal_timeout+0xfe>
     762:	fc 01       	movw	r30, r24
     764:	31 97       	sbiw	r30, 0x01	; 1
     766:	f1 f7       	brne	.-4      	; 0x764 <dxl_hal_timeout+0xf6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     768:	61 50       	subi	r22, 0x01	; 1
     76a:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     76c:	61 15       	cp	r22, r1
     76e:	71 05       	cpc	r23, r1
     770:	c1 f7       	brne	.-16     	; 0x762 <dxl_hal_timeout+0xf4>
     772:	0e c0       	rjmp	.+28     	; 0x790 <dxl_hal_timeout+0x122>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     774:	c8 01       	movw	r24, r16
     776:	b7 01       	movw	r22, r14
     778:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__fixunssfsi>
     77c:	cb 01       	movw	r24, r22
     77e:	01 97       	sbiw	r24, 0x01	; 1
     780:	f1 f7       	brne	.-4      	; 0x77e <dxl_hal_timeout+0x110>
     782:	06 c0       	rjmp	.+12     	; 0x790 <dxl_hal_timeout+0x122>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     784:	c8 01       	movw	r24, r16
     786:	b7 01       	movw	r22, r14
     788:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     78c:	6a 95       	dec	r22
     78e:	f1 f7       	brne	.-4      	; 0x78c <dxl_hal_timeout+0x11e>
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	c9 01       	movw	r24, r18
     796:	1f 91       	pop	r17
     798:	0f 91       	pop	r16
     79a:	ff 90       	pop	r15
     79c:	ef 90       	pop	r14
     79e:	df 90       	pop	r13
     7a0:	cf 90       	pop	r12
     7a2:	bf 90       	pop	r11
     7a4:	af 90       	pop	r10
     7a6:	08 95       	ret

000007a8 <dxl_hal_get_qstate>:
     7a8:	90 91 9e 0a 	lds	r25, 0x0A9E
     7ac:	80 91 9f 0a 	lds	r24, 0x0A9F
     7b0:	98 17       	cp	r25, r24
     7b2:	19 f4       	brne	.+6      	; 0x7ba <dxl_hal_get_qstate+0x12>
     7b4:	20 e0       	ldi	r18, 0x00	; 0
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	17 c0       	rjmp	.+46     	; 0x7e8 <dxl_hal_get_qstate+0x40>
     7ba:	90 91 9e 0a 	lds	r25, 0x0A9E
     7be:	80 91 9f 0a 	lds	r24, 0x0A9F
     7c2:	98 17       	cp	r25, r24
     7c4:	38 f4       	brcc	.+14     	; 0x7d4 <dxl_hal_get_qstate+0x2c>
     7c6:	80 91 9f 0a 	lds	r24, 0x0A9F
     7ca:	90 91 9e 0a 	lds	r25, 0x0A9E
     7ce:	28 2f       	mov	r18, r24
     7d0:	30 e0       	ldi	r19, 0x00	; 0
     7d2:	08 c0       	rjmp	.+16     	; 0x7e4 <dxl_hal_get_qstate+0x3c>
     7d4:	80 91 9f 0a 	lds	r24, 0x0A9F
     7d8:	90 91 9e 0a 	lds	r25, 0x0A9E
     7dc:	28 2f       	mov	r18, r24
     7de:	30 e0       	ldi	r19, 0x00	; 0
     7e0:	20 50       	subi	r18, 0x00	; 0
     7e2:	3f 4f       	sbci	r19, 0xFF	; 255
     7e4:	29 1b       	sub	r18, r25
     7e6:	31 09       	sbc	r19, r1
     7e8:	c9 01       	movw	r24, r18
     7ea:	08 95       	ret

000007ec <dxl_hal_put_queue>:
     7ec:	1f 93       	push	r17
     7ee:	18 2f       	mov	r17, r24
     7f0:	db df       	rcall	.-74     	; 0x7a8 <dxl_hal_get_qstate>
     7f2:	8f 3f       	cpi	r24, 0xFF	; 255
     7f4:	91 05       	cpc	r25, r1
     7f6:	91 f0       	breq	.+36     	; 0x81c <dxl_hal_put_queue+0x30>
     7f8:	e0 91 9f 0a 	lds	r30, 0x0A9F
     7fc:	f0 e0       	ldi	r31, 0x00	; 0
     7fe:	e2 56       	subi	r30, 0x62	; 98
     800:	f6 4f       	sbci	r31, 0xF6	; 246
     802:	10 83       	st	Z, r17
     804:	80 91 9f 0a 	lds	r24, 0x0A9F
     808:	8f 3f       	cpi	r24, 0xFF	; 255
     80a:	19 f4       	brne	.+6      	; 0x812 <dxl_hal_put_queue+0x26>
     80c:	10 92 9f 0a 	sts	0x0A9F, r1
     810:	05 c0       	rjmp	.+10     	; 0x81c <dxl_hal_put_queue+0x30>
     812:	80 91 9f 0a 	lds	r24, 0x0A9F
     816:	8f 5f       	subi	r24, 0xFF	; 255
     818:	80 93 9f 0a 	sts	0x0A9F, r24
     81c:	1f 91       	pop	r17
     81e:	08 95       	ret

00000820 <dxl_hal_get_queue>:
     820:	90 91 9e 0a 	lds	r25, 0x0A9E
     824:	80 91 9f 0a 	lds	r24, 0x0A9F
     828:	98 17       	cp	r25, r24
     82a:	11 f4       	brne	.+4      	; 0x830 <dxl_hal_get_queue+0x10>
     82c:	ef ef       	ldi	r30, 0xFF	; 255
     82e:	12 c0       	rjmp	.+36     	; 0x854 <dxl_hal_get_queue+0x34>
     830:	e0 91 9e 0a 	lds	r30, 0x0A9E
     834:	f0 e0       	ldi	r31, 0x00	; 0
     836:	e2 56       	subi	r30, 0x62	; 98
     838:	f6 4f       	sbci	r31, 0xF6	; 246
     83a:	e0 81       	ld	r30, Z
     83c:	80 91 9e 0a 	lds	r24, 0x0A9E
     840:	8f 3f       	cpi	r24, 0xFF	; 255
     842:	19 f4       	brne	.+6      	; 0x84a <dxl_hal_get_queue+0x2a>
     844:	10 92 9e 0a 	sts	0x0A9E, r1
     848:	05 c0       	rjmp	.+10     	; 0x854 <dxl_hal_get_queue+0x34>
     84a:	80 91 9e 0a 	lds	r24, 0x0A9E
     84e:	8f 5f       	subi	r24, 0xFF	; 255
     850:	80 93 9e 0a 	sts	0x0A9E, r24
     854:	8e 2f       	mov	r24, r30
     856:	08 95       	ret

00000858 <dxl_hal_rx>:
     858:	ef 92       	push	r14
     85a:	ff 92       	push	r15
     85c:	0f 93       	push	r16
     85e:	1f 93       	push	r17
     860:	cf 93       	push	r28
     862:	df 93       	push	r29
     864:	7c 01       	movw	r14, r24
     866:	eb 01       	movw	r28, r22
     868:	90 91 9e 0a 	lds	r25, 0x0A9E
     86c:	80 91 9f 0a 	lds	r24, 0x0A9F
     870:	98 17       	cp	r25, r24
     872:	19 f4       	brne	.+6      	; 0x87a <dxl_hal_rx+0x22>
     874:	00 e0       	ldi	r16, 0x00	; 0
     876:	10 e0       	ldi	r17, 0x00	; 0
     878:	12 c0       	rjmp	.+36     	; 0x89e <dxl_hal_rx+0x46>
     87a:	96 df       	rcall	.-212    	; 0x7a8 <dxl_hal_get_qstate>
     87c:	8c 01       	movw	r16, r24
     87e:	c8 17       	cp	r28, r24
     880:	d9 07       	cpc	r29, r25
     882:	0c f4       	brge	.+2      	; 0x886 <dxl_hal_rx+0x2e>
     884:	8e 01       	movw	r16, r28
     886:	c0 e0       	ldi	r28, 0x00	; 0
     888:	d0 e0       	ldi	r29, 0x00	; 0
     88a:	06 c0       	rjmp	.+12     	; 0x898 <dxl_hal_rx+0x40>
     88c:	c9 df       	rcall	.-110    	; 0x820 <dxl_hal_get_queue>
     88e:	f7 01       	movw	r30, r14
     890:	ec 0f       	add	r30, r28
     892:	fd 1f       	adc	r31, r29
     894:	80 83       	st	Z, r24
     896:	21 96       	adiw	r28, 0x01	; 1
     898:	c0 17       	cp	r28, r16
     89a:	d1 07       	cpc	r29, r17
     89c:	bc f3       	brlt	.-18     	; 0x88c <dxl_hal_rx+0x34>
     89e:	c8 01       	movw	r24, r16
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	ff 90       	pop	r15
     8aa:	ef 90       	pop	r14
     8ac:	08 95       	ret

000008ae <__vector_25>:
     8ae:	1f 92       	push	r1
     8b0:	0f 92       	push	r0
     8b2:	0f b6       	in	r0, 0x3f	; 63
     8b4:	0f 92       	push	r0
     8b6:	0b b6       	in	r0, 0x3b	; 59
     8b8:	0f 92       	push	r0
     8ba:	11 24       	eor	r1, r1
     8bc:	2f 93       	push	r18
     8be:	3f 93       	push	r19
     8c0:	4f 93       	push	r20
     8c2:	5f 93       	push	r21
     8c4:	6f 93       	push	r22
     8c6:	7f 93       	push	r23
     8c8:	8f 93       	push	r24
     8ca:	9f 93       	push	r25
     8cc:	af 93       	push	r26
     8ce:	bf 93       	push	r27
     8d0:	ef 93       	push	r30
     8d2:	ff 93       	push	r31
     8d4:	80 91 c6 00 	lds	r24, 0x00C6
     8d8:	89 df       	rcall	.-238    	; 0x7ec <dxl_hal_put_queue>
     8da:	ff 91       	pop	r31
     8dc:	ef 91       	pop	r30
     8de:	bf 91       	pop	r27
     8e0:	af 91       	pop	r26
     8e2:	9f 91       	pop	r25
     8e4:	8f 91       	pop	r24
     8e6:	7f 91       	pop	r23
     8e8:	6f 91       	pop	r22
     8ea:	5f 91       	pop	r21
     8ec:	4f 91       	pop	r20
     8ee:	3f 91       	pop	r19
     8f0:	2f 91       	pop	r18
     8f2:	0f 90       	pop	r0
     8f4:	0b be       	out	0x3b, r0	; 59
     8f6:	0f 90       	pop	r0
     8f8:	0f be       	out	0x3f, r0	; 63
     8fa:	0f 90       	pop	r0
     8fc:	1f 90       	pop	r1
     8fe:	18 95       	reti

00000900 <serial_write>:
     900:	ac 01       	movw	r20, r24
     902:	20 e0       	ldi	r18, 0x00	; 0
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	0c c0       	rjmp	.+24     	; 0x920 <serial_write+0x20>
     908:	80 91 c8 00 	lds	r24, 0x00C8
     90c:	85 ff       	sbrs	r24, 5
     90e:	fc cf       	rjmp	.-8      	; 0x908 <serial_write+0x8>
     910:	fa 01       	movw	r30, r20
     912:	e2 0f       	add	r30, r18
     914:	f3 1f       	adc	r31, r19
     916:	80 81       	ld	r24, Z
     918:	80 93 ce 00 	sts	0x00CE, r24
     91c:	2f 5f       	subi	r18, 0xFF	; 255
     91e:	3f 4f       	sbci	r19, 0xFF	; 255
     920:	26 17       	cp	r18, r22
     922:	37 07       	cpc	r19, r23
     924:	8c f3       	brlt	.-30     	; 0x908 <serial_write+0x8>
     926:	08 95       	ret

00000928 <serial_read>:
     928:	dc 01       	movw	r26, r24
     92a:	90 91 20 0b 	lds	r25, 0x0B20
     92e:	80 91 21 0b 	lds	r24, 0x0B21
     932:	98 17       	cp	r25, r24
     934:	11 f4       	brne	.+4      	; 0x93a <serial_read+0x12>
     936:	80 e0       	ldi	r24, 0x00	; 0
     938:	08 95       	ret
     93a:	90 91 20 0b 	lds	r25, 0x0B20
     93e:	80 91 21 0b 	lds	r24, 0x0B21
     942:	98 17       	cp	r25, r24
     944:	19 f4       	brne	.+6      	; 0x94c <serial_read+0x24>
     946:	20 e0       	ldi	r18, 0x00	; 0
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	17 c0       	rjmp	.+46     	; 0x97a <serial_read+0x52>
     94c:	90 91 20 0b 	lds	r25, 0x0B20
     950:	80 91 21 0b 	lds	r24, 0x0B21
     954:	98 17       	cp	r25, r24
     956:	38 f4       	brcc	.+14     	; 0x966 <serial_read+0x3e>
     958:	80 91 21 0b 	lds	r24, 0x0B21
     95c:	90 91 20 0b 	lds	r25, 0x0B20
     960:	28 2f       	mov	r18, r24
     962:	30 e0       	ldi	r19, 0x00	; 0
     964:	08 c0       	rjmp	.+16     	; 0x976 <serial_read+0x4e>
     966:	80 91 21 0b 	lds	r24, 0x0B21
     96a:	90 91 20 0b 	lds	r25, 0x0B20
     96e:	28 2f       	mov	r18, r24
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	20 58       	subi	r18, 0x80	; 128
     974:	3f 4f       	sbci	r19, 0xFF	; 255
     976:	29 1b       	sub	r18, r25
     978:	31 09       	sbc	r19, r1
     97a:	a9 01       	movw	r20, r18
     97c:	62 17       	cp	r22, r18
     97e:	73 07       	cpc	r23, r19
     980:	0c f4       	brge	.+2      	; 0x984 <serial_read+0x5c>
     982:	ab 01       	movw	r20, r22
     984:	20 e0       	ldi	r18, 0x00	; 0
     986:	30 e0       	ldi	r19, 0x00	; 0
     988:	20 c0       	rjmp	.+64     	; 0x9ca <serial_read+0xa2>
     98a:	90 91 20 0b 	lds	r25, 0x0B20
     98e:	80 91 21 0b 	lds	r24, 0x0B21
     992:	98 17       	cp	r25, r24
     994:	11 f4       	brne	.+4      	; 0x99a <serial_read+0x72>
     996:	9f ef       	ldi	r25, 0xFF	; 255
     998:	12 c0       	rjmp	.+36     	; 0x9be <serial_read+0x96>
     99a:	e0 91 20 0b 	lds	r30, 0x0B20
     99e:	f0 e0       	ldi	r31, 0x00	; 0
     9a0:	e0 56       	subi	r30, 0x60	; 96
     9a2:	f5 4f       	sbci	r31, 0xF5	; 245
     9a4:	90 81       	ld	r25, Z
     9a6:	80 91 20 0b 	lds	r24, 0x0B20
     9aa:	8f 37       	cpi	r24, 0x7F	; 127
     9ac:	19 f4       	brne	.+6      	; 0x9b4 <serial_read+0x8c>
     9ae:	10 92 20 0b 	sts	0x0B20, r1
     9b2:	05 c0       	rjmp	.+10     	; 0x9be <serial_read+0x96>
     9b4:	80 91 20 0b 	lds	r24, 0x0B20
     9b8:	8f 5f       	subi	r24, 0xFF	; 255
     9ba:	80 93 20 0b 	sts	0x0B20, r24
     9be:	fd 01       	movw	r30, r26
     9c0:	e2 0f       	add	r30, r18
     9c2:	f3 1f       	adc	r31, r19
     9c4:	90 83       	st	Z, r25
     9c6:	2f 5f       	subi	r18, 0xFF	; 255
     9c8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ca:	24 17       	cp	r18, r20
     9cc:	35 07       	cpc	r19, r21
     9ce:	ec f2       	brlt	.-70     	; 0x98a <serial_read+0x62>
     9d0:	84 2f       	mov	r24, r20
     9d2:	08 95       	ret

000009d4 <serial_get_qstate>:
     9d4:	90 91 20 0b 	lds	r25, 0x0B20
     9d8:	80 91 21 0b 	lds	r24, 0x0B21
     9dc:	98 17       	cp	r25, r24
     9de:	19 f4       	brne	.+6      	; 0x9e6 <serial_get_qstate+0x12>
     9e0:	20 e0       	ldi	r18, 0x00	; 0
     9e2:	30 e0       	ldi	r19, 0x00	; 0
     9e4:	17 c0       	rjmp	.+46     	; 0xa14 <serial_get_qstate+0x40>
     9e6:	90 91 20 0b 	lds	r25, 0x0B20
     9ea:	80 91 21 0b 	lds	r24, 0x0B21
     9ee:	98 17       	cp	r25, r24
     9f0:	38 f4       	brcc	.+14     	; 0xa00 <serial_get_qstate+0x2c>
     9f2:	80 91 21 0b 	lds	r24, 0x0B21
     9f6:	90 91 20 0b 	lds	r25, 0x0B20
     9fa:	28 2f       	mov	r18, r24
     9fc:	30 e0       	ldi	r19, 0x00	; 0
     9fe:	08 c0       	rjmp	.+16     	; 0xa10 <serial_get_qstate+0x3c>
     a00:	80 91 21 0b 	lds	r24, 0x0B21
     a04:	90 91 20 0b 	lds	r25, 0x0B20
     a08:	28 2f       	mov	r18, r24
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	20 58       	subi	r18, 0x80	; 128
     a0e:	3f 4f       	sbci	r19, 0xFF	; 255
     a10:	29 1b       	sub	r18, r25
     a12:	31 09       	sbc	r19, r1
     a14:	c9 01       	movw	r24, r18
     a16:	08 95       	ret

00000a18 <serial_put_queue>:
     a18:	48 2f       	mov	r20, r24
     a1a:	90 91 20 0b 	lds	r25, 0x0B20
     a1e:	80 91 21 0b 	lds	r24, 0x0B21
     a22:	98 17       	cp	r25, r24
     a24:	d1 f0       	breq	.+52     	; 0xa5a <serial_put_queue+0x42>
     a26:	90 91 20 0b 	lds	r25, 0x0B20
     a2a:	80 91 21 0b 	lds	r24, 0x0B21
     a2e:	98 17       	cp	r25, r24
     a30:	38 f4       	brcc	.+14     	; 0xa40 <serial_put_queue+0x28>
     a32:	80 91 21 0b 	lds	r24, 0x0B21
     a36:	90 91 20 0b 	lds	r25, 0x0B20
     a3a:	28 2f       	mov	r18, r24
     a3c:	30 e0       	ldi	r19, 0x00	; 0
     a3e:	08 c0       	rjmp	.+16     	; 0xa50 <serial_put_queue+0x38>
     a40:	80 91 21 0b 	lds	r24, 0x0B21
     a44:	90 91 20 0b 	lds	r25, 0x0B20
     a48:	28 2f       	mov	r18, r24
     a4a:	30 e0       	ldi	r19, 0x00	; 0
     a4c:	20 58       	subi	r18, 0x80	; 128
     a4e:	3f 4f       	sbci	r19, 0xFF	; 255
     a50:	29 1b       	sub	r18, r25
     a52:	31 09       	sbc	r19, r1
     a54:	2f 37       	cpi	r18, 0x7F	; 127
     a56:	31 05       	cpc	r19, r1
     a58:	91 f0       	breq	.+36     	; 0xa7e <serial_put_queue+0x66>
     a5a:	e0 91 21 0b 	lds	r30, 0x0B21
     a5e:	f0 e0       	ldi	r31, 0x00	; 0
     a60:	e0 56       	subi	r30, 0x60	; 96
     a62:	f5 4f       	sbci	r31, 0xF5	; 245
     a64:	40 83       	st	Z, r20
     a66:	80 91 21 0b 	lds	r24, 0x0B21
     a6a:	8f 37       	cpi	r24, 0x7F	; 127
     a6c:	19 f4       	brne	.+6      	; 0xa74 <serial_put_queue+0x5c>
     a6e:	10 92 21 0b 	sts	0x0B21, r1
     a72:	08 95       	ret
     a74:	80 91 21 0b 	lds	r24, 0x0B21
     a78:	8f 5f       	subi	r24, 0xFF	; 255
     a7a:	80 93 21 0b 	sts	0x0B21, r24
     a7e:	08 95       	ret

00000a80 <serial_get_queue>:
     a80:	90 91 20 0b 	lds	r25, 0x0B20
     a84:	80 91 21 0b 	lds	r24, 0x0B21
     a88:	98 17       	cp	r25, r24
     a8a:	11 f4       	brne	.+4      	; 0xa90 <serial_get_queue+0x10>
     a8c:	ef ef       	ldi	r30, 0xFF	; 255
     a8e:	12 c0       	rjmp	.+36     	; 0xab4 <serial_get_queue+0x34>
     a90:	e0 91 20 0b 	lds	r30, 0x0B20
     a94:	f0 e0       	ldi	r31, 0x00	; 0
     a96:	e0 56       	subi	r30, 0x60	; 96
     a98:	f5 4f       	sbci	r31, 0xF5	; 245
     a9a:	e0 81       	ld	r30, Z
     a9c:	80 91 20 0b 	lds	r24, 0x0B20
     aa0:	8f 37       	cpi	r24, 0x7F	; 127
     aa2:	19 f4       	brne	.+6      	; 0xaaa <serial_get_queue+0x2a>
     aa4:	10 92 20 0b 	sts	0x0B20, r1
     aa8:	05 c0       	rjmp	.+10     	; 0xab4 <serial_get_queue+0x34>
     aaa:	80 91 20 0b 	lds	r24, 0x0B20
     aae:	8f 5f       	subi	r24, 0xFF	; 255
     ab0:	80 93 20 0b 	sts	0x0B20, r24
     ab4:	8e 2f       	mov	r24, r30
     ab6:	08 95       	ret

00000ab8 <__vector_36>:
     ab8:	1f 92       	push	r1
     aba:	0f 92       	push	r0
     abc:	0f b6       	in	r0, 0x3f	; 63
     abe:	0f 92       	push	r0
     ac0:	0b b6       	in	r0, 0x3b	; 59
     ac2:	0f 92       	push	r0
     ac4:	11 24       	eor	r1, r1
     ac6:	2f 93       	push	r18
     ac8:	3f 93       	push	r19
     aca:	4f 93       	push	r20
     acc:	5f 93       	push	r21
     ace:	6f 93       	push	r22
     ad0:	7f 93       	push	r23
     ad2:	8f 93       	push	r24
     ad4:	9f 93       	push	r25
     ad6:	af 93       	push	r26
     ad8:	bf 93       	push	r27
     ada:	ef 93       	push	r30
     adc:	ff 93       	push	r31
     ade:	80 91 ce 00 	lds	r24, 0x00CE
     ae2:	9a df       	rcall	.-204    	; 0xa18 <serial_put_queue>
     ae4:	ff 91       	pop	r31
     ae6:	ef 91       	pop	r30
     ae8:	bf 91       	pop	r27
     aea:	af 91       	pop	r26
     aec:	9f 91       	pop	r25
     aee:	8f 91       	pop	r24
     af0:	7f 91       	pop	r23
     af2:	6f 91       	pop	r22
     af4:	5f 91       	pop	r21
     af6:	4f 91       	pop	r20
     af8:	3f 91       	pop	r19
     afa:	2f 91       	pop	r18
     afc:	0f 90       	pop	r0
     afe:	0b be       	out	0x3b, r0	; 59
     b00:	0f 90       	pop	r0
     b02:	0f be       	out	0x3f, r0	; 63
     b04:	0f 90       	pop	r0
     b06:	1f 90       	pop	r1
     b08:	18 95       	reti

00000b0a <std_putchar>:
     b0a:	df 93       	push	r29
     b0c:	cf 93       	push	r28
     b0e:	0f 92       	push	r0
     b10:	0f 92       	push	r0
     b12:	cd b7       	in	r28, 0x3d	; 61
     b14:	de b7       	in	r29, 0x3e	; 62
     b16:	98 2f       	mov	r25, r24
     b18:	8a 30       	cpi	r24, 0x0A	; 10
     b1a:	99 f4       	brne	.+38     	; 0xb42 <std_putchar+0x38>
     b1c:	8d e0       	ldi	r24, 0x0D	; 13
     b1e:	89 83       	std	Y+1, r24	; 0x01
     b20:	9a 83       	std	Y+2, r25	; 0x02
     b22:	fe 01       	movw	r30, r28
     b24:	31 96       	adiw	r30, 0x01	; 1
     b26:	9e 01       	movw	r18, r28
     b28:	2d 5f       	subi	r18, 0xFD	; 253
     b2a:	3f 4f       	sbci	r19, 0xFF	; 255
     b2c:	80 91 c8 00 	lds	r24, 0x00C8
     b30:	85 ff       	sbrs	r24, 5
     b32:	fc cf       	rjmp	.-8      	; 0xb2c <std_putchar+0x22>
     b34:	81 91       	ld	r24, Z+
     b36:	80 93 ce 00 	sts	0x00CE, r24
     b3a:	e2 17       	cp	r30, r18
     b3c:	f3 07       	cpc	r31, r19
     b3e:	b1 f7       	brne	.-20     	; 0xb2c <std_putchar+0x22>
     b40:	06 c0       	rjmp	.+12     	; 0xb4e <std_putchar+0x44>
     b42:	80 91 c8 00 	lds	r24, 0x00C8
     b46:	85 ff       	sbrs	r24, 5
     b48:	fc cf       	rjmp	.-8      	; 0xb42 <std_putchar+0x38>
     b4a:	90 93 ce 00 	sts	0x00CE, r25
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0f 90       	pop	r0
     b54:	0f 90       	pop	r0
     b56:	cf 91       	pop	r28
     b58:	df 91       	pop	r29
     b5a:	08 95       	ret

00000b5c <std_getchar>:
     b5c:	90 91 20 0b 	lds	r25, 0x0B20
     b60:	80 91 21 0b 	lds	r24, 0x0B21
     b64:	98 17       	cp	r25, r24
     b66:	d1 f3       	breq	.-12     	; 0xb5c <std_getchar>
     b68:	90 91 20 0b 	lds	r25, 0x0B20
     b6c:	80 91 21 0b 	lds	r24, 0x0B21
     b70:	98 17       	cp	r25, r24
     b72:	38 f4       	brcc	.+14     	; 0xb82 <std_getchar+0x26>
     b74:	80 91 21 0b 	lds	r24, 0x0B21
     b78:	90 91 20 0b 	lds	r25, 0x0B20
     b7c:	28 2f       	mov	r18, r24
     b7e:	30 e0       	ldi	r19, 0x00	; 0
     b80:	08 c0       	rjmp	.+16     	; 0xb92 <std_getchar+0x36>
     b82:	80 91 21 0b 	lds	r24, 0x0B21
     b86:	90 91 20 0b 	lds	r25, 0x0B20
     b8a:	28 2f       	mov	r18, r24
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	20 58       	subi	r18, 0x80	; 128
     b90:	3f 4f       	sbci	r19, 0xFF	; 255
     b92:	29 1b       	sub	r18, r25
     b94:	31 09       	sbc	r19, r1
     b96:	23 2b       	or	r18, r19
     b98:	09 f3       	breq	.-62     	; 0xb5c <std_getchar>
     b9a:	90 91 20 0b 	lds	r25, 0x0B20
     b9e:	80 91 21 0b 	lds	r24, 0x0B21
     ba2:	98 17       	cp	r25, r24
     ba4:	11 f4       	brne	.+4      	; 0xbaa <std_getchar+0x4e>
     ba6:	ef ef       	ldi	r30, 0xFF	; 255
     ba8:	15 c0       	rjmp	.+42     	; 0xbd4 <std_getchar+0x78>
     baa:	e0 91 20 0b 	lds	r30, 0x0B20
     bae:	f0 e0       	ldi	r31, 0x00	; 0
     bb0:	e0 56       	subi	r30, 0x60	; 96
     bb2:	f5 4f       	sbci	r31, 0xF5	; 245
     bb4:	e0 81       	ld	r30, Z
     bb6:	80 91 20 0b 	lds	r24, 0x0B20
     bba:	8f 37       	cpi	r24, 0x7F	; 127
     bbc:	19 f4       	brne	.+6      	; 0xbc4 <std_getchar+0x68>
     bbe:	10 92 20 0b 	sts	0x0B20, r1
     bc2:	05 c0       	rjmp	.+10     	; 0xbce <std_getchar+0x72>
     bc4:	80 91 20 0b 	lds	r24, 0x0B20
     bc8:	8f 5f       	subi	r24, 0xFF	; 255
     bca:	80 93 20 0b 	sts	0x0B20, r24
     bce:	ed 30       	cpi	r30, 0x0D	; 13
     bd0:	09 f4       	brne	.+2      	; 0xbd4 <std_getchar+0x78>
     bd2:	ea e0       	ldi	r30, 0x0A	; 10
     bd4:	8e 2f       	mov	r24, r30
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	08 95       	ret

00000bda <serial_initialize>:
     bda:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__floatsisf>
     bde:	9b 01       	movw	r18, r22
     be0:	ac 01       	movw	r20, r24
     be2:	60 e0       	ldi	r22, 0x00	; 0
     be4:	74 e2       	ldi	r23, 0x24	; 36
     be6:	84 ef       	ldi	r24, 0xF4	; 244
     be8:	99 e4       	ldi	r25, 0x49	; 73
     bea:	0e 94 5b 0e 	call	0x1cb6	; 0x1cb6 <__divsf3>
     bee:	0e 94 c8 0e 	call	0x1d90	; 0x1d90 <__fixunssfsi>
     bf2:	61 50       	subi	r22, 0x01	; 1
     bf4:	70 40       	sbci	r23, 0x00	; 0
     bf6:	22 e4       	ldi	r18, 0x42	; 66
     bf8:	20 93 c8 00 	sts	0x00C8, r18
     bfc:	28 e9       	ldi	r18, 0x98	; 152
     bfe:	20 93 c9 00 	sts	0x00C9, r18
     c02:	26 e0       	ldi	r18, 0x06	; 6
     c04:	20 93 ca 00 	sts	0x00CA, r18
     c08:	2f ef       	ldi	r18, 0xFF	; 255
     c0a:	20 93 ce 00 	sts	0x00CE, r18
     c0e:	10 92 20 0b 	sts	0x0B20, r1
     c12:	10 92 21 0b 	sts	0x0B21, r1
     c16:	27 2f       	mov	r18, r23
     c18:	33 27       	eor	r19, r19
     c1a:	27 fd       	sbrc	r18, 7
     c1c:	3a 95       	dec	r19
     c1e:	20 93 cd 00 	sts	0x00CD, r18
     c22:	60 93 cc 00 	sts	0x00CC, r22
     c26:	72 98       	cbi	0x0e, 2	; 14
     c28:	73 9a       	sbi	0x0e, 3	; 14
     c2a:	85 e8       	ldi	r24, 0x85	; 133
     c2c:	95 e0       	ldi	r25, 0x05	; 5
     c2e:	6e ea       	ldi	r22, 0xAE	; 174
     c30:	75 e0       	ldi	r23, 0x05	; 5
     c32:	0e 94 87 10 	call	0x210e	; 0x210e <fdevopen>
     c36:	90 93 23 0b 	sts	0x0B23, r25
     c3a:	80 93 22 0b 	sts	0x0B22, r24
     c3e:	08 95       	ret

00000c40 <initSerial>:
}

void clearSerialBuffer(){
//	printf( "clearSerialBuffer\n" );
	isRead = 0;
	memset( &readBuffer[0], 0x00, SERIAL_BUFFER_SIZE );
     c40:	60 e0       	ldi	r22, 0x00	; 0
     c42:	71 ee       	ldi	r23, 0xE1	; 225
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	c8 df       	rcall	.-112    	; 0xbda <serial_initialize>
     c4a:	78 94       	sei
     c4c:	08 95       	ret

00000c4e <checkSerialRead>:
}

int checkSerialRead(void){
	int ret = 0;
	if( serial_get_qstate() > 0 ){
     c4e:	c2 de       	rcall	.-636    	; 0x9d4 <serial_get_qstate>
     c50:	18 16       	cp	r1, r24
     c52:	19 06       	cpc	r1, r25
     c54:	0c f0       	brlt	.+2      	; 0xc58 <checkSerialRead+0xa>
     c56:	3f c0       	rjmp	.+126    	; 0xcd6 <checkSerialRead+0x88>
		unsigned char ReceivedData = getchar();
     c58:	80 91 3e 0c 	lds	r24, 0x0C3E
     c5c:	90 91 3f 0c 	lds	r25, 0x0C3F
     c60:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <fgetc>
//		printf( "checkSerialRead %d\n", ReceivedData );
		if( ReceivedData == 10 || ReceivedData == 13 ){
     c64:	8a 30       	cpi	r24, 0x0A	; 10
     c66:	11 f0       	breq	.+4      	; 0xc6c <checkSerialRead+0x1e>
     c68:	8d 30       	cpi	r24, 0x0D	; 13
     c6a:	91 f4       	brne	.+36     	; 0xc90 <checkSerialRead+0x42>
			if( buffCnt > 0 ){
     c6c:	80 91 76 0b 	lds	r24, 0x0B76
     c70:	90 91 77 0b 	lds	r25, 0x0B77
     c74:	18 16       	cp	r1, r24
     c76:	19 06       	cpc	r1, r25
     c78:	8c f5       	brge	.+98     	; 0xcdc <checkSerialRead+0x8e>
				buffCnt = 0;
     c7a:	10 92 77 0b 	sts	0x0B77, r1
     c7e:	10 92 76 0b 	sts	0x0B76, r1
				isRead = 1;
     c82:	81 e0       	ldi	r24, 0x01	; 1
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	90 93 79 0b 	sts	0x0B79, r25
     c8a:	80 93 78 0b 	sts	0x0B78, r24
     c8e:	08 95       	ret
				ret = 1;
			}
		}else if( ReceivedData > 0 ){
     c90:	88 23       	and	r24, r24
     c92:	39 f1       	breq	.+78     	; 0xce2 <checkSerialRead+0x94>
			readBuffer[buffCnt++] = ReceivedData;
     c94:	20 91 76 0b 	lds	r18, 0x0B76
     c98:	30 91 77 0b 	lds	r19, 0x0B77
     c9c:	a9 01       	movw	r20, r18
     c9e:	4f 5f       	subi	r20, 0xFF	; 255
     ca0:	5f 4f       	sbci	r21, 0xFF	; 255
     ca2:	50 93 77 0b 	sts	0x0B77, r21
     ca6:	40 93 76 0b 	sts	0x0B76, r20
     caa:	f9 01       	movw	r30, r18
     cac:	ea 5d       	subi	r30, 0xDA	; 218
     cae:	f4 4f       	sbci	r31, 0xF4	; 244
     cb0:	80 83       	st	Z, r24
			if( buffCnt >= SERIAL_BUFFER_SIZE-1 ){
     cb2:	80 91 76 0b 	lds	r24, 0x0B76
     cb6:	90 91 77 0b 	lds	r25, 0x0B77
     cba:	8f 34       	cpi	r24, 0x4F	; 79
     cbc:	91 05       	cpc	r25, r1
     cbe:	a4 f0       	brlt	.+40     	; 0xce8 <checkSerialRead+0x9a>
				buffCnt = 0;
     cc0:	10 92 77 0b 	sts	0x0B77, r1
     cc4:	10 92 76 0b 	sts	0x0B76, r1
				isRead = 1;
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	90 93 79 0b 	sts	0x0B79, r25
     cd0:	80 93 78 0b 	sts	0x0B78, r24
     cd4:	08 95       	ret
	isRead = 0;
	memset( &readBuffer[0], 0x00, SERIAL_BUFFER_SIZE );
}

int checkSerialRead(void){
	int ret = 0;
     cd6:	80 e0       	ldi	r24, 0x00	; 0
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	08 95       	ret
     cdc:	80 e0       	ldi	r24, 0x00	; 0
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	08 95       	ret
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	08 95       	ret
     ce8:	80 e0       	ldi	r24, 0x00	; 0
     cea:	90 e0       	ldi	r25, 0x00	; 0
			}
		}
//		printf( "readBuffer %s\n", &readBuffer[0] );
	}
	return ret;
}
     cec:	08 95       	ret

00000cee <getReadBuffer>:

char * getReadBuffer(){
//	printf( "getReadBuffer %d\n", isRead );
	char * ret = NULL;
	if( isRead > 0 ){
     cee:	80 91 78 0b 	lds	r24, 0x0B78
     cf2:	90 91 79 0b 	lds	r25, 0x0B79
     cf6:	18 16       	cp	r1, r24
     cf8:	19 06       	cpc	r1, r25
     cfa:	3c f4       	brge	.+14     	; 0xd0a <getReadBuffer+0x1c>
			//memset( &readBuffer[0], 0x00, BUFFER_SIZE );
			//isRead = 0;
			//printf( "ret=%s\n", ret );
		//}
		ret = &readBuffer[0];
		isRead = 0;
     cfc:	10 92 79 0b 	sts	0x0B79, r1
     d00:	10 92 78 0b 	sts	0x0B78, r1
			//memcpy( &ret, &readBuffer, sizeof(unsigned char) * BUFFER_SIZE );
			//memset( &readBuffer[0], 0x00, BUFFER_SIZE );
			//isRead = 0;
			//printf( "ret=%s\n", ret );
		//}
		ret = &readBuffer[0];
     d04:	86 e2       	ldi	r24, 0x26	; 38
     d06:	9b e0       	ldi	r25, 0x0B	; 11
     d08:	08 95       	ret
	return ret;
}

char * getReadBuffer(){
//	printf( "getReadBuffer %d\n", isRead );
	char * ret = NULL;
     d0a:	80 e0       	ldi	r24, 0x00	; 0
     d0c:	90 e0       	ldi	r25, 0x00	; 0
		//}
		ret = &readBuffer[0];
		isRead = 0;
	}
	return ret;	
}
     d0e:	08 95       	ret

00000d10 <sendAck>:
	}else{
		PrintCommStatus(CommStatus);
	}
}

void ServoReadState(){
     d10:	9f 93       	push	r25
     d12:	8f 93       	push	r24
     d14:	81 e3       	ldi	r24, 0x31	; 49
     d16:	96 e0       	ldi	r25, 0x06	; 6
     d18:	9f 93       	push	r25
     d1a:	8f 93       	push	r24
     d1c:	0e 94 0f 11 	call	0x221e	; 0x221e <printf>
     d20:	0f 90       	pop	r0
     d22:	0f 90       	pop	r0
     d24:	0f 90       	pop	r0
     d26:	0f 90       	pop	r0
     d28:	08 95       	ret

00000d2a <MotorInit>:
     d2a:	61 e0       	ldi	r22, 0x01	; 1
     d2c:	70 e0       	ldi	r23, 0x00	; 0
     d2e:	80 e0       	ldi	r24, 0x00	; 0
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	dd db       	rcall	.-2118   	; 0x4ee <dxl_initialize>
     d34:	41 e0       	ldi	r20, 0x01	; 1
     d36:	50 e0       	ldi	r21, 0x00	; 0
     d38:	6f e2       	ldi	r22, 0x2F	; 47
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	8f e1       	ldi	r24, 0x1F	; 31
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	5a db       	rcall	.-2380   	; 0x3f6 <dxl_write_word>
     d42:	40 e0       	ldi	r20, 0x00	; 0
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	60 e2       	ldi	r22, 0x20	; 32
     d48:	70 e0       	ldi	r23, 0x00	; 0
     d4a:	8e ef       	ldi	r24, 0xFE	; 254
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	53 db       	rcall	.-2394   	; 0x3f6 <dxl_write_word>
     d50:	40 e0       	ldi	r20, 0x00	; 0
     d52:	50 e0       	ldi	r21, 0x00	; 0
     d54:	68 e1       	ldi	r22, 0x18	; 24
     d56:	70 e0       	ldi	r23, 0x00	; 0
     d58:	8e ef       	ldi	r24, 0xFE	; 254
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	84 db       	rcall	.-2296   	; 0x466 <dxl_write_byte>
     d5e:	2f e3       	ldi	r18, 0x3F	; 63
     d60:	8d e0       	ldi	r24, 0x0D	; 13
     d62:	93 e0       	ldi	r25, 0x03	; 3
     d64:	21 50       	subi	r18, 0x01	; 1
     d66:	80 40       	sbci	r24, 0x00	; 0
     d68:	90 40       	sbci	r25, 0x00	; 0
     d6a:	e1 f7       	brne	.-8      	; 0xd64 <MotorInit+0x3a>
     d6c:	00 c0       	rjmp	.+0      	; 0xd6e <MotorInit+0x44>
     d6e:	00 00       	nop
     d70:	08 95       	ret

00000d72 <split>:
     d72:	0f 93       	push	r16
     d74:	1f 93       	push	r17
     d76:	cf 93       	push	r28
     d78:	df 93       	push	r29
     d7a:	00 d0       	rcall	.+0      	; 0xd7c <split+0xa>
     d7c:	cd b7       	in	r28, 0x3d	; 61
     d7e:	de b7       	in	r29, 0x3e	; 62
     d80:	20 e2       	ldi	r18, 0x20	; 32
     d82:	3c e2       	ldi	r19, 0x2C	; 44
     d84:	40 e0       	ldi	r20, 0x00	; 0
     d86:	29 83       	std	Y+1, r18	; 0x01
     d88:	3a 83       	std	Y+2, r19	; 0x02
     d8a:	4b 83       	std	Y+3, r20	; 0x03
     d8c:	be 01       	movw	r22, r28
     d8e:	6f 5f       	subi	r22, 0xFF	; 255
     d90:	7f 4f       	sbci	r23, 0xFF	; 255
     d92:	0e 94 55 10 	call	0x20aa	; 0x20aa <strtok>
     d96:	00 97       	sbiw	r24, 0x00	; 0
     d98:	89 f0       	breq	.+34     	; 0xdbc <split+0x4a>
     d9a:	04 e9       	ldi	r16, 0x94	; 148
     d9c:	1b e0       	ldi	r17, 0x0B	; 11
     d9e:	0e 94 38 10 	call	0x2070	; 0x2070 <atoi>
     da2:	f8 01       	movw	r30, r16
     da4:	81 93       	st	Z+, r24
     da6:	91 93       	st	Z+, r25
     da8:	8f 01       	movw	r16, r30
     daa:	be 01       	movw	r22, r28
     dac:	6f 5f       	subi	r22, 0xFF	; 255
     dae:	7f 4f       	sbci	r23, 0xFF	; 255
     db0:	80 e0       	ldi	r24, 0x00	; 0
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	0e 94 55 10 	call	0x20aa	; 0x20aa <strtok>
     db8:	00 97       	sbiw	r24, 0x00	; 0
     dba:	89 f7       	brne	.-30     	; 0xd9e <split+0x2c>
     dbc:	0f 90       	pop	r0
     dbe:	0f 90       	pop	r0
     dc0:	0f 90       	pop	r0
     dc2:	df 91       	pop	r29
     dc4:	cf 91       	pop	r28
     dc6:	1f 91       	pop	r17
     dc8:	0f 91       	pop	r16
     dca:	08 95       	ret

00000dcc <isMoving>:
     dcc:	80 91 86 0b 	lds	r24, 0x0B86
     dd0:	90 91 87 0b 	lds	r25, 0x0B87
     dd4:	0a 96       	adiw	r24, 0x0a	; 10
     dd6:	90 93 87 0b 	sts	0x0B87, r25
     dda:	80 93 86 0b 	sts	0x0B86, r24
     dde:	20 91 84 0b 	lds	r18, 0x0B84
     de2:	30 91 85 0b 	lds	r19, 0x0B85
     de6:	82 17       	cp	r24, r18
     de8:	93 07       	cpc	r25, r19
     dea:	3c f0       	brlt	.+14     	; 0xdfa <isMoving+0x2e>
     dec:	10 92 87 0b 	sts	0x0B87, r1
     df0:	10 92 86 0b 	sts	0x0B86, r1
     df4:	80 e0       	ldi	r24, 0x00	; 0
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	08 95       	ret
     dfa:	81 e0       	ldi	r24, 0x01	; 1
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	08 95       	ret

00000e00 <setAngle>:
     e00:	a0 91 96 0b 	lds	r26, 0x0B96
     e04:	b0 91 97 0b 	lds	r27, 0x0B97
     e08:	a2 33       	cpi	r26, 0x32	; 50
     e0a:	b1 05       	cpc	r27, r1
     e0c:	c4 f4       	brge	.+48     	; 0xe3e <setAngle+0x3e>
     e0e:	e8 e9       	ldi	r30, 0x98	; 152
     e10:	fb e0       	ldi	r31, 0x0B	; 11
     e12:	aa 0f       	add	r26, r26
     e14:	bb 1f       	adc	r27, r27
     e16:	cd 01       	movw	r24, r26
     e18:	88 0f       	add	r24, r24
     e1a:	99 1f       	adc	r25, r25
     e1c:	88 0f       	add	r24, r24
     e1e:	99 1f       	adc	r25, r25
     e20:	88 0f       	add	r24, r24
     e22:	99 1f       	adc	r25, r25
     e24:	a8 0f       	add	r26, r24
     e26:	b9 1f       	adc	r27, r25
     e28:	a2 57       	subi	r26, 0x72	; 114
     e2a:	bd 4f       	sbci	r27, 0xFD	; 253
     e2c:	2a ea       	ldi	r18, 0xAA	; 170
     e2e:	3b e0       	ldi	r19, 0x0B	; 11
     e30:	81 91       	ld	r24, Z+
     e32:	91 91       	ld	r25, Z+
     e34:	8d 93       	st	X+, r24
     e36:	9d 93       	st	X+, r25
     e38:	e2 17       	cp	r30, r18
     e3a:	f3 07       	cpc	r31, r19
     e3c:	c9 f7       	brne	.-14     	; 0xe30 <setAngle+0x30>
     e3e:	08 95       	ret

00000e40 <getAngle>:
     e40:	cf 92       	push	r12
     e42:	df 92       	push	r13
     e44:	ef 92       	push	r14
     e46:	ff 92       	push	r15
     e48:	0f 93       	push	r16
     e4a:	1f 93       	push	r17
     e4c:	cf 93       	push	r28
     e4e:	df 93       	push	r29
     e50:	cd b7       	in	r28, 0x3d	; 61
     e52:	de b7       	in	r29, 0x3e	; 62
     e54:	60 97       	sbiw	r28, 0x10	; 16
     e56:	0f b6       	in	r0, 0x3f	; 63
     e58:	f8 94       	cli
     e5a:	de bf       	out	0x3e, r29	; 62
     e5c:	0f be       	out	0x3f, r0	; 63
     e5e:	cd bf       	out	0x3d, r28	; 61
     e60:	fe 01       	movw	r30, r28
     e62:	31 96       	adiw	r30, 0x01	; 1
     e64:	80 e1       	ldi	r24, 0x10	; 16
     e66:	df 01       	movw	r26, r30
     e68:	1d 92       	st	X+, r1
     e6a:	8a 95       	dec	r24
     e6c:	e9 f7       	brne	.-6      	; 0xe68 <getAngle+0x28>
     e6e:	02 e1       	ldi	r16, 0x12	; 18
     e70:	16 e0       	ldi	r17, 0x06	; 6
     e72:	7f 01       	movw	r14, r30
     e74:	0f 2e       	mov	r0, r31
     e76:	f2 e2       	ldi	r31, 0x22	; 34
     e78:	cf 2e       	mov	r12, r31
     e7a:	f6 e0       	ldi	r31, 0x06	; 6
     e7c:	df 2e       	mov	r13, r31
     e7e:	f0 2d       	mov	r31, r0
     e80:	64 e2       	ldi	r22, 0x24	; 36
     e82:	70 e0       	ldi	r23, 0x00	; 0
     e84:	f8 01       	movw	r30, r16
     e86:	81 91       	ld	r24, Z+
     e88:	91 91       	ld	r25, Z+
     e8a:	8f 01       	movw	r16, r30
     e8c:	ce da       	rcall	.-2660   	; 0x42a <dxl_read_word>
     e8e:	d7 01       	movw	r26, r14
     e90:	8d 93       	st	X+, r24
     e92:	9d 93       	st	X+, r25
     e94:	7d 01       	movw	r14, r26
     e96:	0c 15       	cp	r16, r12
     e98:	1d 05       	cpc	r17, r13
     e9a:	91 f7       	brne	.-28     	; 0xe80 <getAngle+0x40>
     e9c:	88 8d       	ldd	r24, Y+24	; 0x18
     e9e:	8f 93       	push	r24
     ea0:	8f 89       	ldd	r24, Y+23	; 0x17
     ea2:	8f 93       	push	r24
     ea4:	8e 89       	ldd	r24, Y+22	; 0x16
     ea6:	8f 93       	push	r24
     ea8:	8d 89       	ldd	r24, Y+21	; 0x15
     eaa:	8f 93       	push	r24
     eac:	8c 89       	ldd	r24, Y+20	; 0x14
     eae:	8f 93       	push	r24
     eb0:	8b 89       	ldd	r24, Y+19	; 0x13
     eb2:	8f 93       	push	r24
     eb4:	8a 89       	ldd	r24, Y+18	; 0x12
     eb6:	8f 93       	push	r24
     eb8:	89 89       	ldd	r24, Y+17	; 0x11
     eba:	8f 93       	push	r24
     ebc:	88 89       	ldd	r24, Y+16	; 0x10
     ebe:	8f 93       	push	r24
     ec0:	8f 85       	ldd	r24, Y+15	; 0x0f
     ec2:	8f 93       	push	r24
     ec4:	8e 85       	ldd	r24, Y+14	; 0x0e
     ec6:	8f 93       	push	r24
     ec8:	8d 85       	ldd	r24, Y+13	; 0x0d
     eca:	8f 93       	push	r24
     ecc:	8c 85       	ldd	r24, Y+12	; 0x0c
     ece:	8f 93       	push	r24
     ed0:	8b 85       	ldd	r24, Y+11	; 0x0b
     ed2:	8f 93       	push	r24
     ed4:	8a 85       	ldd	r24, Y+10	; 0x0a
     ed6:	8f 93       	push	r24
     ed8:	89 85       	ldd	r24, Y+9	; 0x09
     eda:	8f 93       	push	r24
     edc:	88 85       	ldd	r24, Y+8	; 0x08
     ede:	8f 93       	push	r24
     ee0:	8f 81       	ldd	r24, Y+7	; 0x07
     ee2:	8f 93       	push	r24
     ee4:	8e 81       	ldd	r24, Y+6	; 0x06
     ee6:	8f 93       	push	r24
     ee8:	8d 81       	ldd	r24, Y+5	; 0x05
     eea:	8f 93       	push	r24
     eec:	8c 81       	ldd	r24, Y+4	; 0x04
     eee:	8f 93       	push	r24
     ef0:	8b 81       	ldd	r24, Y+3	; 0x03
     ef2:	8f 93       	push	r24
     ef4:	8a 81       	ldd	r24, Y+2	; 0x02
     ef6:	8f 93       	push	r24
     ef8:	89 81       	ldd	r24, Y+1	; 0x01
     efa:	8f 93       	push	r24
     efc:	1f 92       	push	r1
     efe:	82 e0       	ldi	r24, 0x02	; 2
     f00:	8f 93       	push	r24
     f02:	86 e3       	ldi	r24, 0x36	; 54
     f04:	96 e0       	ldi	r25, 0x06	; 6
     f06:	9f 93       	push	r25
     f08:	8f 93       	push	r24
     f0a:	0e 94 0f 11 	call	0x221e	; 0x221e <printf>
     f0e:	0f b6       	in	r0, 0x3f	; 63
     f10:	f8 94       	cli
     f12:	de bf       	out	0x3e, r29	; 62
     f14:	0f be       	out	0x3f, r0	; 63
     f16:	cd bf       	out	0x3d, r28	; 61
     f18:	60 96       	adiw	r28, 0x10	; 16
     f1a:	0f b6       	in	r0, 0x3f	; 63
     f1c:	f8 94       	cli
     f1e:	de bf       	out	0x3e, r29	; 62
     f20:	0f be       	out	0x3f, r0	; 63
     f22:	cd bf       	out	0x3d, r28	; 61
     f24:	df 91       	pop	r29
     f26:	cf 91       	pop	r28
     f28:	1f 91       	pop	r17
     f2a:	0f 91       	pop	r16
     f2c:	ff 90       	pop	r15
     f2e:	ef 90       	pop	r14
     f30:	df 90       	pop	r13
     f32:	cf 90       	pop	r12
     f34:	08 95       	ret

00000f36 <sendActAngle>:
     f36:	9c 01       	movw	r18, r24
     f38:	22 0f       	add	r18, r18
     f3a:	33 1f       	adc	r19, r19
     f3c:	f9 01       	movw	r30, r18
     f3e:	ee 0f       	add	r30, r30
     f40:	ff 1f       	adc	r31, r31
     f42:	ee 0f       	add	r30, r30
     f44:	ff 1f       	adc	r31, r31
     f46:	ee 0f       	add	r30, r30
     f48:	ff 1f       	adc	r31, r31
     f4a:	e2 0f       	add	r30, r18
     f4c:	f3 1f       	adc	r31, r19
     f4e:	e2 57       	subi	r30, 0x72	; 114
     f50:	fd 4f       	sbci	r31, 0xFD	; 253
     f52:	21 8d       	ldd	r18, Z+25	; 0x19
     f54:	2f 93       	push	r18
     f56:	20 8d       	ldd	r18, Z+24	; 0x18
     f58:	2f 93       	push	r18
     f5a:	27 89       	ldd	r18, Z+23	; 0x17
     f5c:	2f 93       	push	r18
     f5e:	26 89       	ldd	r18, Z+22	; 0x16
     f60:	2f 93       	push	r18
     f62:	25 89       	ldd	r18, Z+21	; 0x15
     f64:	2f 93       	push	r18
     f66:	24 89       	ldd	r18, Z+20	; 0x14
     f68:	2f 93       	push	r18
     f6a:	01 96       	adiw	r24, 0x01	; 1
     f6c:	dc 01       	movw	r26, r24
     f6e:	aa 0f       	add	r26, r26
     f70:	bb 1f       	adc	r27, r27
     f72:	cd 01       	movw	r24, r26
     f74:	88 0f       	add	r24, r24
     f76:	99 1f       	adc	r25, r25
     f78:	88 0f       	add	r24, r24
     f7a:	99 1f       	adc	r25, r25
     f7c:	88 0f       	add	r24, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	a8 0f       	add	r26, r24
     f82:	b9 1f       	adc	r27, r25
     f84:	a2 57       	subi	r26, 0x72	; 114
     f86:	bd 4f       	sbci	r27, 0xFD	; 253
     f88:	11 96       	adiw	r26, 0x01	; 1
     f8a:	8c 91       	ld	r24, X
     f8c:	11 97       	sbiw	r26, 0x01	; 1
     f8e:	8f 93       	push	r24
     f90:	8c 91       	ld	r24, X
     f92:	8f 93       	push	r24
     f94:	81 89       	ldd	r24, Z+17	; 0x11
     f96:	8f 93       	push	r24
     f98:	80 89       	ldd	r24, Z+16	; 0x10
     f9a:	8f 93       	push	r24
     f9c:	87 85       	ldd	r24, Z+15	; 0x0f
     f9e:	8f 93       	push	r24
     fa0:	86 85       	ldd	r24, Z+14	; 0x0e
     fa2:	8f 93       	push	r24
     fa4:	85 85       	ldd	r24, Z+13	; 0x0d
     fa6:	8f 93       	push	r24
     fa8:	84 85       	ldd	r24, Z+12	; 0x0c
     faa:	8f 93       	push	r24
     fac:	83 85       	ldd	r24, Z+11	; 0x0b
     fae:	8f 93       	push	r24
     fb0:	82 85       	ldd	r24, Z+10	; 0x0a
     fb2:	8f 93       	push	r24
     fb4:	81 85       	ldd	r24, Z+9	; 0x09
     fb6:	8f 93       	push	r24
     fb8:	80 85       	ldd	r24, Z+8	; 0x08
     fba:	8f 93       	push	r24
     fbc:	87 81       	ldd	r24, Z+7	; 0x07
     fbe:	8f 93       	push	r24
     fc0:	86 81       	ldd	r24, Z+6	; 0x06
     fc2:	8f 93       	push	r24
     fc4:	85 81       	ldd	r24, Z+5	; 0x05
     fc6:	8f 93       	push	r24
     fc8:	84 81       	ldd	r24, Z+4	; 0x04
     fca:	8f 93       	push	r24
     fcc:	83 81       	ldd	r24, Z+3	; 0x03
     fce:	8f 93       	push	r24
     fd0:	82 81       	ldd	r24, Z+2	; 0x02
     fd2:	8f 93       	push	r24
     fd4:	81 81       	ldd	r24, Z+1	; 0x01
     fd6:	8f 93       	push	r24
     fd8:	80 81       	ld	r24, Z
     fda:	8f 93       	push	r24
     fdc:	1f 92       	push	r1
     fde:	83 e0       	ldi	r24, 0x03	; 3
     fe0:	8f 93       	push	r24
     fe2:	8e e5       	ldi	r24, 0x5E	; 94
     fe4:	96 e0       	ldi	r25, 0x06	; 6
     fe6:	9f 93       	push	r25
     fe8:	8f 93       	push	r24
     fea:	0e 94 0f 11 	call	0x221e	; 0x221e <printf>
     fee:	8d b7       	in	r24, 0x3d	; 61
     ff0:	9e b7       	in	r25, 0x3e	; 62
     ff2:	4e 96       	adiw	r24, 0x1e	; 30
     ff4:	0f b6       	in	r0, 0x3f	; 63
     ff6:	f8 94       	cli
     ff8:	9e bf       	out	0x3e, r25	; 62
     ffa:	0f be       	out	0x3f, r0	; 63
     ffc:	8d bf       	out	0x3d, r24	; 61
     ffe:	08 95       	ret

00001000 <getLoad>:
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
    1014:	60 97       	sbiw	r28, 0x10	; 16
    1016:	0f b6       	in	r0, 0x3f	; 63
    1018:	f8 94       	cli
    101a:	de bf       	out	0x3e, r29	; 62
    101c:	0f be       	out	0x3f, r0	; 63
    101e:	cd bf       	out	0x3d, r28	; 61
    1020:	fe 01       	movw	r30, r28
    1022:	31 96       	adiw	r30, 0x01	; 1
    1024:	80 e1       	ldi	r24, 0x10	; 16
    1026:	df 01       	movw	r26, r30
    1028:	1d 92       	st	X+, r1
    102a:	8a 95       	dec	r24
    102c:	e9 f7       	brne	.-6      	; 0x1028 <getLoad+0x28>
    102e:	02 e1       	ldi	r16, 0x12	; 18
    1030:	16 e0       	ldi	r17, 0x06	; 6
    1032:	7f 01       	movw	r14, r30
    1034:	0f 2e       	mov	r0, r31
    1036:	f2 e2       	ldi	r31, 0x22	; 34
    1038:	cf 2e       	mov	r12, r31
    103a:	f6 e0       	ldi	r31, 0x06	; 6
    103c:	df 2e       	mov	r13, r31
    103e:	f0 2d       	mov	r31, r0
    1040:	68 e2       	ldi	r22, 0x28	; 40
    1042:	70 e0       	ldi	r23, 0x00	; 0
    1044:	f8 01       	movw	r30, r16
    1046:	81 91       	ld	r24, Z+
    1048:	91 91       	ld	r25, Z+
    104a:	8f 01       	movw	r16, r30
    104c:	ee d9       	rcall	.-3108   	; 0x42a <dxl_read_word>
    104e:	d7 01       	movw	r26, r14
    1050:	8d 93       	st	X+, r24
    1052:	9d 93       	st	X+, r25
    1054:	7d 01       	movw	r14, r26
    1056:	0c 15       	cp	r16, r12
    1058:	1d 05       	cpc	r17, r13
    105a:	91 f7       	brne	.-28     	; 0x1040 <getLoad+0x40>
    105c:	88 8d       	ldd	r24, Y+24	; 0x18
    105e:	8f 93       	push	r24
    1060:	8f 89       	ldd	r24, Y+23	; 0x17
    1062:	8f 93       	push	r24
    1064:	8e 89       	ldd	r24, Y+22	; 0x16
    1066:	8f 93       	push	r24
    1068:	8d 89       	ldd	r24, Y+21	; 0x15
    106a:	8f 93       	push	r24
    106c:	8c 89       	ldd	r24, Y+20	; 0x14
    106e:	8f 93       	push	r24
    1070:	8b 89       	ldd	r24, Y+19	; 0x13
    1072:	8f 93       	push	r24
    1074:	8a 89       	ldd	r24, Y+18	; 0x12
    1076:	8f 93       	push	r24
    1078:	89 89       	ldd	r24, Y+17	; 0x11
    107a:	8f 93       	push	r24
    107c:	88 89       	ldd	r24, Y+16	; 0x10
    107e:	8f 93       	push	r24
    1080:	8f 85       	ldd	r24, Y+15	; 0x0f
    1082:	8f 93       	push	r24
    1084:	8e 85       	ldd	r24, Y+14	; 0x0e
    1086:	8f 93       	push	r24
    1088:	8d 85       	ldd	r24, Y+13	; 0x0d
    108a:	8f 93       	push	r24
    108c:	8c 85       	ldd	r24, Y+12	; 0x0c
    108e:	8f 93       	push	r24
    1090:	8b 85       	ldd	r24, Y+11	; 0x0b
    1092:	8f 93       	push	r24
    1094:	8a 85       	ldd	r24, Y+10	; 0x0a
    1096:	8f 93       	push	r24
    1098:	89 85       	ldd	r24, Y+9	; 0x09
    109a:	8f 93       	push	r24
    109c:	88 85       	ldd	r24, Y+8	; 0x08
    109e:	8f 93       	push	r24
    10a0:	8f 81       	ldd	r24, Y+7	; 0x07
    10a2:	8f 93       	push	r24
    10a4:	8e 81       	ldd	r24, Y+6	; 0x06
    10a6:	8f 93       	push	r24
    10a8:	8d 81       	ldd	r24, Y+5	; 0x05
    10aa:	8f 93       	push	r24
    10ac:	8c 81       	ldd	r24, Y+4	; 0x04
    10ae:	8f 93       	push	r24
    10b0:	8b 81       	ldd	r24, Y+3	; 0x03
    10b2:	8f 93       	push	r24
    10b4:	8a 81       	ldd	r24, Y+2	; 0x02
    10b6:	8f 93       	push	r24
    10b8:	89 81       	ldd	r24, Y+1	; 0x01
    10ba:	8f 93       	push	r24
    10bc:	1f 92       	push	r1
    10be:	84 e0       	ldi	r24, 0x04	; 4
    10c0:	8f 93       	push	r24
    10c2:	86 e3       	ldi	r24, 0x36	; 54
    10c4:	96 e0       	ldi	r25, 0x06	; 6
    10c6:	9f 93       	push	r25
    10c8:	8f 93       	push	r24
    10ca:	0e 94 0f 11 	call	0x221e	; 0x221e <printf>
    10ce:	0f b6       	in	r0, 0x3f	; 63
    10d0:	f8 94       	cli
    10d2:	de bf       	out	0x3e, r29	; 62
    10d4:	0f be       	out	0x3f, r0	; 63
    10d6:	cd bf       	out	0x3d, r28	; 61
    10d8:	60 96       	adiw	r28, 0x10	; 16
    10da:	0f b6       	in	r0, 0x3f	; 63
    10dc:	f8 94       	cli
    10de:	de bf       	out	0x3e, r29	; 62
    10e0:	0f be       	out	0x3f, r0	; 63
    10e2:	cd bf       	out	0x3d, r28	; 61
    10e4:	df 91       	pop	r29
    10e6:	cf 91       	pop	r28
    10e8:	1f 91       	pop	r17
    10ea:	0f 91       	pop	r16
    10ec:	ff 90       	pop	r15
    10ee:	ef 90       	pop	r14
    10f0:	df 90       	pop	r13
    10f2:	cf 90       	pop	r12
    10f4:	08 95       	ret

000010f6 <getVoltage>:
    10f6:	cf 92       	push	r12
    10f8:	df 92       	push	r13
    10fa:	ef 92       	push	r14
    10fc:	ff 92       	push	r15
    10fe:	0f 93       	push	r16
    1100:	1f 93       	push	r17
    1102:	cf 93       	push	r28
    1104:	df 93       	push	r29
    1106:	cd b7       	in	r28, 0x3d	; 61
    1108:	de b7       	in	r29, 0x3e	; 62
    110a:	60 97       	sbiw	r28, 0x10	; 16
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	f8 94       	cli
    1110:	de bf       	out	0x3e, r29	; 62
    1112:	0f be       	out	0x3f, r0	; 63
    1114:	cd bf       	out	0x3d, r28	; 61
    1116:	fe 01       	movw	r30, r28
    1118:	31 96       	adiw	r30, 0x01	; 1
    111a:	80 e1       	ldi	r24, 0x10	; 16
    111c:	df 01       	movw	r26, r30
    111e:	1d 92       	st	X+, r1
    1120:	8a 95       	dec	r24
    1122:	e9 f7       	brne	.-6      	; 0x111e <getVoltage+0x28>
    1124:	02 e1       	ldi	r16, 0x12	; 18
    1126:	16 e0       	ldi	r17, 0x06	; 6
    1128:	7f 01       	movw	r14, r30
    112a:	0f 2e       	mov	r0, r31
    112c:	f2 e2       	ldi	r31, 0x22	; 34
    112e:	cf 2e       	mov	r12, r31
    1130:	f6 e0       	ldi	r31, 0x06	; 6
    1132:	df 2e       	mov	r13, r31
    1134:	f0 2d       	mov	r31, r0
    1136:	6a e2       	ldi	r22, 0x2A	; 42
    1138:	70 e0       	ldi	r23, 0x00	; 0
    113a:	f8 01       	movw	r30, r16
    113c:	81 91       	ld	r24, Z+
    113e:	91 91       	ld	r25, Z+
    1140:	8f 01       	movw	r16, r30
    1142:	73 d9       	rcall	.-3354   	; 0x42a <dxl_read_word>
    1144:	12 d8       	rcall	.-4060   	; 0x16a <dxl_get_lowbyte>
    1146:	d7 01       	movw	r26, r14
    1148:	8d 93       	st	X+, r24
    114a:	9d 93       	st	X+, r25
    114c:	7d 01       	movw	r14, r26
    114e:	0c 15       	cp	r16, r12
    1150:	1d 05       	cpc	r17, r13
    1152:	89 f7       	brne	.-30     	; 0x1136 <getVoltage+0x40>
    1154:	88 8d       	ldd	r24, Y+24	; 0x18
    1156:	8f 93       	push	r24
    1158:	8f 89       	ldd	r24, Y+23	; 0x17
    115a:	8f 93       	push	r24
    115c:	8e 89       	ldd	r24, Y+22	; 0x16
    115e:	8f 93       	push	r24
    1160:	8d 89       	ldd	r24, Y+21	; 0x15
    1162:	8f 93       	push	r24
    1164:	8c 89       	ldd	r24, Y+20	; 0x14
    1166:	8f 93       	push	r24
    1168:	8b 89       	ldd	r24, Y+19	; 0x13
    116a:	8f 93       	push	r24
    116c:	8a 89       	ldd	r24, Y+18	; 0x12
    116e:	8f 93       	push	r24
    1170:	89 89       	ldd	r24, Y+17	; 0x11
    1172:	8f 93       	push	r24
    1174:	88 89       	ldd	r24, Y+16	; 0x10
    1176:	8f 93       	push	r24
    1178:	8f 85       	ldd	r24, Y+15	; 0x0f
    117a:	8f 93       	push	r24
    117c:	8e 85       	ldd	r24, Y+14	; 0x0e
    117e:	8f 93       	push	r24
    1180:	8d 85       	ldd	r24, Y+13	; 0x0d
    1182:	8f 93       	push	r24
    1184:	8c 85       	ldd	r24, Y+12	; 0x0c
    1186:	8f 93       	push	r24
    1188:	8b 85       	ldd	r24, Y+11	; 0x0b
    118a:	8f 93       	push	r24
    118c:	8a 85       	ldd	r24, Y+10	; 0x0a
    118e:	8f 93       	push	r24
    1190:	89 85       	ldd	r24, Y+9	; 0x09
    1192:	8f 93       	push	r24
    1194:	88 85       	ldd	r24, Y+8	; 0x08
    1196:	8f 93       	push	r24
    1198:	8f 81       	ldd	r24, Y+7	; 0x07
    119a:	8f 93       	push	r24
    119c:	8e 81       	ldd	r24, Y+6	; 0x06
    119e:	8f 93       	push	r24
    11a0:	8d 81       	ldd	r24, Y+5	; 0x05
    11a2:	8f 93       	push	r24
    11a4:	8c 81       	ldd	r24, Y+4	; 0x04
    11a6:	8f 93       	push	r24
    11a8:	8b 81       	ldd	r24, Y+3	; 0x03
    11aa:	8f 93       	push	r24
    11ac:	8a 81       	ldd	r24, Y+2	; 0x02
    11ae:	8f 93       	push	r24
    11b0:	89 81       	ldd	r24, Y+1	; 0x01
    11b2:	8f 93       	push	r24
    11b4:	1f 92       	push	r1
    11b6:	85 e0       	ldi	r24, 0x05	; 5
    11b8:	8f 93       	push	r24
    11ba:	86 e3       	ldi	r24, 0x36	; 54
    11bc:	96 e0       	ldi	r25, 0x06	; 6
    11be:	9f 93       	push	r25
    11c0:	8f 93       	push	r24
    11c2:	0e 94 0f 11 	call	0x221e	; 0x221e <printf>
    11c6:	0f b6       	in	r0, 0x3f	; 63
    11c8:	f8 94       	cli
    11ca:	de bf       	out	0x3e, r29	; 62
    11cc:	0f be       	out	0x3f, r0	; 63
    11ce:	cd bf       	out	0x3d, r28	; 61
    11d0:	60 96       	adiw	r28, 0x10	; 16
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	f8 94       	cli
    11d6:	de bf       	out	0x3e, r29	; 62
    11d8:	0f be       	out	0x3f, r0	; 63
    11da:	cd bf       	out	0x3d, r28	; 61
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	1f 91       	pop	r17
    11e2:	0f 91       	pop	r16
    11e4:	ff 90       	pop	r15
    11e6:	ef 90       	pop	r14
    11e8:	df 90       	pop	r13
    11ea:	cf 90       	pop	r12
    11ec:	08 95       	ret

000011ee <startMotion>:
    11ee:	90 93 83 0b 	sts	0x0B83, r25
    11f2:	80 93 82 0b 	sts	0x0B82, r24
    11f6:	70 93 81 0b 	sts	0x0B81, r23
    11fa:	60 93 80 0b 	sts	0x0B80, r22
    11fe:	20 91 88 0b 	lds	r18, 0x0B88
    1202:	30 91 89 0b 	lds	r19, 0x0B89
    1206:	23 2b       	or	r18, r19
    1208:	61 f4       	brne	.+24     	; 0x1222 <startMotion+0x34>
    120a:	90 93 8b 0b 	sts	0x0B8B, r25
    120e:	80 93 8a 0b 	sts	0x0B8A, r24
    1212:	70 93 89 0b 	sts	0x0B89, r23
    1216:	60 93 88 0b 	sts	0x0B88, r22
    121a:	10 92 81 0b 	sts	0x0B81, r1
    121e:	10 92 80 0b 	sts	0x0B80, r1
    1222:	08 95       	ret

00001224 <setModeAction>:
    1224:	80 91 88 0b 	lds	r24, 0x0B88
    1228:	90 91 89 0b 	lds	r25, 0x0B89
    122c:	18 16       	cp	r1, r24
    122e:	19 06       	cpc	r1, r25
    1230:	0c f4       	brge	.+2      	; 0x1234 <setModeAction+0x10>
    1232:	50 c0       	rjmp	.+160    	; 0x12d4 <setModeAction+0xb0>
    1234:	80 91 92 0b 	lds	r24, 0x0B92
    1238:	90 91 93 0b 	lds	r25, 0x0B93
    123c:	01 97       	sbiw	r24, 0x01	; 1
    123e:	09 f0       	breq	.+2      	; 0x1242 <setModeAction+0x1e>
    1240:	49 c0       	rjmp	.+146    	; 0x12d4 <setModeAction+0xb0>
    1242:	80 91 7a 0b 	lds	r24, 0x0B7A
    1246:	90 91 7b 0b 	lds	r25, 0x0B7B
    124a:	89 2b       	or	r24, r25
    124c:	d1 f4       	brne	.+52     	; 0x1282 <setModeAction+0x5e>
    124e:	e0 91 8c 0b 	lds	r30, 0x0B8C
    1252:	f0 91 8d 0b 	lds	r31, 0x0B8D
    1256:	ee 0f       	add	r30, r30
    1258:	ff 1f       	adc	r31, r31
    125a:	ee 0f       	add	r30, r30
    125c:	ff 1f       	adc	r31, r31
    125e:	e2 5f       	subi	r30, 0xF2	; 242
    1260:	fd 4f       	sbci	r31, 0xFD	; 253
    1262:	80 81       	ld	r24, Z
    1264:	91 81       	ldd	r25, Z+1	; 0x01
    1266:	02 97       	sbiw	r24, 0x02	; 2
    1268:	61 f4       	brne	.+24     	; 0x1282 <setModeAction+0x5e>
    126a:	61 e0       	ldi	r22, 0x01	; 1
    126c:	70 e0       	ldi	r23, 0x00	; 0
    126e:	81 e0       	ldi	r24, 0x01	; 1
    1270:	90 e0       	ldi	r25, 0x00	; 0
    1272:	bd df       	rcall	.-134    	; 0x11ee <startMotion>
    1274:	81 e0       	ldi	r24, 0x01	; 1
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	90 93 7b 0b 	sts	0x0B7B, r25
    127c:	80 93 7a 0b 	sts	0x0B7A, r24
    1280:	08 95       	ret
    1282:	10 92 7b 0b 	sts	0x0B7B, r1
    1286:	10 92 7a 0b 	sts	0x0B7A, r1
    128a:	e0 91 8c 0b 	lds	r30, 0x0B8C
    128e:	f0 91 8d 0b 	lds	r31, 0x0B8D
    1292:	ee 0f       	add	r30, r30
    1294:	ff 1f       	adc	r31, r31
    1296:	ee 0f       	add	r30, r30
    1298:	ff 1f       	adc	r31, r31
    129a:	e2 5f       	subi	r30, 0xF2	; 242
    129c:	fd 4f       	sbci	r31, 0xFD	; 253
    129e:	62 81       	ldd	r22, Z+2	; 0x02
    12a0:	73 81       	ldd	r23, Z+3	; 0x03
    12a2:	80 81       	ld	r24, Z
    12a4:	91 81       	ldd	r25, Z+1	; 0x01
    12a6:	a3 df       	rcall	.-186    	; 0x11ee <startMotion>
    12a8:	80 91 8c 0b 	lds	r24, 0x0B8C
    12ac:	90 91 8d 0b 	lds	r25, 0x0B8D
    12b0:	01 96       	adiw	r24, 0x01	; 1
    12b2:	90 93 8d 0b 	sts	0x0B8D, r25
    12b6:	80 93 8c 0b 	sts	0x0B8C, r24
    12ba:	20 91 10 02 	lds	r18, 0x0210
    12be:	30 91 11 02 	lds	r19, 0x0211
    12c2:	28 17       	cp	r18, r24
    12c4:	39 07       	cpc	r19, r25
    12c6:	34 f4       	brge	.+12     	; 0x12d4 <setModeAction+0xb0>
    12c8:	81 e0       	ldi	r24, 0x01	; 1
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	90 93 8d 0b 	sts	0x0B8D, r25
    12d0:	80 93 8c 0b 	sts	0x0B8C, r24
    12d4:	08 95       	ret

000012d6 <forceMotion>:
    12d6:	90 93 8b 0b 	sts	0x0B8B, r25
    12da:	80 93 8a 0b 	sts	0x0B8A, r24
    12de:	70 93 89 0b 	sts	0x0B89, r23
    12e2:	60 93 88 0b 	sts	0x0B88, r22
    12e6:	10 92 81 0b 	sts	0x0B81, r1
    12ea:	10 92 80 0b 	sts	0x0B80, r1
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	90 93 0d 02 	sts	0x020D, r25
    12f6:	80 93 0c 02 	sts	0x020C, r24
    12fa:	10 92 87 0b 	sts	0x0B87, r1
    12fe:	10 92 86 0b 	sts	0x0B86, r1
    1302:	08 95       	ret

00001304 <stopMotion>:
    1304:	81 e0       	ldi	r24, 0x01	; 1
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	90 93 0d 02 	sts	0x020D, r25
    130c:	80 93 0c 02 	sts	0x020C, r24
    1310:	10 92 89 0b 	sts	0x0B89, r1
    1314:	10 92 88 0b 	sts	0x0B88, r1
    1318:	10 92 87 0b 	sts	0x0B87, r1
    131c:	10 92 86 0b 	sts	0x0B86, r1
    1320:	8f ef       	ldi	r24, 0xFF	; 255
    1322:	9f ef       	ldi	r25, 0xFF	; 255
    1324:	90 93 0b 02 	sts	0x020B, r25
    1328:	80 93 0a 02 	sts	0x020A, r24
    132c:	08 95       	ret

0000132e <PrintErrorCode>:
	
}

void PrintErrorCode()
{
	if(dxl_get_rxpacket_error(ERRBIT_VOLTAGE) == 1)
    132e:	81 e0       	ldi	r24, 0x01	; 1
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1336:	01 97       	sbiw	r24, 0x01	; 1
    1338:	19 f4       	brne	.+6      	; 0x1340 <PrintErrorCode+0x12>
	printf("Input voltage error!\n");
    133a:	8e e8       	ldi	r24, 0x8E	; 142
    133c:	96 e0       	ldi	r25, 0x06	; 6
    133e:	80 d7       	rcall	.+3840   	; 0x2240 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_ANGLE) == 1)
    1340:	82 e0       	ldi	r24, 0x02	; 2
    1342:	90 e0       	ldi	r25, 0x00	; 0
    1344:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1348:	01 97       	sbiw	r24, 0x01	; 1
    134a:	19 f4       	brne	.+6      	; 0x1352 <PrintErrorCode+0x24>
	printf("Angle limit error!\n");
    134c:	83 ea       	ldi	r24, 0xA3	; 163
    134e:	96 e0       	ldi	r25, 0x06	; 6
    1350:	77 d7       	rcall	.+3822   	; 0x2240 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_OVERHEAT) == 1)
    1352:	84 e0       	ldi	r24, 0x04	; 4
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    135a:	01 97       	sbiw	r24, 0x01	; 1
    135c:	19 f4       	brne	.+6      	; 0x1364 <PrintErrorCode+0x36>
	printf("Overheat error!\n");
    135e:	86 eb       	ldi	r24, 0xB6	; 182
    1360:	96 e0       	ldi	r25, 0x06	; 6
    1362:	6e d7       	rcall	.+3804   	; 0x2240 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_RANGE) == 1)
    1364:	88 e0       	ldi	r24, 0x08	; 8
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    136c:	01 97       	sbiw	r24, 0x01	; 1
    136e:	19 f4       	brne	.+6      	; 0x1376 <PrintErrorCode+0x48>
	printf("Out of range error!\n");
    1370:	86 ec       	ldi	r24, 0xC6	; 198
    1372:	96 e0       	ldi	r25, 0x06	; 6
    1374:	65 d7       	rcall	.+3786   	; 0x2240 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_CHECKSUM) == 1)
    1376:	80 e1       	ldi	r24, 0x10	; 16
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    137e:	01 97       	sbiw	r24, 0x01	; 1
    1380:	19 f4       	brne	.+6      	; 0x1388 <PrintErrorCode+0x5a>
	printf("Checksum error!\n");
    1382:	8a ed       	ldi	r24, 0xDA	; 218
    1384:	96 e0       	ldi	r25, 0x06	; 6
    1386:	5c d7       	rcall	.+3768   	; 0x2240 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_OVERLOAD) == 1)
    1388:	80 e2       	ldi	r24, 0x20	; 32
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    1390:	01 97       	sbiw	r24, 0x01	; 1
    1392:	19 f4       	brne	.+6      	; 0x139a <PrintErrorCode+0x6c>
	printf("Overload error!\n");
    1394:	8a ee       	ldi	r24, 0xEA	; 234
    1396:	96 e0       	ldi	r25, 0x06	; 6
    1398:	53 d7       	rcall	.+3750   	; 0x2240 <puts>

	if(dxl_get_rxpacket_error(ERRBIT_INSTRUCTION) == 1)
    139a:	80 e4       	ldi	r24, 0x40	; 64
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 9b 00 	call	0x136	; 0x136 <dxl_get_rxpacket_error>
    13a2:	01 97       	sbiw	r24, 0x01	; 1
    13a4:	19 f4       	brne	.+6      	; 0x13ac <PrintErrorCode+0x7e>
	printf("Instruction code error!\n");
    13a6:	8a ef       	ldi	r24, 0xFA	; 250
    13a8:	96 e0       	ldi	r25, 0x06	; 6
    13aa:	4a c7       	rjmp	.+3732   	; 0x2240 <puts>
    13ac:	08 95       	ret

000013ae <PrintCommStatus>:
}

// Print communication result
void PrintCommStatus(int CommStatus)
{
	switch(CommStatus)
    13ae:	84 30       	cpi	r24, 0x04	; 4
    13b0:	91 05       	cpc	r25, r1
    13b2:	91 f0       	breq	.+36     	; 0x13d8 <PrintCommStatus+0x2a>
    13b4:	34 f4       	brge	.+12     	; 0x13c2 <PrintCommStatus+0x14>
    13b6:	82 30       	cpi	r24, 0x02	; 2
    13b8:	91 05       	cpc	r25, r1
    13ba:	51 f0       	breq	.+20     	; 0x13d0 <PrintCommStatus+0x22>
    13bc:	03 97       	sbiw	r24, 0x03	; 3
    13be:	81 f0       	breq	.+32     	; 0x13e0 <PrintCommStatus+0x32>
    13c0:	1f c0       	rjmp	.+62     	; 0x1400 <PrintCommStatus+0x52>
    13c2:	86 30       	cpi	r24, 0x06	; 6
    13c4:	91 05       	cpc	r25, r1
    13c6:	a1 f0       	breq	.+40     	; 0x13f0 <PrintCommStatus+0x42>
    13c8:	7c f0       	brlt	.+30     	; 0x13e8 <PrintCommStatus+0x3a>
    13ca:	07 97       	sbiw	r24, 0x07	; 7
    13cc:	a9 f0       	breq	.+42     	; 0x13f8 <PrintCommStatus+0x4a>
    13ce:	18 c0       	rjmp	.+48     	; 0x1400 <PrintCommStatus+0x52>
	{
		case COMM_TXFAIL:
		printf("COMM_TXFAIL: Failed transmit instruction packet!\n");
    13d0:	82 e1       	ldi	r24, 0x12	; 18
    13d2:	97 e0       	ldi	r25, 0x07	; 7
    13d4:	35 c7       	rjmp	.+3690   	; 0x2240 <puts>
		break;
    13d6:	08 95       	ret

		case COMM_TXERROR:
		printf("COMM_TXERROR: Incorrect instruction packet!\n");
    13d8:	83 e4       	ldi	r24, 0x43	; 67
    13da:	97 e0       	ldi	r25, 0x07	; 7
    13dc:	31 c7       	rjmp	.+3682   	; 0x2240 <puts>
		break;
    13de:	08 95       	ret

		case COMM_RXFAIL:
		printf("COMM_RXFAIL: Failed get status packet from device!\n");
    13e0:	8f e6       	ldi	r24, 0x6F	; 111
    13e2:	97 e0       	ldi	r25, 0x07	; 7
    13e4:	2d c7       	rjmp	.+3674   	; 0x2240 <puts>
		break;
    13e6:	08 95       	ret

		case COMM_RXWAITING:
		printf("COMM_RXWAITING: Now recieving status packet!\n");
    13e8:	82 ea       	ldi	r24, 0xA2	; 162
    13ea:	97 e0       	ldi	r25, 0x07	; 7
    13ec:	29 c7       	rjmp	.+3666   	; 0x2240 <puts>
		break;
    13ee:	08 95       	ret

		case COMM_RXTIMEOUT:
		printf("COMM_RXTIMEOUT: There is no status packet!\n");
    13f0:	8f ec       	ldi	r24, 0xCF	; 207
    13f2:	97 e0       	ldi	r25, 0x07	; 7
    13f4:	25 c7       	rjmp	.+3658   	; 0x2240 <puts>
		break;
    13f6:	08 95       	ret

		case COMM_RXCORRUPT:
		printf("COMM_RXCORRUPT: Incorrect status packet!\n");
    13f8:	8a ef       	ldi	r24, 0xFA	; 250
    13fa:	97 e0       	ldi	r25, 0x07	; 7
    13fc:	21 c7       	rjmp	.+3650   	; 0x2240 <puts>
		break;
    13fe:	08 95       	ret

		default:
		printf("This is unknown error code!\n");
    1400:	83 e2       	ldi	r24, 0x23	; 35
    1402:	98 e0       	ldi	r25, 0x08	; 8
    1404:	1d c7       	rjmp	.+3642   	; 0x2240 <puts>
    1406:	08 95       	ret

00001408 <MotorControl>:
	
	printf( "%d:%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
	EVT_GET_VOLTAGE, tmp[0],tmp[1],tmp[2],tmp[3],tmp[4],tmp[5],tmp[6],tmp[7],tmp[8],tmp[9],tmp[10],tmp[11] );
}

void MotorControl( int id, int power ){
    1408:	0f 93       	push	r16
    140a:	1f 93       	push	r17
    140c:	cf 93       	push	r28
    140e:	df 93       	push	r29
    1410:	8c 01       	movw	r16, r24
    1412:	eb 01       	movw	r28, r22
	int CommStatus;
//	printf( "%d %d\n", id, power );
//	dxl_write_word( id, P_GOAL_SPEED_L, power );
	if(1){
		dxl_set_txpacket_id(BROADCAST_ID);
    1414:	8e ef       	ldi	r24, 0xFE	; 254
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	0e 94 8d 00 	call	0x11a	; 0x11a <dxl_set_txpacket_id>
		dxl_set_txpacket_instruction(INST_SYNC_WRITE);
    141c:	83 e8       	ldi	r24, 0x83	; 131
    141e:	90 e0       	ldi	r25, 0x00	; 0
    1420:	0e 94 90 00 	call	0x120	; 0x120 <dxl_set_txpacket_instruction>
		dxl_set_txpacket_parameter(0, P_GOAL_SPEED_L);
    1424:	60 e2       	ldi	r22, 0x20	; 32
    1426:	70 e0       	ldi	r23, 0x00	; 0
    1428:	80 e0       	ldi	r24, 0x00	; 0
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(1, 2);
    1430:	62 e0       	ldi	r22, 0x02	; 2
    1432:	70 e0       	ldi	r23, 0x00	; 0
    1434:	81 e0       	ldi	r24, 0x01	; 1
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(2, id);
    143c:	b8 01       	movw	r22, r16
    143e:	82 e0       	ldi	r24, 0x02	; 2
    1440:	90 e0       	ldi	r25, 0x00	; 0
    1442:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(3, dxl_get_lowbyte(power));
    1446:	ce 01       	movw	r24, r28
    1448:	0e 94 b5 00 	call	0x16a	; 0x16a <dxl_get_lowbyte>
    144c:	bc 01       	movw	r22, r24
    144e:	83 e0       	ldi	r24, 0x03	; 3
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(4, dxl_get_highbyte(power));
    1456:	ce 01       	movw	r24, r28
    1458:	0e 94 b9 00 	call	0x172	; 0x172 <dxl_get_highbyte>
    145c:	bc 01       	movw	r22, r24
    145e:	84 e0       	ldi	r24, 0x04	; 4
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_length(4+3*1);
    1466:	87 e0       	ldi	r24, 0x07	; 7
    1468:	90 e0       	ldi	r25, 0x00	; 0
    146a:	0e 94 98 00 	call	0x130	; 0x130 <dxl_set_txpacket_length>
		dxl_txrx_packet();
    146e:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <dxl_txrx_packet>
		CommStatus = dxl_get_result();
    1472:	0e 94 88 00 	call	0x110	; 0x110 <dxl_get_result>
		if( CommStatus == COMM_RXSUCCESS )
    1476:	81 30       	cpi	r24, 0x01	; 1
    1478:	91 05       	cpc	r25, r1
    147a:	11 f4       	brne	.+4      	; 0x1480 <MotorControl+0x78>
			PrintErrorCode();
    147c:	58 df       	rcall	.-336    	; 0x132e <PrintErrorCode>
    147e:	01 c0       	rjmp	.+2      	; 0x1482 <MotorControl+0x7a>
		else
			PrintCommStatus(CommStatus);
    1480:	96 df       	rcall	.-212    	; 0x13ae <PrintCommStatus>
	}
}
    1482:	df 91       	pop	r29
    1484:	cf 91       	pop	r28
    1486:	1f 91       	pop	r17
    1488:	0f 91       	pop	r16
    148a:	08 95       	ret

0000148c <ServoControl>:
//	printf( "%d:%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d: %d:\n",
//	EVT_ACTION, speed[0],speed[1],speed[2],speed[3],speed[4],
//	speed[5],speed[6],speed[7],speed[8],speed[9],speed[10],speed[11], movingTime );
}

void ServoControl( int act ){
    148c:	2f 92       	push	r2
    148e:	3f 92       	push	r3
    1490:	4f 92       	push	r4
    1492:	5f 92       	push	r5
    1494:	6f 92       	push	r6
    1496:	7f 92       	push	r7
    1498:	8f 92       	push	r8
    149a:	9f 92       	push	r9
    149c:	af 92       	push	r10
    149e:	bf 92       	push	r11
    14a0:	cf 92       	push	r12
    14a2:	df 92       	push	r13
    14a4:	ef 92       	push	r14
    14a6:	ff 92       	push	r15
    14a8:	0f 93       	push	r16
    14aa:	1f 93       	push	r17
    14ac:	cf 93       	push	r28
    14ae:	df 93       	push	r29
    14b0:	cd b7       	in	r28, 0x3d	; 61
    14b2:	de b7       	in	r29, 0x3e	; 62
    14b4:	aa 97       	sbiw	r28, 0x2a	; 42
    14b6:	0f b6       	in	r0, 0x3f	; 63
    14b8:	f8 94       	cli
    14ba:	de bf       	out	0x3e, r29	; 62
    14bc:	0f be       	out	0x3f, r0	; 63
    14be:	cd bf       	out	0x3d, r28	; 61
    14c0:	9e a3       	std	Y+38, r25	; 0x26
    14c2:	8d a3       	std	Y+37, r24	; 0x25
	int i;
	int CommStatus = 0;
	if( act >= ACT_MAX ){
    14c4:	c2 97       	sbiw	r24, 0x32	; 50
    14c6:	0c f0       	brlt	.+2      	; 0x14ca <ServoControl+0x3e>
    14c8:	78 c1       	rjmp	.+752    	; 0x17ba <ServoControl+0x32e>
	}
	
	//GetAngle
	int angle = 0;
	int diffMax = 0;
	int angleDiff[SERVO_MAX] = {0};
    14ca:	fe 01       	movw	r30, r28
    14cc:	31 96       	adiw	r30, 0x01	; 1
    14ce:	80 e1       	ldi	r24, 0x10	; 16
    14d0:	df 01       	movw	r26, r30
    14d2:	1d 92       	st	X+, r1
    14d4:	8a 95       	dec	r24
    14d6:	e9 f7       	brne	.-6      	; 0x14d2 <ServoControl+0x46>
    14d8:	8d a1       	ldd	r24, Y+37	; 0x25
    14da:	9e a1       	ldd	r25, Y+38	; 0x26
    14dc:	88 0f       	add	r24, r24
    14de:	99 1f       	adc	r25, r25
    14e0:	9c 01       	movw	r18, r24
    14e2:	22 0f       	add	r18, r18
    14e4:	33 1f       	adc	r19, r19
    14e6:	22 0f       	add	r18, r18
    14e8:	33 1f       	adc	r19, r19
    14ea:	22 0f       	add	r18, r18
    14ec:	33 1f       	adc	r19, r19
    14ee:	82 0f       	add	r24, r18
    14f0:	93 1f       	adc	r25, r19
    14f2:	9c 01       	movw	r18, r24
    14f4:	22 57       	subi	r18, 0x72	; 114
    14f6:	3d 4f       	sbci	r19, 0xFD	; 253
    14f8:	38 a7       	std	Y+40, r19	; 0x28
    14fa:	2f a3       	std	Y+39, r18	; 0x27
    14fc:	6e 2e       	mov	r6, r30
    14fe:	7f 2e       	mov	r7, r31
    1500:	0f 2e       	mov	r0, r31
    1502:	f2 e2       	ldi	r31, 0x22	; 34
    1504:	8f 2e       	mov	r8, r31
    1506:	f6 e0       	ldi	r31, 0x06	; 6
    1508:	9f 2e       	mov	r9, r31
    150a:	f0 2d       	mov	r31, r0
    150c:	7f 01       	movw	r14, r30
    150e:	69 01       	movw	r12, r18
    1510:	02 e1       	ldi	r16, 0x12	; 18
    1512:	16 e0       	ldi	r17, 0x06	; 6
		return;
	}
	
	//GetAngle
	int angle = 0;
	int diffMax = 0;
    1514:	a1 2c       	mov	r10, r1
    1516:	b1 2c       	mov	r11, r1
	int angleDiff[SERVO_MAX] = {0};
	for(int i=0; i<SERVO_MAX; i++ ){
//		if( motionFirst < 0 ){
			angle = dxl_read_word( servoId[i], P_PRESENT_POSITION_L );
    1518:	64 e2       	ldi	r22, 0x24	; 36
    151a:	70 e0       	ldi	r23, 0x00	; 0
    151c:	d8 01       	movw	r26, r16
    151e:	8d 91       	ld	r24, X+
    1520:	9d 91       	ld	r25, X+
    1522:	8d 01       	movw	r16, r26
    1524:	0e 94 15 02 	call	0x42a	; 0x42a <dxl_read_word>
//		}else{
//			angle = angleList[motionFirst][i];
//		}
		angleDiff[i] = angleList[act][i] - angle;
    1528:	f6 01       	movw	r30, r12
    152a:	21 91       	ld	r18, Z+
    152c:	31 91       	ld	r19, Z+
    152e:	6f 01       	movw	r12, r30
    1530:	a9 01       	movw	r20, r18
    1532:	48 1b       	sub	r20, r24
    1534:	59 0b       	sbc	r21, r25
    1536:	ca 01       	movw	r24, r20
		if( angleDiff[i] < 0 ){
    1538:	99 23       	and	r25, r25
    153a:	24 f0       	brlt	.+8      	; 0x1544 <ServoControl+0xb8>
//		if( motionFirst < 0 ){
			angle = dxl_read_word( servoId[i], P_PRESENT_POSITION_L );
//		}else{
//			angle = angleList[motionFirst][i];
//		}
		angleDiff[i] = angleList[act][i] - angle;
    153c:	d7 01       	movw	r26, r14
    153e:	4d 93       	st	X+, r20
    1540:	5c 93       	st	X, r21
    1542:	06 c0       	rjmp	.+12     	; 0x1550 <ServoControl+0xc4>
		if( angleDiff[i] < 0 ){
			angleDiff[i] = angleDiff[i] * -1;
    1544:	91 95       	neg	r25
    1546:	81 95       	neg	r24
    1548:	91 09       	sbc	r25, r1
    154a:	f7 01       	movw	r30, r14
    154c:	91 83       	std	Z+1, r25	; 0x01
    154e:	80 83       	st	Z, r24
		}
		if( diffMax < angleDiff[i] ){
    1550:	d7 01       	movw	r26, r14
    1552:	8d 91       	ld	r24, X+
    1554:	9d 91       	ld	r25, X+
    1556:	7d 01       	movw	r14, r26
    1558:	a8 16       	cp	r10, r24
    155a:	b9 06       	cpc	r11, r25
    155c:	0c f4       	brge	.+2      	; 0x1560 <ServoControl+0xd4>
    155e:	5c 01       	movw	r10, r24
	
	//GetAngle
	int angle = 0;
	int diffMax = 0;
	int angleDiff[SERVO_MAX] = {0};
	for(int i=0; i<SERVO_MAX; i++ ){
    1560:	08 15       	cp	r16, r8
    1562:	19 05       	cpc	r17, r9
    1564:	c9 f6       	brne	.-78     	; 0x1518 <ServoControl+0x8c>
			diffMax = angleDiff[i];
		}
	}
//	motionFirst = act;
	
	int speed[SERVO_MAX] = {100};
    1566:	8e 01       	movw	r16, r28
    1568:	0f 5e       	subi	r16, 0xEF	; 239
    156a:	1f 4f       	sbci	r17, 0xFF	; 255
    156c:	80 e1       	ldi	r24, 0x10	; 16
    156e:	f8 01       	movw	r30, r16
    1570:	11 92       	st	Z+, r1
    1572:	8a 95       	dec	r24
    1574:	e9 f7       	brne	.-6      	; 0x1570 <ServoControl+0xe4>
    1576:	84 e6       	ldi	r24, 0x64	; 100
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	9a 8b       	std	Y+18, r25	; 0x12
    157c:	89 8b       	std	Y+17, r24	; 0x11
	for(int i=0; i<SERVO_MAX; i++ ){
		speed[i] = (int)((float)(angleList[act][SERVO_MAX]) * ((float)angleDiff[i] / diffMax));
    157e:	8d a1       	ldd	r24, Y+37	; 0x25
    1580:	9e a1       	ldd	r25, Y+38	; 0x26
    1582:	88 0f       	add	r24, r24
    1584:	99 1f       	adc	r25, r25
    1586:	fc 01       	movw	r30, r24
    1588:	ee 0f       	add	r30, r30
    158a:	ff 1f       	adc	r31, r31
    158c:	ee 0f       	add	r30, r30
    158e:	ff 1f       	adc	r31, r31
    1590:	ee 0f       	add	r30, r30
    1592:	ff 1f       	adc	r31, r31
    1594:	8e 0f       	add	r24, r30
    1596:	9f 1f       	adc	r25, r31
    1598:	fc 01       	movw	r30, r24
    159a:	e2 57       	subi	r30, 0x72	; 114
    159c:	fd 4f       	sbci	r31, 0xFD	; 253
    159e:	60 89       	ldd	r22, Z+16	; 0x10
    15a0:	71 89       	ldd	r23, Z+17	; 0x11
    15a2:	88 27       	eor	r24, r24
    15a4:	77 fd       	sbrc	r23, 7
    15a6:	80 95       	com	r24
    15a8:	98 2f       	mov	r25, r24
    15aa:	20 d4       	rcall	.+2112   	; 0x1dec <__floatsisf>
    15ac:	6b 01       	movw	r12, r22
    15ae:	7c 01       	movw	r14, r24
    15b0:	09 a7       	std	Y+41, r16	; 0x29
    15b2:	1a a7       	std	Y+42, r17	; 0x2a
    15b4:	1a a3       	std	Y+34, r17	; 0x22
    15b6:	09 a3       	std	Y+33, r16	; 0x21
    15b8:	18 01       	movw	r2, r16
    15ba:	06 2d       	mov	r16, r6
    15bc:	17 2d       	mov	r17, r7
    15be:	45 01       	movw	r8, r10
    15c0:	aa 24       	eor	r10, r10
    15c2:	97 fc       	sbrc	r9, 7
    15c4:	a0 94       	com	r10
    15c6:	ba 2c       	mov	r11, r10
    15c8:	d8 01       	movw	r26, r16
    15ca:	ed 91       	ld	r30, X+
    15cc:	fd 91       	ld	r31, X+
    15ce:	8d 01       	movw	r16, r26
    15d0:	fc a3       	std	Y+36, r31	; 0x24
    15d2:	eb a3       	std	Y+35, r30	; 0x23
    15d4:	c5 01       	movw	r24, r10
    15d6:	b4 01       	movw	r22, r8
    15d8:	09 d4       	rcall	.+2066   	; 0x1dec <__floatsisf>
    15da:	2b 01       	movw	r4, r22
    15dc:	3c 01       	movw	r6, r24
    15de:	2b a1       	ldd	r18, Y+35	; 0x23
    15e0:	3c a1       	ldd	r19, Y+36	; 0x24
    15e2:	b9 01       	movw	r22, r18
    15e4:	88 27       	eor	r24, r24
    15e6:	77 fd       	sbrc	r23, 7
    15e8:	80 95       	com	r24
    15ea:	98 2f       	mov	r25, r24
    15ec:	ff d3       	rcall	.+2046   	; 0x1dec <__floatsisf>
    15ee:	a3 01       	movw	r20, r6
    15f0:	92 01       	movw	r18, r4
    15f2:	61 d3       	rcall	.+1730   	; 0x1cb6 <__divsf3>
    15f4:	9b 01       	movw	r18, r22
    15f6:	ac 01       	movw	r20, r24
    15f8:	c7 01       	movw	r24, r14
    15fa:	b6 01       	movw	r22, r12
    15fc:	83 d4       	rcall	.+2310   	; 0x1f04 <__mulsf3>
    15fe:	c3 d3       	rcall	.+1926   	; 0x1d86 <__fixsfsi>
		if( speed[i] == 0 ){
    1600:	61 15       	cp	r22, r1
    1602:	71 05       	cpc	r23, r1
    1604:	21 f0       	breq	.+8      	; 0x160e <ServoControl+0x182>
	}
//	motionFirst = act;
	
	int speed[SERVO_MAX] = {100};
	for(int i=0; i<SERVO_MAX; i++ ){
		speed[i] = (int)((float)(angleList[act][SERVO_MAX]) * ((float)angleDiff[i] / diffMax));
    1606:	d1 01       	movw	r26, r2
    1608:	6d 93       	st	X+, r22
    160a:	7c 93       	st	X, r23
    160c:	05 c0       	rjmp	.+10     	; 0x1618 <ServoControl+0x18c>
		if( speed[i] == 0 ){
			speed[i] = 1;
    160e:	21 e0       	ldi	r18, 0x01	; 1
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	f1 01       	movw	r30, r2
    1614:	31 83       	std	Z+1, r19	; 0x01
    1616:	20 83       	st	Z, r18
    1618:	32 e0       	ldi	r19, 0x02	; 2
    161a:	23 0e       	add	r2, r19
    161c:	31 1c       	adc	r3, r1
		}
	}
//	motionFirst = act;
	
	int speed[SERVO_MAX] = {100};
	for(int i=0; i<SERVO_MAX; i++ ){
    161e:	49 a1       	ldd	r20, Y+33	; 0x21
    1620:	5a a1       	ldd	r21, Y+34	; 0x22
    1622:	04 17       	cp	r16, r20
    1624:	15 07       	cpc	r17, r21
    1626:	81 f6       	brne	.-96     	; 0x15c8 <ServoControl+0x13c>
		}
	}

//    diffmaxTest[motionCount-1] = diffMax;
//	movingTime = ((float)CYCLE_TIME/VALUE_MAX) * ((float)VALUE_MAX / angleList[act][SERVO_MAX]) * diffMax;
    movingTime = diffMax * (float)(((VALUE_MAX*10)/angleList[act][SERVO_MAX])/2);
    1628:	8d a1       	ldd	r24, Y+37	; 0x25
    162a:	9e a1       	ldd	r25, Y+38	; 0x26
    162c:	88 0f       	add	r24, r24
    162e:	99 1f       	adc	r25, r25
    1630:	fc 01       	movw	r30, r24
    1632:	ee 0f       	add	r30, r30
    1634:	ff 1f       	adc	r31, r31
    1636:	ee 0f       	add	r30, r30
    1638:	ff 1f       	adc	r31, r31
    163a:	ee 0f       	add	r30, r30
    163c:	ff 1f       	adc	r31, r31
    163e:	8e 0f       	add	r24, r30
    1640:	9f 1f       	adc	r25, r31
    1642:	fc 01       	movw	r30, r24
    1644:	e2 57       	subi	r30, 0x72	; 114
    1646:	fd 4f       	sbci	r31, 0xFD	; 253
    1648:	60 89       	ldd	r22, Z+16	; 0x10
    164a:	71 89       	ldd	r23, Z+17	; 0x11
    164c:	8b ef       	ldi	r24, 0xFB	; 251
    164e:	93 e1       	ldi	r25, 0x13	; 19
    1650:	e8 d4       	rcall	.+2512   	; 0x2022 <__divmodhi4>
    1652:	88 27       	eor	r24, r24
    1654:	77 fd       	sbrc	r23, 7
    1656:	80 95       	com	r24
    1658:	98 2f       	mov	r25, r24
    165a:	c8 d3       	rcall	.+1936   	; 0x1dec <__floatsisf>
    165c:	9b 01       	movw	r18, r22
    165e:	ac 01       	movw	r20, r24
    1660:	c3 01       	movw	r24, r6
    1662:	b2 01       	movw	r22, r4
    1664:	4f d4       	rcall	.+2206   	; 0x1f04 <__mulsf3>
    1666:	8f d3       	rcall	.+1822   	; 0x1d86 <__fixsfsi>
	if( movingTime < MAIN_DELAY ){
    1668:	6a 30       	cpi	r22, 0x0A	; 10
    166a:	71 05       	cpc	r23, r1
    166c:	2c f0       	brlt	.+10     	; 0x1678 <ServoControl+0x1ec>
		}
	}

//    diffmaxTest[motionCount-1] = diffMax;
//	movingTime = ((float)CYCLE_TIME/VALUE_MAX) * ((float)VALUE_MAX / angleList[act][SERVO_MAX]) * diffMax;
    movingTime = diffMax * (float)(((VALUE_MAX*10)/angleList[act][SERVO_MAX])/2);
    166e:	70 93 85 0b 	sts	0x0B85, r23
    1672:	60 93 84 0b 	sts	0x0B84, r22
    1676:	06 c0       	rjmp	.+12     	; 0x1684 <ServoControl+0x1f8>
	if( movingTime < MAIN_DELAY ){
		movingTime = MAIN_DELAY;
    1678:	8a e0       	ldi	r24, 0x0A	; 10
    167a:	90 e0       	ldi	r25, 0x00	; 0
    167c:	90 93 85 0b 	sts	0x0B85, r25
    1680:	80 93 84 0b 	sts	0x0B84, r24
	}
	
	//Speed
	dxl_set_txpacket_id(BROADCAST_ID);
    1684:	8e ef       	ldi	r24, 0xFE	; 254
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	0e 94 8d 00 	call	0x11a	; 0x11a <dxl_set_txpacket_id>
	dxl_set_txpacket_instruction(INST_SYNC_WRITE);
    168c:	83 e8       	ldi	r24, 0x83	; 131
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	0e 94 90 00 	call	0x120	; 0x120 <dxl_set_txpacket_instruction>
	dxl_set_txpacket_parameter(0, P_GOAL_SPEED_L);
    1694:	60 e2       	ldi	r22, 0x20	; 32
    1696:	70 e0       	ldi	r23, 0x00	; 0
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	90 e0       	ldi	r25, 0x00	; 0
    169c:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
	dxl_set_txpacket_parameter(1, 2);
    16a0:	62 e0       	ldi	r22, 0x02	; 2
    16a2:	70 e0       	ldi	r23, 0x00	; 0
    16a4:	81 e0       	ldi	r24, 0x01	; 1
    16a6:	90 e0       	ldi	r25, 0x00	; 0
    16a8:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    16ac:	c9 a4       	ldd	r12, Y+41	; 0x29
    16ae:	da a4       	ldd	r13, Y+42	; 0x2a
    16b0:	0f 2e       	mov	r0, r31
    16b2:	f2 e1       	ldi	r31, 0x12	; 18
    16b4:	af 2e       	mov	r10, r31
    16b6:	f6 e0       	ldi	r31, 0x06	; 6
    16b8:	bf 2e       	mov	r11, r31
    16ba:	f0 2d       	mov	r31, r0
    16bc:	02 e0       	ldi	r16, 0x02	; 2
    16be:	10 e0       	ldi	r17, 0x00	; 0
	for( i=0; i<SERVO_MAX; i++ ){
		dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
    16c0:	d5 01       	movw	r26, r10
    16c2:	6d 91       	ld	r22, X+
    16c4:	7d 91       	ld	r23, X+
    16c6:	5d 01       	movw	r10, r26
    16c8:	c8 01       	movw	r24, r16
    16ca:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(speed[i]));
    16ce:	f6 01       	movw	r30, r12
    16d0:	e1 90       	ld	r14, Z+
    16d2:	f1 90       	ld	r15, Z+
    16d4:	6f 01       	movw	r12, r30
    16d6:	c7 01       	movw	r24, r14
    16d8:	0e 94 b5 00 	call	0x16a	; 0x16a <dxl_get_lowbyte>
    16dc:	bc 01       	movw	r22, r24
    16de:	c8 01       	movw	r24, r16
    16e0:	01 96       	adiw	r24, 0x01	; 1
    16e2:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(speed[i]));
    16e6:	c7 01       	movw	r24, r14
    16e8:	0e 94 b9 00 	call	0x172	; 0x172 <dxl_get_highbyte>
    16ec:	bc 01       	movw	r22, r24
    16ee:	c8 01       	movw	r24, r16
    16f0:	02 96       	adiw	r24, 0x02	; 2
    16f2:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    16f6:	0d 5f       	subi	r16, 0xFD	; 253
    16f8:	1f 4f       	sbci	r17, 0xFF	; 255
	//Speed
	dxl_set_txpacket_id(BROADCAST_ID);
	dxl_set_txpacket_instruction(INST_SYNC_WRITE);
	dxl_set_txpacket_parameter(0, P_GOAL_SPEED_L);
	dxl_set_txpacket_parameter(1, 2);
	for( i=0; i<SERVO_MAX; i++ ){
    16fa:	0a 31       	cpi	r16, 0x1A	; 26
    16fc:	11 05       	cpc	r17, r1
    16fe:	01 f7       	brne	.-64     	; 0x16c0 <ServoControl+0x234>
		dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
		dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(speed[i]));
		dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(speed[i]));
	}
	dxl_set_txpacket_length(4+3*SERVO_MAX);
    1700:	8c e1       	ldi	r24, 0x1C	; 28
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	0e 94 98 00 	call	0x130	; 0x130 <dxl_set_txpacket_length>
	dxl_txrx_packet();
    1708:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <dxl_txrx_packet>
	CommStatus = dxl_get_result();
    170c:	0e 94 88 00 	call	0x110	; 0x110 <dxl_get_result>
	if( CommStatus == COMM_RXSUCCESS ){
    1710:	81 30       	cpi	r24, 0x01	; 1
    1712:	91 05       	cpc	r25, r1
    1714:	09 f0       	breq	.+2      	; 0x1718 <ServoControl+0x28c>
    1716:	50 c0       	rjmp	.+160    	; 0x17b8 <ServoControl+0x32c>
		PrintErrorCode();
    1718:	0a de       	rcall	.-1004   	; 0x132e <PrintErrorCode>
		
		//Angle
		dxl_set_txpacket_id(BROADCAST_ID);
    171a:	8e ef       	ldi	r24, 0xFE	; 254
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	0e 94 8d 00 	call	0x11a	; 0x11a <dxl_set_txpacket_id>
		dxl_set_txpacket_instruction(INST_SYNC_WRITE);
    1722:	83 e8       	ldi	r24, 0x83	; 131
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	0e 94 90 00 	call	0x120	; 0x120 <dxl_set_txpacket_instruction>
		dxl_set_txpacket_parameter(0, P_GOAL_POSITION_L);
    172a:	6e e1       	ldi	r22, 0x1E	; 30
    172c:	70 e0       	ldi	r23, 0x00	; 0
    172e:	80 e0       	ldi	r24, 0x00	; 0
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
		dxl_set_txpacket_parameter(1, 2);
    1736:	62 e0       	ldi	r22, 0x02	; 2
    1738:	70 e0       	ldi	r23, 0x00	; 0
    173a:	81 e0       	ldi	r24, 0x01	; 1
    173c:	90 e0       	ldi	r25, 0x00	; 0
    173e:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    1742:	ef a0       	ldd	r14, Y+39	; 0x27
    1744:	f8 a4       	ldd	r15, Y+40	; 0x28
    1746:	0f 2e       	mov	r0, r31
    1748:	f2 e1       	ldi	r31, 0x12	; 18
    174a:	cf 2e       	mov	r12, r31
    174c:	f6 e0       	ldi	r31, 0x06	; 6
    174e:	df 2e       	mov	r13, r31
    1750:	f0 2d       	mov	r31, r0
    1752:	02 e0       	ldi	r16, 0x02	; 2
    1754:	10 e0       	ldi	r17, 0x00	; 0
		for( i=0; i<SERVO_MAX; i++ ){
			dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
    1756:	d6 01       	movw	r26, r12
    1758:	6d 91       	ld	r22, X+
    175a:	7d 91       	ld	r23, X+
    175c:	6d 01       	movw	r12, r26
    175e:	c8 01       	movw	r24, r16
    1760:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    1764:	57 01       	movw	r10, r14
			dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(angleList[act][i]));
    1766:	f7 01       	movw	r30, r14
    1768:	81 91       	ld	r24, Z+
    176a:	91 91       	ld	r25, Z+
    176c:	7f 01       	movw	r14, r30
    176e:	0e 94 b5 00 	call	0x16a	; 0x16a <dxl_get_lowbyte>
    1772:	bc 01       	movw	r22, r24
    1774:	c8 01       	movw	r24, r16
    1776:	01 96       	adiw	r24, 0x01	; 1
    1778:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
			dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(angleList[act][i]));
    177c:	d5 01       	movw	r26, r10
    177e:	8d 91       	ld	r24, X+
    1780:	9c 91       	ld	r25, X
    1782:	0e 94 b9 00 	call	0x172	; 0x172 <dxl_get_highbyte>
    1786:	bc 01       	movw	r22, r24
    1788:	c8 01       	movw	r24, r16
    178a:	02 96       	adiw	r24, 0x02	; 2
    178c:	0e 94 93 00 	call	0x126	; 0x126 <dxl_set_txpacket_parameter>
    1790:	0d 5f       	subi	r16, 0xFD	; 253
    1792:	1f 4f       	sbci	r17, 0xFF	; 255
		//Angle
		dxl_set_txpacket_id(BROADCAST_ID);
		dxl_set_txpacket_instruction(INST_SYNC_WRITE);
		dxl_set_txpacket_parameter(0, P_GOAL_POSITION_L);
		dxl_set_txpacket_parameter(1, 2);
		for( i=0; i<SERVO_MAX; i++ ){
    1794:	0a 31       	cpi	r16, 0x1A	; 26
    1796:	11 05       	cpc	r17, r1
    1798:	f1 f6       	brne	.-68     	; 0x1756 <ServoControl+0x2ca>
			dxl_set_txpacket_parameter(2+(3*i), servoId[i]);
			dxl_set_txpacket_parameter(3+(3*i), dxl_get_lowbyte(angleList[act][i]));
			dxl_set_txpacket_parameter(4+(3*i), dxl_get_highbyte(angleList[act][i]));
		}
		dxl_set_txpacket_length(4+3*SERVO_MAX);
    179a:	8c e1       	ldi	r24, 0x1C	; 28
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	0e 94 98 00 	call	0x130	; 0x130 <dxl_set_txpacket_length>
		dxl_txrx_packet();
    17a2:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <dxl_txrx_packet>
		CommStatus = dxl_get_result();
    17a6:	0e 94 88 00 	call	0x110	; 0x110 <dxl_get_result>
		if( CommStatus == COMM_RXSUCCESS ){
    17aa:	81 30       	cpi	r24, 0x01	; 1
    17ac:	91 05       	cpc	r25, r1
    17ae:	11 f4       	brne	.+4      	; 0x17b4 <ServoControl+0x328>
			PrintErrorCode();
    17b0:	be dd       	rcall	.-1156   	; 0x132e <PrintErrorCode>
    17b2:	03 c0       	rjmp	.+6      	; 0x17ba <ServoControl+0x32e>
		}else{
			PrintCommStatus(CommStatus);
    17b4:	fc dd       	rcall	.-1032   	; 0x13ae <PrintCommStatus>
    17b6:	01 c0       	rjmp	.+2      	; 0x17ba <ServoControl+0x32e>
		}
	}else{
		PrintCommStatus(CommStatus);
    17b8:	fa dd       	rcall	.-1036   	; 0x13ae <PrintCommStatus>
	}
}
    17ba:	aa 96       	adiw	r28, 0x2a	; 42
    17bc:	0f b6       	in	r0, 0x3f	; 63
    17be:	f8 94       	cli
    17c0:	de bf       	out	0x3e, r29	; 62
    17c2:	0f be       	out	0x3f, r0	; 63
    17c4:	cd bf       	out	0x3d, r28	; 61
    17c6:	df 91       	pop	r29
    17c8:	cf 91       	pop	r28
    17ca:	1f 91       	pop	r17
    17cc:	0f 91       	pop	r16
    17ce:	ff 90       	pop	r15
    17d0:	ef 90       	pop	r14
    17d2:	df 90       	pop	r13
    17d4:	cf 90       	pop	r12
    17d6:	bf 90       	pop	r11
    17d8:	af 90       	pop	r10
    17da:	9f 90       	pop	r9
    17dc:	8f 90       	pop	r8
    17de:	7f 90       	pop	r7
    17e0:	6f 90       	pop	r6
    17e2:	5f 90       	pop	r5
    17e4:	4f 90       	pop	r4
    17e6:	3f 90       	pop	r3
    17e8:	2f 90       	pop	r2
    17ea:	08 95       	ret

000017ec <setMode>:
}

void setMode(void){
	//		PORTC = ~(LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY);
	//		PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
	if( ~PIND & SW_BUTTON ){
    17ec:	48 99       	sbic	0x09, 0	; 9
    17ee:	0e c0       	rjmp	.+28     	; 0x180c <setMode+0x20>
//        printf( "PIND is OFF\n");
		if( SwitchSts == 0 ){
    17f0:	80 91 90 0b 	lds	r24, 0x0B90
    17f4:	90 91 91 0b 	lds	r25, 0x0B91
    17f8:	89 2b       	or	r24, r25
    17fa:	09 f0       	breq	.+2      	; 0x17fe <setMode+0x12>
    17fc:	50 c0       	rjmp	.+160    	; 0x189e <setMode+0xb2>
			SwitchSts = 1;
    17fe:	81 e0       	ldi	r24, 0x01	; 1
    1800:	90 e0       	ldi	r25, 0x00	; 0
    1802:	90 93 91 0b 	sts	0x0B91, r25
    1806:	80 93 90 0b 	sts	0x0B90, r24
    180a:	08 95       	ret
		}
	}else{
//		printf( "PIND is ON\n");	
		if( SwitchSts == 1 ){
    180c:	80 91 90 0b 	lds	r24, 0x0B90
    1810:	90 91 91 0b 	lds	r25, 0x0B91
    1814:	01 97       	sbiw	r24, 0x01	; 1
    1816:	09 f0       	breq	.+2      	; 0x181a <setMode+0x2e>
    1818:	42 c0       	rjmp	.+132    	; 0x189e <setMode+0xb2>
			SwitchSts = 0;
    181a:	10 92 91 0b 	sts	0x0B91, r1
    181e:	10 92 90 0b 	sts	0x0B90, r1
			mMode++;
    1822:	80 91 92 0b 	lds	r24, 0x0B92
    1826:	90 91 93 0b 	lds	r25, 0x0B93
    182a:	9c 01       	movw	r18, r24
    182c:	2f 5f       	subi	r18, 0xFF	; 255
    182e:	3f 4f       	sbci	r19, 0xFF	; 255
    1830:	30 93 93 0b 	sts	0x0B93, r19
    1834:	20 93 92 0b 	sts	0x0B92, r18
			if( (LED_MAX - mMode) <= 0 ){
    1838:	26 e0       	ldi	r18, 0x06	; 6
    183a:	30 e0       	ldi	r19, 0x00	; 0
    183c:	a9 01       	movw	r20, r18
    183e:	48 1b       	sub	r20, r24
    1840:	59 0b       	sbc	r21, r25
    1842:	ca 01       	movw	r24, r20
    1844:	18 16       	cp	r1, r24
    1846:	19 06       	cpc	r1, r25
    1848:	3c f0       	brlt	.+14     	; 0x1858 <setMode+0x6c>
				PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM;
    184a:	8f e3       	ldi	r24, 0x3F	; 63
    184c:	88 b9       	out	0x08, r24	; 8
				mMode = MODE_0;
    184e:	10 92 93 0b 	sts	0x0B93, r1
    1852:	10 92 92 0b 	sts	0x0B92, r1
    1856:	0b c0       	rjmp	.+22     	; 0x186e <setMode+0x82>
			}else{
				PORTC = ~(1 << (LED_MAX - mMode));
    1858:	21 e0       	ldi	r18, 0x01	; 1
    185a:	30 e0       	ldi	r19, 0x00	; 0
    185c:	a9 01       	movw	r20, r18
    185e:	02 c0       	rjmp	.+4      	; 0x1864 <setMode+0x78>
    1860:	44 0f       	add	r20, r20
    1862:	55 1f       	adc	r21, r21
    1864:	8a 95       	dec	r24
    1866:	e2 f7       	brpl	.-8      	; 0x1860 <setMode+0x74>
    1868:	ca 01       	movw	r24, r20
    186a:	80 95       	com	r24
    186c:	88 b9       	out	0x08, r24	; 8
			}
			stopMotion();
    186e:	4a dd       	rcall	.-1388   	; 0x1304 <stopMotion>
			ServoControl( 0 );
    1870:	80 e0       	ldi	r24, 0x00	; 0
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	0b de       	rcall	.-1002   	; 0x148c <ServoControl>

			modeCounter = 1;
    1876:	81 e0       	ldi	r24, 0x01	; 1
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	90 93 8d 0b 	sts	0x0B8D, r25
    187e:	80 93 8c 0b 	sts	0x0B8C, r24
			if( mMode == MODE_1 ){
    1882:	80 91 92 0b 	lds	r24, 0x0B92
    1886:	90 91 93 0b 	lds	r25, 0x0B93
    188a:	01 97       	sbiw	r24, 0x01	; 1
    188c:	41 f4       	brne	.+16     	; 0x189e <setMode+0xb2>
				modeWait = mode1act[0][0];
    188e:	80 91 0e 02 	lds	r24, 0x020E
    1892:	90 91 0f 02 	lds	r25, 0x020F
    1896:	90 93 8f 0b 	sts	0x0B8F, r25
    189a:	80 93 8e 0b 	sts	0x0B8E, r24
    189e:	08 95       	ret

000018a0 <move>:
	motionTimes = 0;
	motionTime = 0;
	motionFirst = -1;
}

void move(void){
    18a0:	cf 93       	push	r28
    18a2:	df 93       	push	r29
	if( motionTimes > 0 && isMoving() == 0 ){
    18a4:	80 91 88 0b 	lds	r24, 0x0B88
    18a8:	90 91 89 0b 	lds	r25, 0x0B89
    18ac:	18 16       	cp	r1, r24
    18ae:	19 06       	cpc	r1, r25
    18b0:	0c f0       	brlt	.+2      	; 0x18b4 <move+0x14>
    18b2:	cb c0       	rjmp	.+406    	; 0x1a4a <move+0x1aa>
    18b4:	8b da       	rcall	.-2794   	; 0xdcc <isMoving>
    18b6:	89 2b       	or	r24, r25
    18b8:	09 f0       	breq	.+2      	; 0x18bc <move+0x1c>
    18ba:	c7 c0       	rjmp	.+398    	; 0x1a4a <move+0x1aa>
		int *motion = motionList[motionNumber];
    18bc:	80 91 8a 0b 	lds	r24, 0x0B8A
    18c0:	90 91 8b 0b 	lds	r25, 0x0B8B
    18c4:	fc 01       	movw	r30, r24
    18c6:	ee 0f       	add	r30, r30
    18c8:	ff 1f       	adc	r31, r31
    18ca:	e6 5c       	subi	r30, 0xC6	; 198
    18cc:	fd 4f       	sbci	r31, 0xFD	; 253
    18ce:	c0 81       	ld	r28, Z
    18d0:	d1 81       	ldd	r29, Z+1	; 0x01
        printf("### motionNumber = %d, motion = %d\n", motionNumber, *motion);
    18d2:	29 81       	ldd	r18, Y+1	; 0x01
    18d4:	2f 93       	push	r18
    18d6:	28 81       	ld	r18, Y
    18d8:	2f 93       	push	r18
    18da:	9f 93       	push	r25
    18dc:	8f 93       	push	r24
    18de:	8f e3       	ldi	r24, 0x3F	; 63
    18e0:	98 e0       	ldi	r25, 0x08	; 8
    18e2:	9f 93       	push	r25
    18e4:	8f 93       	push	r24
    18e6:	9b d4       	rcall	.+2358   	; 0x221e <printf>
		int max = motion[0];
    18e8:	28 81       	ld	r18, Y
    18ea:	39 81       	ldd	r19, Y+1	; 0x01
		if( motionCount > max ){
    18ec:	80 91 0c 02 	lds	r24, 0x020C
    18f0:	90 91 0d 02 	lds	r25, 0x020D
    18f4:	0f 90       	pop	r0
    18f6:	0f 90       	pop	r0
    18f8:	0f 90       	pop	r0
    18fa:	0f 90       	pop	r0
    18fc:	0f 90       	pop	r0
    18fe:	0f 90       	pop	r0
    1900:	28 17       	cp	r18, r24
    1902:	39 07       	cpc	r19, r25
    1904:	0c f0       	brlt	.+2      	; 0x1908 <move+0x68>
    1906:	7e c0       	rjmp	.+252    	; 0x1a04 <move+0x164>
        printf("### motionCount > max. motionCount:%d, max:%d\n", motionCount, max);
    1908:	3f 93       	push	r19
    190a:	2f 93       	push	r18
    190c:	9f 93       	push	r25
    190e:	8f 93       	push	r24
    1910:	83 e6       	ldi	r24, 0x63	; 99
    1912:	98 e0       	ldi	r25, 0x08	; 8
    1914:	9f 93       	push	r25
    1916:	8f 93       	push	r24
    1918:	82 d4       	rcall	.+2308   	; 0x221e <printf>
//			printf("#%d,%d,%d,%d,%d,%d;\n", diffmaxTest[0],diffmaxTest[1],diffmaxTest[2],diffmaxTest[3],diffmaxTest[4],diffmaxTest[5] );
			motionCount = 1;
    191a:	81 e0       	ldi	r24, 0x01	; 1
    191c:	90 e0       	ldi	r25, 0x00	; 0
    191e:	90 93 0d 02 	sts	0x020D, r25
    1922:	80 93 0c 02 	sts	0x020C, r24
			if( motionTimes < 99 && --motionTimes <= 0 ){
    1926:	80 91 88 0b 	lds	r24, 0x0B88
    192a:	90 91 89 0b 	lds	r25, 0x0B89
    192e:	0f 90       	pop	r0
    1930:	0f 90       	pop	r0
    1932:	0f 90       	pop	r0
    1934:	0f 90       	pop	r0
    1936:	0f 90       	pop	r0
    1938:	0f 90       	pop	r0
    193a:	83 36       	cpi	r24, 0x63	; 99
    193c:	91 05       	cpc	r25, r1
    193e:	0c f0       	brlt	.+2      	; 0x1942 <move+0xa2>
    1940:	61 c0       	rjmp	.+194    	; 0x1a04 <move+0x164>
    1942:	01 97       	sbiw	r24, 0x01	; 1
    1944:	90 93 89 0b 	sts	0x0B89, r25
    1948:	80 93 88 0b 	sts	0x0B88, r24
    194c:	18 16       	cp	r1, r24
    194e:	19 06       	cpc	r1, r25
    1950:	0c f4       	brge	.+2      	; 0x1954 <move+0xb4>
    1952:	58 c0       	rjmp	.+176    	; 0x1a04 <move+0x164>
				if( nextMotionTimes > 0 ){
    1954:	20 91 80 0b 	lds	r18, 0x0B80
    1958:	30 91 81 0b 	lds	r19, 0x0B81
    195c:	12 16       	cp	r1, r18
    195e:	13 06       	cpc	r1, r19
    1960:	0c f0       	brlt	.+2      	; 0x1964 <move+0xc4>
    1962:	4e c0       	rjmp	.+156    	; 0x1a00 <move+0x160>
					if( (nextMotionNumber == ACT_WALK1 || nextMotionNumber == ACT_WALK2) &&
    1964:	80 91 82 0b 	lds	r24, 0x0B82
    1968:	90 91 83 0b 	lds	r25, 0x0B83
    196c:	ac 01       	movw	r20, r24
    196e:	42 50       	subi	r20, 0x02	; 2
    1970:	51 09       	sbc	r21, r1
    1972:	42 30       	cpi	r20, 0x02	; 2
    1974:	51 05       	cpc	r21, r1
    1976:	90 f4       	brcc	.+36     	; 0x199c <move+0xfc>
    1978:	40 91 8a 0b 	lds	r20, 0x0B8A
    197c:	50 91 8b 0b 	lds	r21, 0x0B8B
    1980:	41 30       	cpi	r20, 0x01	; 1
    1982:	51 05       	cpc	r21, r1
    1984:	39 f1       	breq	.+78     	; 0x19d4 <move+0x134>
						motionNumber != ACT_PRE_WALK ){
						motionNumber = ACT_PRE_WALK;
    1986:	81 e0       	ldi	r24, 0x01	; 1
    1988:	90 e0       	ldi	r25, 0x00	; 0
    198a:	90 93 8b 0b 	sts	0x0B8B, r25
    198e:	80 93 8a 0b 	sts	0x0B8A, r24
						motionTimes = 1;
    1992:	90 93 89 0b 	sts	0x0B89, r25
    1996:	80 93 88 0b 	sts	0x0B88, r24
    199a:	28 c0       	rjmp	.+80     	; 0x19ec <move+0x14c>
					}else if( (motionNumber == ACT_TURN_LEFT && nextMotionNumber == ACT_TURN_RIGHT) ||
    199c:	40 91 8a 0b 	lds	r20, 0x0B8A
    19a0:	50 91 8b 0b 	lds	r21, 0x0B8B
    19a4:	44 30       	cpi	r20, 0x04	; 4
    19a6:	51 05       	cpc	r21, r1
    19a8:	21 f4       	brne	.+8      	; 0x19b2 <move+0x112>
    19aa:	85 30       	cpi	r24, 0x05	; 5
    19ac:	91 05       	cpc	r25, r1
    19ae:	91 f4       	brne	.+36     	; 0x19d4 <move+0x134>
    19b0:	06 c0       	rjmp	.+12     	; 0x19be <move+0x11e>
    19b2:	84 30       	cpi	r24, 0x04	; 4
    19b4:	91 05       	cpc	r25, r1
    19b6:	71 f4       	brne	.+28     	; 0x19d4 <move+0x134>
						(nextMotionNumber == ACT_TURN_LEFT && motionNumber == ACT_TURN_RIGHT) ){
    19b8:	45 30       	cpi	r20, 0x05	; 5
    19ba:	51 05       	cpc	r21, r1
    19bc:	59 f4       	brne	.+22     	; 0x19d4 <move+0x134>
						motionNumber = ACT_DEFAULT;
    19be:	10 92 8b 0b 	sts	0x0B8B, r1
    19c2:	10 92 8a 0b 	sts	0x0B8A, r1
						motionTimes = 1;
    19c6:	81 e0       	ldi	r24, 0x01	; 1
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	90 93 89 0b 	sts	0x0B89, r25
    19ce:	80 93 88 0b 	sts	0x0B88, r24
    19d2:	0c c0       	rjmp	.+24     	; 0x19ec <move+0x14c>
					}else{
						motionNumber = nextMotionNumber;
    19d4:	90 93 8b 0b 	sts	0x0B8B, r25
    19d8:	80 93 8a 0b 	sts	0x0B8A, r24
						motionTimes = nextMotionTimes;
    19dc:	30 93 89 0b 	sts	0x0B89, r19
    19e0:	20 93 88 0b 	sts	0x0B88, r18
						nextMotionTimes = 0;
    19e4:	10 92 81 0b 	sts	0x0B81, r1
    19e8:	10 92 80 0b 	sts	0x0B80, r1
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    19ec:	2f e5       	ldi	r18, 0x5F	; 95
    19ee:	8a ee       	ldi	r24, 0xEA	; 234
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	21 50       	subi	r18, 0x01	; 1
    19f4:	80 40       	sbci	r24, 0x00	; 0
    19f6:	90 40       	sbci	r25, 0x00	; 0
    19f8:	e1 f7       	brne	.-8      	; 0x19f2 <move+0x152>
    19fa:	00 c0       	rjmp	.+0      	; 0x19fc <move+0x15c>
    19fc:	00 00       	nop
    19fe:	25 c0       	rjmp	.+74     	; 0x1a4a <move+0x1aa>
					}
					_delay_ms(300);
				}else{
					stopMotion();
    1a00:	81 dc       	rcall	.-1790   	; 0x1304 <stopMotion>
    1a02:	23 c0       	rjmp	.+70     	; 0x1a4a <move+0x1aa>
				}
				return;
			}
		}
		printf("### motionCount:%d\n", motionCount);
    1a04:	80 91 0d 02 	lds	r24, 0x020D
    1a08:	8f 93       	push	r24
    1a0a:	80 91 0c 02 	lds	r24, 0x020C
    1a0e:	8f 93       	push	r24
    1a10:	82 e9       	ldi	r24, 0x92	; 146
    1a12:	98 e0       	ldi	r25, 0x08	; 8
    1a14:	9f 93       	push	r25
    1a16:	8f 93       	push	r24
    1a18:	02 d4       	rcall	.+2052   	; 0x221e <printf>
		ServoControl( motion[motionCount] );
    1a1a:	80 91 0c 02 	lds	r24, 0x020C
    1a1e:	90 91 0d 02 	lds	r25, 0x020D
    1a22:	88 0f       	add	r24, r24
    1a24:	99 1f       	adc	r25, r25
    1a26:	c8 0f       	add	r28, r24
    1a28:	d9 1f       	adc	r29, r25
    1a2a:	88 81       	ld	r24, Y
    1a2c:	99 81       	ldd	r25, Y+1	; 0x01
    1a2e:	2e dd       	rcall	.-1444   	; 0x148c <ServoControl>
		motionCount++;
    1a30:	80 91 0c 02 	lds	r24, 0x020C
    1a34:	90 91 0d 02 	lds	r25, 0x020D
    1a38:	01 96       	adiw	r24, 0x01	; 1
    1a3a:	90 93 0d 02 	sts	0x020D, r25
    1a3e:	80 93 0c 02 	sts	0x020C, r24
    1a42:	0f 90       	pop	r0
    1a44:	0f 90       	pop	r0
    1a46:	0f 90       	pop	r0
    1a48:	0f 90       	pop	r0
	}
}
    1a4a:	df 91       	pop	r29
    1a4c:	cf 91       	pop	r28
    1a4e:	08 95       	ret

00001a50 <main>:
	EVT_WATCH_DOG       = 10,
	EVT_MOTION_EDIT     = 11,
	EVT_MAX
	};

int main(void){
    1a50:	6f 92       	push	r6
    1a52:	7f 92       	push	r7
    1a54:	8f 92       	push	r8
    1a56:	9f 92       	push	r9
    1a58:	af 92       	push	r10
    1a5a:	bf 92       	push	r11
    1a5c:	cf 92       	push	r12
    1a5e:	df 92       	push	r13
    1a60:	ef 92       	push	r14
    1a62:	ff 92       	push	r15
    1a64:	0f 93       	push	r16
    1a66:	1f 93       	push	r17
    1a68:	cf 93       	push	r28
    1a6a:	df 93       	push	r29
	
	//Start Switch
	DDRA  = 0x00;
    1a6c:	11 b8       	out	0x01, r1	; 1
	PORTA = 0x12;
    1a6e:	82 e1       	ldi	r24, 0x12	; 18
    1a70:	82 b9       	out	0x02, r24	; 2
	//Start PORT A for switch and IR sensors
//	DDRA  = 0xFC;
//	PORTA = 0xFE;
	
	//LED Initial
	DDRC  = 0x7F;
    1a72:	8f e7       	ldi	r24, 0x7F	; 127
    1a74:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x7E;
    1a76:	8e e7       	ldi	r24, 0x7E	; 126
    1a78:	88 b9       	out	0x08, r24	; 8
	DDRD  = 0x70;
    1a7a:	80 e7       	ldi	r24, 0x70	; 112
    1a7c:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0x11;
    1a7e:	81 e1       	ldi	r24, 0x11	; 17
    1a80:	8b b9       	out	0x0b, r24	; 11

	MotorInit();
    1a82:	53 d9       	rcall	.-3418   	; 0xd2a <MotorInit>
	initSerial();
    1a84:	dd d8       	rcall	.-3654   	; 0xc40 <initSerial>
		setMode();
		
		if( checkSerialRead() > 0 ){
			readData = getReadBuffer();
			if( readData != NULL ){
				printf( "readData=%s\n", &readData[0] );
    1a86:	06 ea       	ldi	r16, 0xA6	; 166
    1a88:	18 e0       	ldi	r17, 0x08	; 8
				split( &readData[0] );
				switch( serCmd[0] ){
    1a8a:	c4 e9       	ldi	r28, 0x94	; 148
    1a8c:	db e0       	ldi	r29, 0x0B	; 11
				}
				if( isFinish > 0 ){
					MotorControl( 0, 0 );
					break;
				}
				memset( readData, 0x00, SERIAL_BUFFER_SIZE );
    1a8e:	0f 2e       	mov	r0, r31
    1a90:	f0 e5       	ldi	r31, 0x50	; 80
    1a92:	8f 2e       	mov	r8, r31
    1a94:	f0 2d       	mov	r31, r0
				case EVT_STOP_MOTION:
					stopMotion();
					sendAck(1);
					break;
				case EVT_FORCE_MOTION:
					forceMotion( serCmd[1], serCmd[2] );
    1a96:	0f 2e       	mov	r0, r31
    1a98:	f8 e9       	ldi	r31, 0x98	; 152
    1a9a:	cf 2e       	mov	r12, r31
    1a9c:	fb e0       	ldi	r31, 0x0B	; 11
    1a9e:	df 2e       	mov	r13, r31
    1aa0:	f0 2d       	mov	r31, r0
    1aa2:	0f 2e       	mov	r0, r31
    1aa4:	f6 e9       	ldi	r31, 0x96	; 150
    1aa6:	ef 2e       	mov	r14, r31
    1aa8:	fb e0       	ldi	r31, 0x0B	; 11
    1aaa:	ff 2e       	mov	r15, r31
    1aac:	f0 2d       	mov	r31, r0
//                    setSpeedTest( serCmd[1] );
					sendAck(1);
					break;
				case EVT_START_MOTION:
				    startMotion( serCmd[1], serCmd[2] );
					PORTC = ~(1 << (LED_MAX - 2));
    1aae:	0f 2e       	mov	r0, r31
    1ab0:	ff ed       	ldi	r31, 0xDF	; 223
    1ab2:	6f 2e       	mov	r6, r31
    1ab4:	f0 2d       	mov	r31, r0
					break;
				}
				memset( readData, 0x00, SERIAL_BUFFER_SIZE );
			}
		}
		memset( &serCmd[0], 0x00, sizeof(int) * SERIAL_BUFFER_SIZE );
    1ab6:	0f 2e       	mov	r0, r31
    1ab8:	f0 ea       	ldi	r31, 0xA0	; 160
    1aba:	9f 2e       	mov	r9, r31
    1abc:	f0 2d       	mov	r31, r0
		
		
		if (~PINA & SW_START ) {
			if( iStart > 0 ){
				iStart = 0;
				PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
    1abe:	0f 2e       	mov	r0, r31
    1ac0:	ff e7       	ldi	r31, 0x7F	; 127
    1ac2:	7f 2e       	mov	r7, r31
    1ac4:	f0 2d       	mov	r31, r0

//    sensorInit();
	while(1){
//        sensorTest();

		setMode();
    1ac6:	92 de       	rcall	.-732    	; 0x17ec <setMode>
		
		if( checkSerialRead() > 0 ){
    1ac8:	c2 d8       	rcall	.-3708   	; 0xc4e <checkSerialRead>
    1aca:	18 16       	cp	r1, r24
    1acc:	19 06       	cpc	r1, r25
    1ace:	0c f0       	brlt	.+2      	; 0x1ad2 <main+0x82>
    1ad0:	8c c0       	rjmp	.+280    	; 0x1bea <main+0x19a>
			readData = getReadBuffer();
    1ad2:	0d d9       	rcall	.-3558   	; 0xcee <getReadBuffer>
    1ad4:	5c 01       	movw	r10, r24
			if( readData != NULL ){
    1ad6:	00 97       	sbiw	r24, 0x00	; 0
    1ad8:	09 f4       	brne	.+2      	; 0x1adc <main+0x8c>
    1ada:	87 c0       	rjmp	.+270    	; 0x1bea <main+0x19a>
				printf( "readData=%s\n", &readData[0] );
    1adc:	bf 92       	push	r11
    1ade:	8f 93       	push	r24
    1ae0:	1f 93       	push	r17
    1ae2:	0f 93       	push	r16
    1ae4:	9c d3       	rcall	.+1848   	; 0x221e <printf>
				split( &readData[0] );
    1ae6:	c5 01       	movw	r24, r10
    1ae8:	44 d9       	rcall	.-3448   	; 0xd72 <split>
				switch( serCmd[0] ){
    1aea:	0f 90       	pop	r0
    1aec:	0f 90       	pop	r0
    1aee:	0f 90       	pop	r0
    1af0:	0f 90       	pop	r0
    1af2:	88 81       	ld	r24, Y
    1af4:	99 81       	ldd	r25, Y+1	; 0x01
    1af6:	86 30       	cpi	r24, 0x06	; 6
    1af8:	91 05       	cpc	r25, r1
    1afa:	09 f4       	brne	.+2      	; 0x1afe <main+0xae>
    1afc:	5c c0       	rjmp	.+184    	; 0x1bb6 <main+0x166>
    1afe:	94 f4       	brge	.+36     	; 0x1b24 <main+0xd4>
    1b00:	82 30       	cpi	r24, 0x02	; 2
    1b02:	91 05       	cpc	r25, r1
    1b04:	09 f4       	brne	.+2      	; 0x1b08 <main+0xb8>
    1b06:	44 c0       	rjmp	.+136    	; 0x1b90 <main+0x140>
    1b08:	34 f4       	brge	.+12     	; 0x1b16 <main+0xc6>
    1b0a:	00 97       	sbiw	r24, 0x00	; 0
    1b0c:	01 f1       	breq	.+64     	; 0x1b4e <main+0xfe>
    1b0e:	01 97       	sbiw	r24, 0x01	; 1
    1b10:	09 f4       	brne	.+2      	; 0x1b14 <main+0xc4>
    1b12:	40 c0       	rjmp	.+128    	; 0x1b94 <main+0x144>
    1b14:	62 c0       	rjmp	.+196    	; 0x1bda <main+0x18a>
    1b16:	84 30       	cpi	r24, 0x04	; 4
    1b18:	91 05       	cpc	r25, r1
    1b1a:	09 f4       	brne	.+2      	; 0x1b1e <main+0xce>
    1b1c:	48 c0       	rjmp	.+144    	; 0x1bae <main+0x15e>
    1b1e:	0c f4       	brge	.+2      	; 0x1b22 <main+0xd2>
    1b20:	3a c0       	rjmp	.+116    	; 0x1b96 <main+0x146>
    1b22:	47 c0       	rjmp	.+142    	; 0x1bb2 <main+0x162>
    1b24:	89 30       	cpi	r24, 0x09	; 9
    1b26:	91 05       	cpc	r25, r1
    1b28:	59 f1       	breq	.+86     	; 0x1b80 <main+0x130>
    1b2a:	34 f4       	brge	.+12     	; 0x1b38 <main+0xe8>
    1b2c:	87 30       	cpi	r24, 0x07	; 7
    1b2e:	91 05       	cpc	r25, r1
    1b30:	b1 f0       	breq	.+44     	; 0x1b5e <main+0x10e>
    1b32:	08 97       	sbiw	r24, 0x08	; 8
    1b34:	01 f1       	breq	.+64     	; 0x1b76 <main+0x126>
    1b36:	51 c0       	rjmp	.+162    	; 0x1bda <main+0x18a>
    1b38:	8b 30       	cpi	r24, 0x0B	; 11
    1b3a:	91 05       	cpc	r25, r1
    1b3c:	09 f4       	brne	.+2      	; 0x1b40 <main+0xf0>
    1b3e:	50 c0       	rjmp	.+160    	; 0x1be0 <main+0x190>
    1b40:	0c f4       	brge	.+2      	; 0x1b44 <main+0xf4>
    1b42:	42 c0       	rjmp	.+132    	; 0x1bc8 <main+0x178>
    1b44:	87 3e       	cpi	r24, 0xE7	; 231
    1b46:	93 40       	sbci	r25, 0x03	; 3
    1b48:	09 f4       	brne	.+2      	; 0x1b4c <main+0xfc>
    1b4a:	9c c0       	rjmp	.+312    	; 0x1c84 <main+0x234>
    1b4c:	46 c0       	rjmp	.+140    	; 0x1bda <main+0x18a>
				case EVT_ACTION:
					ServoControl( serCmd[1] );
    1b4e:	f7 01       	movw	r30, r14
    1b50:	80 81       	ld	r24, Z
    1b52:	91 81       	ldd	r25, Z+1	; 0x01
    1b54:	9b dc       	rcall	.-1738   	; 0x148c <ServoControl>
//                    setSpeedTest( serCmd[1] );
					sendAck(1);
    1b56:	81 e0       	ldi	r24, 0x01	; 1
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	da d8       	rcall	.-3660   	; 0xd10 <sendAck>
					break;
    1b5c:	41 c0       	rjmp	.+130    	; 0x1be0 <main+0x190>
				case EVT_START_MOTION:
				    startMotion( serCmd[1], serCmd[2] );
    1b5e:	f6 01       	movw	r30, r12
    1b60:	60 81       	ld	r22, Z
    1b62:	71 81       	ldd	r23, Z+1	; 0x01
    1b64:	f7 01       	movw	r30, r14
    1b66:	80 81       	ld	r24, Z
    1b68:	91 81       	ldd	r25, Z+1	; 0x01
    1b6a:	41 db       	rcall	.-2430   	; 0x11ee <startMotion>
					PORTC = ~(1 << (LED_MAX - 2));
    1b6c:	68 b8       	out	0x08, r6	; 8
					sendAck(1);
    1b6e:	81 e0       	ldi	r24, 0x01	; 1
    1b70:	90 e0       	ldi	r25, 0x00	; 0
    1b72:	ce d8       	rcall	.-3684   	; 0xd10 <sendAck>
					break;
    1b74:	35 c0       	rjmp	.+106    	; 0x1be0 <main+0x190>
				case EVT_STOP_MOTION:
					stopMotion();
    1b76:	c6 db       	rcall	.-2164   	; 0x1304 <stopMotion>
					sendAck(1);
    1b78:	81 e0       	ldi	r24, 0x01	; 1
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	c9 d8       	rcall	.-3694   	; 0xd10 <sendAck>
					break;
    1b7e:	30 c0       	rjmp	.+96     	; 0x1be0 <main+0x190>
				case EVT_FORCE_MOTION:
					forceMotion( serCmd[1], serCmd[2] );
    1b80:	f6 01       	movw	r30, r12
    1b82:	60 81       	ld	r22, Z
    1b84:	71 81       	ldd	r23, Z+1	; 0x01
    1b86:	f7 01       	movw	r30, r14
    1b88:	80 81       	ld	r24, Z
    1b8a:	91 81       	ldd	r25, Z+1	; 0x01
    1b8c:	a4 db       	rcall	.-2232   	; 0x12d6 <forceMotion>
					break;
    1b8e:	28 c0       	rjmp	.+80     	; 0x1be0 <main+0x190>
				case EVT_GET_NOW_ANGLE:
					getAngle();
    1b90:	57 d9       	rcall	.-3410   	; 0xe40 <getAngle>
					break;
    1b92:	26 c0       	rjmp	.+76     	; 0x1be0 <main+0x190>
				case EVT_SET_ANGLE:
					setAngle();
    1b94:	35 d9       	rcall	.-3478   	; 0xe00 <setAngle>
				case EVT_GET_ACT_ANGLE:
				    if( serCmd[1] >= ACT_MAX ){
    1b96:	f7 01       	movw	r30, r14
    1b98:	80 81       	ld	r24, Z
    1b9a:	91 81       	ldd	r25, Z+1	; 0x01
    1b9c:	82 33       	cpi	r24, 0x32	; 50
    1b9e:	91 05       	cpc	r25, r1
    1ba0:	24 f0       	brlt	.+8      	; 0x1baa <main+0x15a>
					    sendAck(0);
    1ba2:	80 e0       	ldi	r24, 0x00	; 0
    1ba4:	90 e0       	ldi	r25, 0x00	; 0
    1ba6:	b4 d8       	rcall	.-3736   	; 0xd10 <sendAck>
    1ba8:	1b c0       	rjmp	.+54     	; 0x1be0 <main+0x190>
					}else{
						sendActAngle(serCmd[1]);
    1baa:	c5 d9       	rcall	.-3190   	; 0xf36 <sendActAngle>
    1bac:	19 c0       	rjmp	.+50     	; 0x1be0 <main+0x190>
					}
					break;
				case EVT_GET_LOAD:
					getLoad();
    1bae:	28 da       	rcall	.-2992   	; 0x1000 <getLoad>
//					printf( "%d\n", movingTime );
					break;
    1bb0:	17 c0       	rjmp	.+46     	; 0x1be0 <main+0x190>
				case EVT_GET_VOLTAGE:
					getVoltage();
    1bb2:	a1 da       	rcall	.-2750   	; 0x10f6 <getVoltage>
					break;
    1bb4:	15 c0       	rjmp	.+42     	; 0x1be0 <main+0x190>
				case EVT_TORQUE_DISABLE:
					dxl_write_byte( BROADCAST_ID, P_TORQUE_ENABLE, 0 );
    1bb6:	40 e0       	ldi	r20, 0x00	; 0
    1bb8:	50 e0       	ldi	r21, 0x00	; 0
    1bba:	68 e1       	ldi	r22, 0x18	; 24
    1bbc:	70 e0       	ldi	r23, 0x00	; 0
    1bbe:	8e ef       	ldi	r24, 0xFE	; 254
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	0e 94 33 02 	call	0x466	; 0x466 <dxl_write_byte>
					break;
    1bc6:	0c c0       	rjmp	.+24     	; 0x1be0 <main+0x190>
				case EVT_WATCH_DOG:
					watchDogCnt = 0;
    1bc8:	10 92 7c 0b 	sts	0x0B7C, r1
    1bcc:	10 92 7d 0b 	sts	0x0B7D, r1
    1bd0:	10 92 7e 0b 	sts	0x0B7E, r1
    1bd4:	10 92 7f 0b 	sts	0x0B7F, r1
					break;
    1bd8:	03 c0       	rjmp	.+6      	; 0x1be0 <main+0x190>
//					printf( "finish\n");
					sendAck(999);
					isFinish = 1;
					break;
				default:
					sendAck(0);
    1bda:	80 e0       	ldi	r24, 0x00	; 0
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	98 d8       	rcall	.-3792   	; 0xd10 <sendAck>
				}
				if( isFinish > 0 ){
					MotorControl( 0, 0 );
					break;
				}
				memset( readData, 0x00, SERIAL_BUFFER_SIZE );
    1be0:	f5 01       	movw	r30, r10
    1be2:	28 2d       	mov	r18, r8
    1be4:	11 92       	st	Z+, r1
    1be6:	2a 95       	dec	r18
    1be8:	e9 f7       	brne	.-6      	; 0x1be4 <main+0x194>
			}
		}
		memset( &serCmd[0], 0x00, sizeof(int) * SERIAL_BUFFER_SIZE );
    1bea:	fe 01       	movw	r30, r28
    1bec:	29 2d       	mov	r18, r9
    1bee:	11 92       	st	Z+, r1
    1bf0:	2a 95       	dec	r18
    1bf2:	e9 f7       	brne	.-6      	; 0x1bee <main+0x19e>
		
		
		
		if (~PINA & SW_START ) {
    1bf4:	01 99       	sbic	0x00, 1	; 0
    1bf6:	10 c0       	rjmp	.+32     	; 0x1c18 <main+0x1c8>
			if( iStart > 0 ){
    1bf8:	80 91 08 02 	lds	r24, 0x0208
    1bfc:	90 91 09 02 	lds	r25, 0x0209
    1c00:	18 16       	cp	r1, r24
    1c02:	19 06       	cpc	r1, r25
    1c04:	2c f5       	brge	.+74     	; 0x1c50 <main+0x200>
				iStart = 0;
    1c06:	10 92 09 02 	sts	0x0209, r1
    1c0a:	10 92 08 02 	sts	0x0208, r1
				PORTC = LED_BAT|LED_TxD|LED_RxD|LED_AUX|LED_MANAGE|LED_PROGRAM|LED_PLAY;
    1c0e:	78 b8       	out	0x08, r7	; 8
				ServoControl( 0 );
    1c10:	80 e0       	ldi	r24, 0x00	; 0
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	3b dc       	rcall	.-1930   	; 0x148c <ServoControl>
    1c16:	1c c0       	rjmp	.+56     	; 0x1c50 <main+0x200>
			}
		}else{
			if( iStart == 0 ){
    1c18:	80 91 08 02 	lds	r24, 0x0208
    1c1c:	90 91 09 02 	lds	r25, 0x0209
    1c20:	89 2b       	or	r24, r25
    1c22:	39 f4       	brne	.+14     	; 0x1c32 <main+0x1e2>
				PORTC &= ~LED_PLAY;
    1c24:	46 98       	cbi	0x08, 6	; 8
				iStart = 1;
    1c26:	81 e0       	ldi	r24, 0x01	; 1
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	90 93 09 02 	sts	0x0209, r25
    1c2e:	80 93 08 02 	sts	0x0208, r24
			}
			if( modeWait <= 0 ){
    1c32:	80 91 8e 0b 	lds	r24, 0x0B8E
    1c36:	90 91 8f 0b 	lds	r25, 0x0B8F
    1c3a:	18 16       	cp	r1, r24
    1c3c:	19 06       	cpc	r1, r25
    1c3e:	1c f0       	brlt	.+6      	; 0x1c46 <main+0x1f6>
				setModeAction();
    1c40:	f1 da       	rcall	.-2590   	; 0x1224 <setModeAction>
				move();
    1c42:	2e de       	rcall	.-932    	; 0x18a0 <move>
    1c44:	05 c0       	rjmp	.+10     	; 0x1c50 <main+0x200>
			}else{
				modeWait -= MAIN_DELAY;
    1c46:	0a 97       	sbiw	r24, 0x0a	; 10
    1c48:	90 93 8f 0b 	sts	0x0B8F, r25
    1c4c:	80 93 8e 0b 	sts	0x0B8E, r24
    1c50:	83 ec       	ldi	r24, 0xC3	; 195
    1c52:	99 e0       	ldi	r25, 0x09	; 9
    1c54:	01 97       	sbiw	r24, 0x01	; 1
    1c56:	f1 f7       	brne	.-4      	; 0x1c54 <main+0x204>
    1c58:	00 c0       	rjmp	.+0      	; 0x1c5a <main+0x20a>
    1c5a:	00 00       	nop
			}
		}
		_delay_ms(MAIN_DELAY);
		watchDogCnt++;
    1c5c:	80 91 7c 0b 	lds	r24, 0x0B7C
    1c60:	90 91 7d 0b 	lds	r25, 0x0B7D
    1c64:	a0 91 7e 0b 	lds	r26, 0x0B7E
    1c68:	b0 91 7f 0b 	lds	r27, 0x0B7F
    1c6c:	01 96       	adiw	r24, 0x01	; 1
    1c6e:	a1 1d       	adc	r26, r1
    1c70:	b1 1d       	adc	r27, r1
    1c72:	80 93 7c 0b 	sts	0x0B7C, r24
    1c76:	90 93 7d 0b 	sts	0x0B7D, r25
    1c7a:	a0 93 7e 0b 	sts	0x0B7E, r26
    1c7e:	b0 93 7f 0b 	sts	0x0B7F, r27
	}
    1c82:	21 cf       	rjmp	.-446    	; 0x1ac6 <main+0x76>
					break;
				case EVT_MOTION_EDIT:
					break;
				case 999:
//					printf( "finish\n");
					sendAck(999);
    1c84:	87 ee       	ldi	r24, 0xE7	; 231
    1c86:	93 e0       	ldi	r25, 0x03	; 3
    1c88:	43 d8       	rcall	.-3962   	; 0xd10 <sendAck>
					break;
				default:
					sendAck(0);
				}
				if( isFinish > 0 ){
					MotorControl( 0, 0 );
    1c8a:	60 e0       	ldi	r22, 0x00	; 0
    1c8c:	70 e0       	ldi	r23, 0x00	; 0
    1c8e:	80 e0       	ldi	r24, 0x00	; 0
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	ba db       	rcall	.-2188   	; 0x1408 <MotorControl>
			}
		}
		_delay_ms(MAIN_DELAY);
		watchDogCnt++;
	}
}
    1c94:	80 e0       	ldi	r24, 0x00	; 0
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	df 91       	pop	r29
    1c9a:	cf 91       	pop	r28
    1c9c:	1f 91       	pop	r17
    1c9e:	0f 91       	pop	r16
    1ca0:	ff 90       	pop	r15
    1ca2:	ef 90       	pop	r14
    1ca4:	df 90       	pop	r13
    1ca6:	cf 90       	pop	r12
    1ca8:	bf 90       	pop	r11
    1caa:	af 90       	pop	r10
    1cac:	9f 90       	pop	r9
    1cae:	8f 90       	pop	r8
    1cb0:	7f 90       	pop	r7
    1cb2:	6f 90       	pop	r6
    1cb4:	08 95       	ret

00001cb6 <__divsf3>:
    1cb6:	0c d0       	rcall	.+24     	; 0x1cd0 <__divsf3x>
    1cb8:	eb c0       	rjmp	.+470    	; 0x1e90 <__fp_round>
    1cba:	e3 d0       	rcall	.+454    	; 0x1e82 <__fp_pscB>
    1cbc:	40 f0       	brcs	.+16     	; 0x1cce <__divsf3+0x18>
    1cbe:	da d0       	rcall	.+436    	; 0x1e74 <__fp_pscA>
    1cc0:	30 f0       	brcs	.+12     	; 0x1cce <__divsf3+0x18>
    1cc2:	21 f4       	brne	.+8      	; 0x1ccc <__divsf3+0x16>
    1cc4:	5f 3f       	cpi	r21, 0xFF	; 255
    1cc6:	19 f0       	breq	.+6      	; 0x1cce <__divsf3+0x18>
    1cc8:	cc c0       	rjmp	.+408    	; 0x1e62 <__fp_inf>
    1cca:	51 11       	cpse	r21, r1
    1ccc:	15 c1       	rjmp	.+554    	; 0x1ef8 <__fp_szero>
    1cce:	cf c0       	rjmp	.+414    	; 0x1e6e <__fp_nan>

00001cd0 <__divsf3x>:
    1cd0:	f0 d0       	rcall	.+480    	; 0x1eb2 <__fp_split3>
    1cd2:	98 f3       	brcs	.-26     	; 0x1cba <__divsf3+0x4>

00001cd4 <__divsf3_pse>:
    1cd4:	99 23       	and	r25, r25
    1cd6:	c9 f3       	breq	.-14     	; 0x1cca <__divsf3+0x14>
    1cd8:	55 23       	and	r21, r21
    1cda:	b1 f3       	breq	.-20     	; 0x1cc8 <__divsf3+0x12>
    1cdc:	95 1b       	sub	r25, r21
    1cde:	55 0b       	sbc	r21, r21
    1ce0:	bb 27       	eor	r27, r27
    1ce2:	aa 27       	eor	r26, r26
    1ce4:	62 17       	cp	r22, r18
    1ce6:	73 07       	cpc	r23, r19
    1ce8:	84 07       	cpc	r24, r20
    1cea:	38 f0       	brcs	.+14     	; 0x1cfa <__divsf3_pse+0x26>
    1cec:	9f 5f       	subi	r25, 0xFF	; 255
    1cee:	5f 4f       	sbci	r21, 0xFF	; 255
    1cf0:	22 0f       	add	r18, r18
    1cf2:	33 1f       	adc	r19, r19
    1cf4:	44 1f       	adc	r20, r20
    1cf6:	aa 1f       	adc	r26, r26
    1cf8:	a9 f3       	breq	.-22     	; 0x1ce4 <__divsf3_pse+0x10>
    1cfa:	33 d0       	rcall	.+102    	; 0x1d62 <__divsf3_pse+0x8e>
    1cfc:	0e 2e       	mov	r0, r30
    1cfe:	3a f0       	brmi	.+14     	; 0x1d0e <__divsf3_pse+0x3a>
    1d00:	e0 e8       	ldi	r30, 0x80	; 128
    1d02:	30 d0       	rcall	.+96     	; 0x1d64 <__divsf3_pse+0x90>
    1d04:	91 50       	subi	r25, 0x01	; 1
    1d06:	50 40       	sbci	r21, 0x00	; 0
    1d08:	e6 95       	lsr	r30
    1d0a:	00 1c       	adc	r0, r0
    1d0c:	ca f7       	brpl	.-14     	; 0x1d00 <__divsf3_pse+0x2c>
    1d0e:	29 d0       	rcall	.+82     	; 0x1d62 <__divsf3_pse+0x8e>
    1d10:	fe 2f       	mov	r31, r30
    1d12:	27 d0       	rcall	.+78     	; 0x1d62 <__divsf3_pse+0x8e>
    1d14:	66 0f       	add	r22, r22
    1d16:	77 1f       	adc	r23, r23
    1d18:	88 1f       	adc	r24, r24
    1d1a:	bb 1f       	adc	r27, r27
    1d1c:	26 17       	cp	r18, r22
    1d1e:	37 07       	cpc	r19, r23
    1d20:	48 07       	cpc	r20, r24
    1d22:	ab 07       	cpc	r26, r27
    1d24:	b0 e8       	ldi	r27, 0x80	; 128
    1d26:	09 f0       	breq	.+2      	; 0x1d2a <__divsf3_pse+0x56>
    1d28:	bb 0b       	sbc	r27, r27
    1d2a:	80 2d       	mov	r24, r0
    1d2c:	bf 01       	movw	r22, r30
    1d2e:	ff 27       	eor	r31, r31
    1d30:	93 58       	subi	r25, 0x83	; 131
    1d32:	5f 4f       	sbci	r21, 0xFF	; 255
    1d34:	2a f0       	brmi	.+10     	; 0x1d40 <__divsf3_pse+0x6c>
    1d36:	9e 3f       	cpi	r25, 0xFE	; 254
    1d38:	51 05       	cpc	r21, r1
    1d3a:	68 f0       	brcs	.+26     	; 0x1d56 <__divsf3_pse+0x82>
    1d3c:	92 c0       	rjmp	.+292    	; 0x1e62 <__fp_inf>
    1d3e:	dc c0       	rjmp	.+440    	; 0x1ef8 <__fp_szero>
    1d40:	5f 3f       	cpi	r21, 0xFF	; 255
    1d42:	ec f3       	brlt	.-6      	; 0x1d3e <__divsf3_pse+0x6a>
    1d44:	98 3e       	cpi	r25, 0xE8	; 232
    1d46:	dc f3       	brlt	.-10     	; 0x1d3e <__divsf3_pse+0x6a>
    1d48:	86 95       	lsr	r24
    1d4a:	77 95       	ror	r23
    1d4c:	67 95       	ror	r22
    1d4e:	b7 95       	ror	r27
    1d50:	f7 95       	ror	r31
    1d52:	9f 5f       	subi	r25, 0xFF	; 255
    1d54:	c9 f7       	brne	.-14     	; 0x1d48 <__divsf3_pse+0x74>
    1d56:	88 0f       	add	r24, r24
    1d58:	91 1d       	adc	r25, r1
    1d5a:	96 95       	lsr	r25
    1d5c:	87 95       	ror	r24
    1d5e:	97 f9       	bld	r25, 7
    1d60:	08 95       	ret
    1d62:	e1 e0       	ldi	r30, 0x01	; 1
    1d64:	66 0f       	add	r22, r22
    1d66:	77 1f       	adc	r23, r23
    1d68:	88 1f       	adc	r24, r24
    1d6a:	bb 1f       	adc	r27, r27
    1d6c:	62 17       	cp	r22, r18
    1d6e:	73 07       	cpc	r23, r19
    1d70:	84 07       	cpc	r24, r20
    1d72:	ba 07       	cpc	r27, r26
    1d74:	20 f0       	brcs	.+8      	; 0x1d7e <__divsf3_pse+0xaa>
    1d76:	62 1b       	sub	r22, r18
    1d78:	73 0b       	sbc	r23, r19
    1d7a:	84 0b       	sbc	r24, r20
    1d7c:	ba 0b       	sbc	r27, r26
    1d7e:	ee 1f       	adc	r30, r30
    1d80:	88 f7       	brcc	.-30     	; 0x1d64 <__divsf3_pse+0x90>
    1d82:	e0 95       	com	r30
    1d84:	08 95       	ret

00001d86 <__fixsfsi>:
    1d86:	04 d0       	rcall	.+8      	; 0x1d90 <__fixunssfsi>
    1d88:	68 94       	set
    1d8a:	b1 11       	cpse	r27, r1
    1d8c:	b5 c0       	rjmp	.+362    	; 0x1ef8 <__fp_szero>
    1d8e:	08 95       	ret

00001d90 <__fixunssfsi>:
    1d90:	98 d0       	rcall	.+304    	; 0x1ec2 <__fp_splitA>
    1d92:	88 f0       	brcs	.+34     	; 0x1db6 <__fixunssfsi+0x26>
    1d94:	9f 57       	subi	r25, 0x7F	; 127
    1d96:	90 f0       	brcs	.+36     	; 0x1dbc <__fixunssfsi+0x2c>
    1d98:	b9 2f       	mov	r27, r25
    1d9a:	99 27       	eor	r25, r25
    1d9c:	b7 51       	subi	r27, 0x17	; 23
    1d9e:	a0 f0       	brcs	.+40     	; 0x1dc8 <__fixunssfsi+0x38>
    1da0:	d1 f0       	breq	.+52     	; 0x1dd6 <__fixunssfsi+0x46>
    1da2:	66 0f       	add	r22, r22
    1da4:	77 1f       	adc	r23, r23
    1da6:	88 1f       	adc	r24, r24
    1da8:	99 1f       	adc	r25, r25
    1daa:	1a f0       	brmi	.+6      	; 0x1db2 <__fixunssfsi+0x22>
    1dac:	ba 95       	dec	r27
    1dae:	c9 f7       	brne	.-14     	; 0x1da2 <__fixunssfsi+0x12>
    1db0:	12 c0       	rjmp	.+36     	; 0x1dd6 <__fixunssfsi+0x46>
    1db2:	b1 30       	cpi	r27, 0x01	; 1
    1db4:	81 f0       	breq	.+32     	; 0x1dd6 <__fixunssfsi+0x46>
    1db6:	9f d0       	rcall	.+318    	; 0x1ef6 <__fp_zero>
    1db8:	b1 e0       	ldi	r27, 0x01	; 1
    1dba:	08 95       	ret
    1dbc:	9c c0       	rjmp	.+312    	; 0x1ef6 <__fp_zero>
    1dbe:	67 2f       	mov	r22, r23
    1dc0:	78 2f       	mov	r23, r24
    1dc2:	88 27       	eor	r24, r24
    1dc4:	b8 5f       	subi	r27, 0xF8	; 248
    1dc6:	39 f0       	breq	.+14     	; 0x1dd6 <__fixunssfsi+0x46>
    1dc8:	b9 3f       	cpi	r27, 0xF9	; 249
    1dca:	cc f3       	brlt	.-14     	; 0x1dbe <__fixunssfsi+0x2e>
    1dcc:	86 95       	lsr	r24
    1dce:	77 95       	ror	r23
    1dd0:	67 95       	ror	r22
    1dd2:	b3 95       	inc	r27
    1dd4:	d9 f7       	brne	.-10     	; 0x1dcc <__fixunssfsi+0x3c>
    1dd6:	3e f4       	brtc	.+14     	; 0x1de6 <__fixunssfsi+0x56>
    1dd8:	90 95       	com	r25
    1dda:	80 95       	com	r24
    1ddc:	70 95       	com	r23
    1dde:	61 95       	neg	r22
    1de0:	7f 4f       	sbci	r23, 0xFF	; 255
    1de2:	8f 4f       	sbci	r24, 0xFF	; 255
    1de4:	9f 4f       	sbci	r25, 0xFF	; 255
    1de6:	08 95       	ret

00001de8 <__floatunsisf>:
    1de8:	e8 94       	clt
    1dea:	09 c0       	rjmp	.+18     	; 0x1dfe <__floatsisf+0x12>

00001dec <__floatsisf>:
    1dec:	97 fb       	bst	r25, 7
    1dee:	3e f4       	brtc	.+14     	; 0x1dfe <__floatsisf+0x12>
    1df0:	90 95       	com	r25
    1df2:	80 95       	com	r24
    1df4:	70 95       	com	r23
    1df6:	61 95       	neg	r22
    1df8:	7f 4f       	sbci	r23, 0xFF	; 255
    1dfa:	8f 4f       	sbci	r24, 0xFF	; 255
    1dfc:	9f 4f       	sbci	r25, 0xFF	; 255
    1dfe:	99 23       	and	r25, r25
    1e00:	a9 f0       	breq	.+42     	; 0x1e2c <__floatsisf+0x40>
    1e02:	f9 2f       	mov	r31, r25
    1e04:	96 e9       	ldi	r25, 0x96	; 150
    1e06:	bb 27       	eor	r27, r27
    1e08:	93 95       	inc	r25
    1e0a:	f6 95       	lsr	r31
    1e0c:	87 95       	ror	r24
    1e0e:	77 95       	ror	r23
    1e10:	67 95       	ror	r22
    1e12:	b7 95       	ror	r27
    1e14:	f1 11       	cpse	r31, r1
    1e16:	f8 cf       	rjmp	.-16     	; 0x1e08 <__floatsisf+0x1c>
    1e18:	fa f4       	brpl	.+62     	; 0x1e58 <__floatsisf+0x6c>
    1e1a:	bb 0f       	add	r27, r27
    1e1c:	11 f4       	brne	.+4      	; 0x1e22 <__floatsisf+0x36>
    1e1e:	60 ff       	sbrs	r22, 0
    1e20:	1b c0       	rjmp	.+54     	; 0x1e58 <__floatsisf+0x6c>
    1e22:	6f 5f       	subi	r22, 0xFF	; 255
    1e24:	7f 4f       	sbci	r23, 0xFF	; 255
    1e26:	8f 4f       	sbci	r24, 0xFF	; 255
    1e28:	9f 4f       	sbci	r25, 0xFF	; 255
    1e2a:	16 c0       	rjmp	.+44     	; 0x1e58 <__floatsisf+0x6c>
    1e2c:	88 23       	and	r24, r24
    1e2e:	11 f0       	breq	.+4      	; 0x1e34 <__floatsisf+0x48>
    1e30:	96 e9       	ldi	r25, 0x96	; 150
    1e32:	11 c0       	rjmp	.+34     	; 0x1e56 <__floatsisf+0x6a>
    1e34:	77 23       	and	r23, r23
    1e36:	21 f0       	breq	.+8      	; 0x1e40 <__floatsisf+0x54>
    1e38:	9e e8       	ldi	r25, 0x8E	; 142
    1e3a:	87 2f       	mov	r24, r23
    1e3c:	76 2f       	mov	r23, r22
    1e3e:	05 c0       	rjmp	.+10     	; 0x1e4a <__floatsisf+0x5e>
    1e40:	66 23       	and	r22, r22
    1e42:	71 f0       	breq	.+28     	; 0x1e60 <__floatsisf+0x74>
    1e44:	96 e8       	ldi	r25, 0x86	; 134
    1e46:	86 2f       	mov	r24, r22
    1e48:	70 e0       	ldi	r23, 0x00	; 0
    1e4a:	60 e0       	ldi	r22, 0x00	; 0
    1e4c:	2a f0       	brmi	.+10     	; 0x1e58 <__floatsisf+0x6c>
    1e4e:	9a 95       	dec	r25
    1e50:	66 0f       	add	r22, r22
    1e52:	77 1f       	adc	r23, r23
    1e54:	88 1f       	adc	r24, r24
    1e56:	da f7       	brpl	.-10     	; 0x1e4e <__floatsisf+0x62>
    1e58:	88 0f       	add	r24, r24
    1e5a:	96 95       	lsr	r25
    1e5c:	87 95       	ror	r24
    1e5e:	97 f9       	bld	r25, 7
    1e60:	08 95       	ret

00001e62 <__fp_inf>:
    1e62:	97 f9       	bld	r25, 7
    1e64:	9f 67       	ori	r25, 0x7F	; 127
    1e66:	80 e8       	ldi	r24, 0x80	; 128
    1e68:	70 e0       	ldi	r23, 0x00	; 0
    1e6a:	60 e0       	ldi	r22, 0x00	; 0
    1e6c:	08 95       	ret

00001e6e <__fp_nan>:
    1e6e:	9f ef       	ldi	r25, 0xFF	; 255
    1e70:	80 ec       	ldi	r24, 0xC0	; 192
    1e72:	08 95       	ret

00001e74 <__fp_pscA>:
    1e74:	00 24       	eor	r0, r0
    1e76:	0a 94       	dec	r0
    1e78:	16 16       	cp	r1, r22
    1e7a:	17 06       	cpc	r1, r23
    1e7c:	18 06       	cpc	r1, r24
    1e7e:	09 06       	cpc	r0, r25
    1e80:	08 95       	ret

00001e82 <__fp_pscB>:
    1e82:	00 24       	eor	r0, r0
    1e84:	0a 94       	dec	r0
    1e86:	12 16       	cp	r1, r18
    1e88:	13 06       	cpc	r1, r19
    1e8a:	14 06       	cpc	r1, r20
    1e8c:	05 06       	cpc	r0, r21
    1e8e:	08 95       	ret

00001e90 <__fp_round>:
    1e90:	09 2e       	mov	r0, r25
    1e92:	03 94       	inc	r0
    1e94:	00 0c       	add	r0, r0
    1e96:	11 f4       	brne	.+4      	; 0x1e9c <__fp_round+0xc>
    1e98:	88 23       	and	r24, r24
    1e9a:	52 f0       	brmi	.+20     	; 0x1eb0 <__fp_round+0x20>
    1e9c:	bb 0f       	add	r27, r27
    1e9e:	40 f4       	brcc	.+16     	; 0x1eb0 <__fp_round+0x20>
    1ea0:	bf 2b       	or	r27, r31
    1ea2:	11 f4       	brne	.+4      	; 0x1ea8 <__fp_round+0x18>
    1ea4:	60 ff       	sbrs	r22, 0
    1ea6:	04 c0       	rjmp	.+8      	; 0x1eb0 <__fp_round+0x20>
    1ea8:	6f 5f       	subi	r22, 0xFF	; 255
    1eaa:	7f 4f       	sbci	r23, 0xFF	; 255
    1eac:	8f 4f       	sbci	r24, 0xFF	; 255
    1eae:	9f 4f       	sbci	r25, 0xFF	; 255
    1eb0:	08 95       	ret

00001eb2 <__fp_split3>:
    1eb2:	57 fd       	sbrc	r21, 7
    1eb4:	90 58       	subi	r25, 0x80	; 128
    1eb6:	44 0f       	add	r20, r20
    1eb8:	55 1f       	adc	r21, r21
    1eba:	59 f0       	breq	.+22     	; 0x1ed2 <__fp_splitA+0x10>
    1ebc:	5f 3f       	cpi	r21, 0xFF	; 255
    1ebe:	71 f0       	breq	.+28     	; 0x1edc <__fp_splitA+0x1a>
    1ec0:	47 95       	ror	r20

00001ec2 <__fp_splitA>:
    1ec2:	88 0f       	add	r24, r24
    1ec4:	97 fb       	bst	r25, 7
    1ec6:	99 1f       	adc	r25, r25
    1ec8:	61 f0       	breq	.+24     	; 0x1ee2 <__fp_splitA+0x20>
    1eca:	9f 3f       	cpi	r25, 0xFF	; 255
    1ecc:	79 f0       	breq	.+30     	; 0x1eec <__fp_splitA+0x2a>
    1ece:	87 95       	ror	r24
    1ed0:	08 95       	ret
    1ed2:	12 16       	cp	r1, r18
    1ed4:	13 06       	cpc	r1, r19
    1ed6:	14 06       	cpc	r1, r20
    1ed8:	55 1f       	adc	r21, r21
    1eda:	f2 cf       	rjmp	.-28     	; 0x1ec0 <__fp_split3+0xe>
    1edc:	46 95       	lsr	r20
    1ede:	f1 df       	rcall	.-30     	; 0x1ec2 <__fp_splitA>
    1ee0:	08 c0       	rjmp	.+16     	; 0x1ef2 <__fp_splitA+0x30>
    1ee2:	16 16       	cp	r1, r22
    1ee4:	17 06       	cpc	r1, r23
    1ee6:	18 06       	cpc	r1, r24
    1ee8:	99 1f       	adc	r25, r25
    1eea:	f1 cf       	rjmp	.-30     	; 0x1ece <__fp_splitA+0xc>
    1eec:	86 95       	lsr	r24
    1eee:	71 05       	cpc	r23, r1
    1ef0:	61 05       	cpc	r22, r1
    1ef2:	08 94       	sec
    1ef4:	08 95       	ret

00001ef6 <__fp_zero>:
    1ef6:	e8 94       	clt

00001ef8 <__fp_szero>:
    1ef8:	bb 27       	eor	r27, r27
    1efa:	66 27       	eor	r22, r22
    1efc:	77 27       	eor	r23, r23
    1efe:	cb 01       	movw	r24, r22
    1f00:	97 f9       	bld	r25, 7
    1f02:	08 95       	ret

00001f04 <__mulsf3>:
    1f04:	0b d0       	rcall	.+22     	; 0x1f1c <__mulsf3x>
    1f06:	c4 cf       	rjmp	.-120    	; 0x1e90 <__fp_round>
    1f08:	b5 df       	rcall	.-150    	; 0x1e74 <__fp_pscA>
    1f0a:	28 f0       	brcs	.+10     	; 0x1f16 <__mulsf3+0x12>
    1f0c:	ba df       	rcall	.-140    	; 0x1e82 <__fp_pscB>
    1f0e:	18 f0       	brcs	.+6      	; 0x1f16 <__mulsf3+0x12>
    1f10:	95 23       	and	r25, r21
    1f12:	09 f0       	breq	.+2      	; 0x1f16 <__mulsf3+0x12>
    1f14:	a6 cf       	rjmp	.-180    	; 0x1e62 <__fp_inf>
    1f16:	ab cf       	rjmp	.-170    	; 0x1e6e <__fp_nan>
    1f18:	11 24       	eor	r1, r1
    1f1a:	ee cf       	rjmp	.-36     	; 0x1ef8 <__fp_szero>

00001f1c <__mulsf3x>:
    1f1c:	ca df       	rcall	.-108    	; 0x1eb2 <__fp_split3>
    1f1e:	a0 f3       	brcs	.-24     	; 0x1f08 <__mulsf3+0x4>

00001f20 <__mulsf3_pse>:
    1f20:	95 9f       	mul	r25, r21
    1f22:	d1 f3       	breq	.-12     	; 0x1f18 <__mulsf3+0x14>
    1f24:	95 0f       	add	r25, r21
    1f26:	50 e0       	ldi	r21, 0x00	; 0
    1f28:	55 1f       	adc	r21, r21
    1f2a:	62 9f       	mul	r22, r18
    1f2c:	f0 01       	movw	r30, r0
    1f2e:	72 9f       	mul	r23, r18
    1f30:	bb 27       	eor	r27, r27
    1f32:	f0 0d       	add	r31, r0
    1f34:	b1 1d       	adc	r27, r1
    1f36:	63 9f       	mul	r22, r19
    1f38:	aa 27       	eor	r26, r26
    1f3a:	f0 0d       	add	r31, r0
    1f3c:	b1 1d       	adc	r27, r1
    1f3e:	aa 1f       	adc	r26, r26
    1f40:	64 9f       	mul	r22, r20
    1f42:	66 27       	eor	r22, r22
    1f44:	b0 0d       	add	r27, r0
    1f46:	a1 1d       	adc	r26, r1
    1f48:	66 1f       	adc	r22, r22
    1f4a:	82 9f       	mul	r24, r18
    1f4c:	22 27       	eor	r18, r18
    1f4e:	b0 0d       	add	r27, r0
    1f50:	a1 1d       	adc	r26, r1
    1f52:	62 1f       	adc	r22, r18
    1f54:	73 9f       	mul	r23, r19
    1f56:	b0 0d       	add	r27, r0
    1f58:	a1 1d       	adc	r26, r1
    1f5a:	62 1f       	adc	r22, r18
    1f5c:	83 9f       	mul	r24, r19
    1f5e:	a0 0d       	add	r26, r0
    1f60:	61 1d       	adc	r22, r1
    1f62:	22 1f       	adc	r18, r18
    1f64:	74 9f       	mul	r23, r20
    1f66:	33 27       	eor	r19, r19
    1f68:	a0 0d       	add	r26, r0
    1f6a:	61 1d       	adc	r22, r1
    1f6c:	23 1f       	adc	r18, r19
    1f6e:	84 9f       	mul	r24, r20
    1f70:	60 0d       	add	r22, r0
    1f72:	21 1d       	adc	r18, r1
    1f74:	82 2f       	mov	r24, r18
    1f76:	76 2f       	mov	r23, r22
    1f78:	6a 2f       	mov	r22, r26
    1f7a:	11 24       	eor	r1, r1
    1f7c:	9f 57       	subi	r25, 0x7F	; 127
    1f7e:	50 40       	sbci	r21, 0x00	; 0
    1f80:	8a f0       	brmi	.+34     	; 0x1fa4 <__mulsf3_pse+0x84>
    1f82:	e1 f0       	breq	.+56     	; 0x1fbc <__mulsf3_pse+0x9c>
    1f84:	88 23       	and	r24, r24
    1f86:	4a f0       	brmi	.+18     	; 0x1f9a <__mulsf3_pse+0x7a>
    1f88:	ee 0f       	add	r30, r30
    1f8a:	ff 1f       	adc	r31, r31
    1f8c:	bb 1f       	adc	r27, r27
    1f8e:	66 1f       	adc	r22, r22
    1f90:	77 1f       	adc	r23, r23
    1f92:	88 1f       	adc	r24, r24
    1f94:	91 50       	subi	r25, 0x01	; 1
    1f96:	50 40       	sbci	r21, 0x00	; 0
    1f98:	a9 f7       	brne	.-22     	; 0x1f84 <__mulsf3_pse+0x64>
    1f9a:	9e 3f       	cpi	r25, 0xFE	; 254
    1f9c:	51 05       	cpc	r21, r1
    1f9e:	70 f0       	brcs	.+28     	; 0x1fbc <__mulsf3_pse+0x9c>
    1fa0:	60 cf       	rjmp	.-320    	; 0x1e62 <__fp_inf>
    1fa2:	aa cf       	rjmp	.-172    	; 0x1ef8 <__fp_szero>
    1fa4:	5f 3f       	cpi	r21, 0xFF	; 255
    1fa6:	ec f3       	brlt	.-6      	; 0x1fa2 <__mulsf3_pse+0x82>
    1fa8:	98 3e       	cpi	r25, 0xE8	; 232
    1faa:	dc f3       	brlt	.-10     	; 0x1fa2 <__mulsf3_pse+0x82>
    1fac:	86 95       	lsr	r24
    1fae:	77 95       	ror	r23
    1fb0:	67 95       	ror	r22
    1fb2:	b7 95       	ror	r27
    1fb4:	f7 95       	ror	r31
    1fb6:	e7 95       	ror	r30
    1fb8:	9f 5f       	subi	r25, 0xFF	; 255
    1fba:	c1 f7       	brne	.-16     	; 0x1fac <__mulsf3_pse+0x8c>
    1fbc:	fe 2b       	or	r31, r30
    1fbe:	88 0f       	add	r24, r24
    1fc0:	91 1d       	adc	r25, r1
    1fc2:	96 95       	lsr	r25
    1fc4:	87 95       	ror	r24
    1fc6:	97 f9       	bld	r25, 7
    1fc8:	08 95       	ret

00001fca <__cmpsf2>:
    1fca:	03 d0       	rcall	.+6      	; 0x1fd2 <__fp_cmp>
    1fcc:	08 f4       	brcc	.+2      	; 0x1fd0 <__cmpsf2+0x6>
    1fce:	81 e0       	ldi	r24, 0x01	; 1
    1fd0:	08 95       	ret

00001fd2 <__fp_cmp>:
    1fd2:	99 0f       	add	r25, r25
    1fd4:	00 08       	sbc	r0, r0
    1fd6:	55 0f       	add	r21, r21
    1fd8:	aa 0b       	sbc	r26, r26
    1fda:	e0 e8       	ldi	r30, 0x80	; 128
    1fdc:	fe ef       	ldi	r31, 0xFE	; 254
    1fde:	16 16       	cp	r1, r22
    1fe0:	17 06       	cpc	r1, r23
    1fe2:	e8 07       	cpc	r30, r24
    1fe4:	f9 07       	cpc	r31, r25
    1fe6:	c0 f0       	brcs	.+48     	; 0x2018 <__fp_cmp+0x46>
    1fe8:	12 16       	cp	r1, r18
    1fea:	13 06       	cpc	r1, r19
    1fec:	e4 07       	cpc	r30, r20
    1fee:	f5 07       	cpc	r31, r21
    1ff0:	98 f0       	brcs	.+38     	; 0x2018 <__fp_cmp+0x46>
    1ff2:	62 1b       	sub	r22, r18
    1ff4:	73 0b       	sbc	r23, r19
    1ff6:	84 0b       	sbc	r24, r20
    1ff8:	95 0b       	sbc	r25, r21
    1ffa:	39 f4       	brne	.+14     	; 0x200a <__fp_cmp+0x38>
    1ffc:	0a 26       	eor	r0, r26
    1ffe:	61 f0       	breq	.+24     	; 0x2018 <__fp_cmp+0x46>
    2000:	23 2b       	or	r18, r19
    2002:	24 2b       	or	r18, r20
    2004:	25 2b       	or	r18, r21
    2006:	21 f4       	brne	.+8      	; 0x2010 <__fp_cmp+0x3e>
    2008:	08 95       	ret
    200a:	0a 26       	eor	r0, r26
    200c:	09 f4       	brne	.+2      	; 0x2010 <__fp_cmp+0x3e>
    200e:	a1 40       	sbci	r26, 0x01	; 1
    2010:	a6 95       	lsr	r26
    2012:	8f ef       	ldi	r24, 0xFF	; 255
    2014:	81 1d       	adc	r24, r1
    2016:	81 1d       	adc	r24, r1
    2018:	08 95       	ret

0000201a <__gesf2>:
    201a:	db df       	rcall	.-74     	; 0x1fd2 <__fp_cmp>
    201c:	08 f4       	brcc	.+2      	; 0x2020 <__gesf2+0x6>
    201e:	8f ef       	ldi	r24, 0xFF	; 255
    2020:	08 95       	ret

00002022 <__divmodhi4>:
    2022:	97 fb       	bst	r25, 7
    2024:	07 2e       	mov	r0, r23
    2026:	16 f4       	brtc	.+4      	; 0x202c <__divmodhi4+0xa>
    2028:	00 94       	com	r0
    202a:	06 d0       	rcall	.+12     	; 0x2038 <__divmodhi4_neg1>
    202c:	77 fd       	sbrc	r23, 7
    202e:	08 d0       	rcall	.+16     	; 0x2040 <__divmodhi4_neg2>
    2030:	0b d0       	rcall	.+22     	; 0x2048 <__udivmodhi4>
    2032:	07 fc       	sbrc	r0, 7
    2034:	05 d0       	rcall	.+10     	; 0x2040 <__divmodhi4_neg2>
    2036:	3e f4       	brtc	.+14     	; 0x2046 <__divmodhi4_exit>

00002038 <__divmodhi4_neg1>:
    2038:	90 95       	com	r25
    203a:	81 95       	neg	r24
    203c:	9f 4f       	sbci	r25, 0xFF	; 255
    203e:	08 95       	ret

00002040 <__divmodhi4_neg2>:
    2040:	70 95       	com	r23
    2042:	61 95       	neg	r22
    2044:	7f 4f       	sbci	r23, 0xFF	; 255

00002046 <__divmodhi4_exit>:
    2046:	08 95       	ret

00002048 <__udivmodhi4>:
    2048:	aa 1b       	sub	r26, r26
    204a:	bb 1b       	sub	r27, r27
    204c:	51 e1       	ldi	r21, 0x11	; 17
    204e:	07 c0       	rjmp	.+14     	; 0x205e <__udivmodhi4_ep>

00002050 <__udivmodhi4_loop>:
    2050:	aa 1f       	adc	r26, r26
    2052:	bb 1f       	adc	r27, r27
    2054:	a6 17       	cp	r26, r22
    2056:	b7 07       	cpc	r27, r23
    2058:	10 f0       	brcs	.+4      	; 0x205e <__udivmodhi4_ep>
    205a:	a6 1b       	sub	r26, r22
    205c:	b7 0b       	sbc	r27, r23

0000205e <__udivmodhi4_ep>:
    205e:	88 1f       	adc	r24, r24
    2060:	99 1f       	adc	r25, r25
    2062:	5a 95       	dec	r21
    2064:	a9 f7       	brne	.-22     	; 0x2050 <__udivmodhi4_loop>
    2066:	80 95       	com	r24
    2068:	90 95       	com	r25
    206a:	bc 01       	movw	r22, r24
    206c:	cd 01       	movw	r24, r26
    206e:	08 95       	ret

00002070 <atoi>:
    2070:	fc 01       	movw	r30, r24
    2072:	88 27       	eor	r24, r24
    2074:	99 27       	eor	r25, r25
    2076:	e8 94       	clt
    2078:	21 91       	ld	r18, Z+
    207a:	20 32       	cpi	r18, 0x20	; 32
    207c:	e9 f3       	breq	.-6      	; 0x2078 <atoi+0x8>
    207e:	29 30       	cpi	r18, 0x09	; 9
    2080:	10 f0       	brcs	.+4      	; 0x2086 <atoi+0x16>
    2082:	2e 30       	cpi	r18, 0x0E	; 14
    2084:	c8 f3       	brcs	.-14     	; 0x2078 <atoi+0x8>
    2086:	2b 32       	cpi	r18, 0x2B	; 43
    2088:	39 f0       	breq	.+14     	; 0x2098 <atoi+0x28>
    208a:	2d 32       	cpi	r18, 0x2D	; 45
    208c:	31 f4       	brne	.+12     	; 0x209a <atoi+0x2a>
    208e:	68 94       	set
    2090:	03 c0       	rjmp	.+6      	; 0x2098 <atoi+0x28>
    2092:	35 d0       	rcall	.+106    	; 0x20fe <__mulhi_const_10>
    2094:	82 0f       	add	r24, r18
    2096:	91 1d       	adc	r25, r1
    2098:	21 91       	ld	r18, Z+
    209a:	20 53       	subi	r18, 0x30	; 48
    209c:	2a 30       	cpi	r18, 0x0A	; 10
    209e:	c8 f3       	brcs	.-14     	; 0x2092 <atoi+0x22>
    20a0:	1e f4       	brtc	.+6      	; 0x20a8 <atoi+0x38>
    20a2:	90 95       	com	r25
    20a4:	81 95       	neg	r24
    20a6:	9f 4f       	sbci	r25, 0xFF	; 255
    20a8:	08 95       	ret

000020aa <strtok>:
    20aa:	44 e2       	ldi	r20, 0x24	; 36
    20ac:	5b e0       	ldi	r21, 0x0B	; 11
    20ae:	00 c0       	rjmp	.+0      	; 0x20b0 <strtok_r>

000020b0 <strtok_r>:
    20b0:	fa 01       	movw	r30, r20
    20b2:	a1 91       	ld	r26, Z+
    20b4:	b0 81       	ld	r27, Z
    20b6:	00 97       	sbiw	r24, 0x00	; 0
    20b8:	19 f4       	brne	.+6      	; 0x20c0 <strtok_r+0x10>
    20ba:	10 97       	sbiw	r26, 0x00	; 0
    20bc:	e1 f0       	breq	.+56     	; 0x20f6 <strtok_r+0x46>
    20be:	cd 01       	movw	r24, r26
    20c0:	dc 01       	movw	r26, r24
    20c2:	cd 01       	movw	r24, r26
    20c4:	0d 90       	ld	r0, X+
    20c6:	00 20       	and	r0, r0
    20c8:	11 f4       	brne	.+4      	; 0x20ce <strtok_r+0x1e>
    20ca:	c0 01       	movw	r24, r0
    20cc:	13 c0       	rjmp	.+38     	; 0x20f4 <strtok_r+0x44>
    20ce:	fb 01       	movw	r30, r22
    20d0:	21 91       	ld	r18, Z+
    20d2:	22 23       	and	r18, r18
    20d4:	19 f0       	breq	.+6      	; 0x20dc <strtok_r+0x2c>
    20d6:	20 15       	cp	r18, r0
    20d8:	d9 f7       	brne	.-10     	; 0x20d0 <strtok_r+0x20>
    20da:	f3 cf       	rjmp	.-26     	; 0x20c2 <strtok_r+0x12>
    20dc:	fb 01       	movw	r30, r22
    20de:	21 91       	ld	r18, Z+
    20e0:	20 15       	cp	r18, r0
    20e2:	19 f4       	brne	.+6      	; 0x20ea <strtok_r+0x3a>
    20e4:	1e 92       	st	-X, r1
    20e6:	11 96       	adiw	r26, 0x01	; 1
    20e8:	06 c0       	rjmp	.+12     	; 0x20f6 <strtok_r+0x46>
    20ea:	22 23       	and	r18, r18
    20ec:	c1 f7       	brne	.-16     	; 0x20de <strtok_r+0x2e>
    20ee:	0d 90       	ld	r0, X+
    20f0:	00 20       	and	r0, r0
    20f2:	a1 f7       	brne	.-24     	; 0x20dc <strtok_r+0x2c>
    20f4:	d0 01       	movw	r26, r0
    20f6:	fa 01       	movw	r30, r20
    20f8:	a1 93       	st	Z+, r26
    20fa:	b0 83       	st	Z, r27
    20fc:	08 95       	ret

000020fe <__mulhi_const_10>:
    20fe:	7a e0       	ldi	r23, 0x0A	; 10
    2100:	97 9f       	mul	r25, r23
    2102:	90 2d       	mov	r25, r0
    2104:	87 9f       	mul	r24, r23
    2106:	80 2d       	mov	r24, r0
    2108:	91 0d       	add	r25, r1
    210a:	11 24       	eor	r1, r1
    210c:	08 95       	ret

0000210e <fdevopen>:
    210e:	0f 93       	push	r16
    2110:	1f 93       	push	r17
    2112:	cf 93       	push	r28
    2114:	df 93       	push	r29
    2116:	ec 01       	movw	r28, r24
    2118:	8b 01       	movw	r16, r22
    211a:	00 97       	sbiw	r24, 0x00	; 0
    211c:	31 f4       	brne	.+12     	; 0x212a <fdevopen+0x1c>
    211e:	61 15       	cp	r22, r1
    2120:	71 05       	cpc	r23, r1
    2122:	19 f4       	brne	.+6      	; 0x212a <fdevopen+0x1c>
    2124:	80 e0       	ldi	r24, 0x00	; 0
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	37 c0       	rjmp	.+110    	; 0x2198 <fdevopen+0x8a>
    212a:	6e e0       	ldi	r22, 0x0E	; 14
    212c:	70 e0       	ldi	r23, 0x00	; 0
    212e:	81 e0       	ldi	r24, 0x01	; 1
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	a1 d2       	rcall	.+1346   	; 0x2676 <calloc>
    2134:	fc 01       	movw	r30, r24
    2136:	00 97       	sbiw	r24, 0x00	; 0
    2138:	a9 f3       	breq	.-22     	; 0x2124 <fdevopen+0x16>
    213a:	80 e8       	ldi	r24, 0x80	; 128
    213c:	83 83       	std	Z+3, r24	; 0x03
    213e:	01 15       	cp	r16, r1
    2140:	11 05       	cpc	r17, r1
    2142:	71 f0       	breq	.+28     	; 0x2160 <fdevopen+0x52>
    2144:	13 87       	std	Z+11, r17	; 0x0b
    2146:	02 87       	std	Z+10, r16	; 0x0a
    2148:	81 e8       	ldi	r24, 0x81	; 129
    214a:	83 83       	std	Z+3, r24	; 0x03
    214c:	80 91 3e 0c 	lds	r24, 0x0C3E
    2150:	90 91 3f 0c 	lds	r25, 0x0C3F
    2154:	89 2b       	or	r24, r25
    2156:	21 f4       	brne	.+8      	; 0x2160 <fdevopen+0x52>
    2158:	f0 93 3f 0c 	sts	0x0C3F, r31
    215c:	e0 93 3e 0c 	sts	0x0C3E, r30
    2160:	20 97       	sbiw	r28, 0x00	; 0
    2162:	c9 f0       	breq	.+50     	; 0x2196 <fdevopen+0x88>
    2164:	d1 87       	std	Z+9, r29	; 0x09
    2166:	c0 87       	std	Z+8, r28	; 0x08
    2168:	83 81       	ldd	r24, Z+3	; 0x03
    216a:	82 60       	ori	r24, 0x02	; 2
    216c:	83 83       	std	Z+3, r24	; 0x03
    216e:	80 91 40 0c 	lds	r24, 0x0C40
    2172:	90 91 41 0c 	lds	r25, 0x0C41
    2176:	89 2b       	or	r24, r25
    2178:	71 f4       	brne	.+28     	; 0x2196 <fdevopen+0x88>
    217a:	f0 93 41 0c 	sts	0x0C41, r31
    217e:	e0 93 40 0c 	sts	0x0C40, r30
    2182:	80 91 42 0c 	lds	r24, 0x0C42
    2186:	90 91 43 0c 	lds	r25, 0x0C43
    218a:	89 2b       	or	r24, r25
    218c:	21 f4       	brne	.+8      	; 0x2196 <fdevopen+0x88>
    218e:	f0 93 43 0c 	sts	0x0C43, r31
    2192:	e0 93 42 0c 	sts	0x0C42, r30
    2196:	cf 01       	movw	r24, r30
    2198:	df 91       	pop	r29
    219a:	cf 91       	pop	r28
    219c:	1f 91       	pop	r17
    219e:	0f 91       	pop	r16
    21a0:	08 95       	ret

000021a2 <fgetc>:
    21a2:	cf 93       	push	r28
    21a4:	df 93       	push	r29
    21a6:	ec 01       	movw	r28, r24
    21a8:	2b 81       	ldd	r18, Y+3	; 0x03
    21aa:	20 ff       	sbrs	r18, 0
    21ac:	33 c0       	rjmp	.+102    	; 0x2214 <__stack+0x15>
    21ae:	26 ff       	sbrs	r18, 6
    21b0:	0a c0       	rjmp	.+20     	; 0x21c6 <fgetc+0x24>
    21b2:	2f 7b       	andi	r18, 0xBF	; 191
    21b4:	2b 83       	std	Y+3, r18	; 0x03
    21b6:	8e 81       	ldd	r24, Y+6	; 0x06
    21b8:	9f 81       	ldd	r25, Y+7	; 0x07
    21ba:	01 96       	adiw	r24, 0x01	; 1
    21bc:	9f 83       	std	Y+7, r25	; 0x07
    21be:	8e 83       	std	Y+6, r24	; 0x06
    21c0:	8a 81       	ldd	r24, Y+2	; 0x02
    21c2:	90 e0       	ldi	r25, 0x00	; 0
    21c4:	29 c0       	rjmp	.+82     	; 0x2218 <__stack+0x19>
    21c6:	22 ff       	sbrs	r18, 2
    21c8:	0f c0       	rjmp	.+30     	; 0x21e8 <fgetc+0x46>
    21ca:	e8 81       	ld	r30, Y
    21cc:	f9 81       	ldd	r31, Y+1	; 0x01
    21ce:	80 81       	ld	r24, Z
    21d0:	99 27       	eor	r25, r25
    21d2:	87 fd       	sbrc	r24, 7
    21d4:	90 95       	com	r25
    21d6:	00 97       	sbiw	r24, 0x00	; 0
    21d8:	19 f4       	brne	.+6      	; 0x21e0 <fgetc+0x3e>
    21da:	20 62       	ori	r18, 0x20	; 32
    21dc:	2b 83       	std	Y+3, r18	; 0x03
    21de:	1a c0       	rjmp	.+52     	; 0x2214 <__stack+0x15>
    21e0:	31 96       	adiw	r30, 0x01	; 1
    21e2:	f9 83       	std	Y+1, r31	; 0x01
    21e4:	e8 83       	st	Y, r30
    21e6:	0e c0       	rjmp	.+28     	; 0x2204 <__stack+0x5>
    21e8:	ea 85       	ldd	r30, Y+10	; 0x0a
    21ea:	fb 85       	ldd	r31, Y+11	; 0x0b
    21ec:	19 95       	eicall
    21ee:	97 ff       	sbrs	r25, 7
    21f0:	09 c0       	rjmp	.+18     	; 0x2204 <__stack+0x5>
    21f2:	2b 81       	ldd	r18, Y+3	; 0x03
    21f4:	01 96       	adiw	r24, 0x01	; 1
    21f6:	11 f4       	brne	.+4      	; 0x21fc <fgetc+0x5a>
    21f8:	80 e1       	ldi	r24, 0x10	; 16
    21fa:	01 c0       	rjmp	.+2      	; 0x21fe <fgetc+0x5c>
    21fc:	80 e2       	ldi	r24, 0x20	; 32
    21fe:	82 2b       	or	r24, r18
    2200:	8b 83       	std	Y+3, r24	; 0x03
    2202:	08 c0       	rjmp	.+16     	; 0x2214 <__stack+0x15>
    2204:	2e 81       	ldd	r18, Y+6	; 0x06
    2206:	3f 81       	ldd	r19, Y+7	; 0x07
    2208:	2f 5f       	subi	r18, 0xFF	; 255
    220a:	3f 4f       	sbci	r19, 0xFF	; 255
    220c:	3f 83       	std	Y+7, r19	; 0x07
    220e:	2e 83       	std	Y+6, r18	; 0x06
    2210:	99 27       	eor	r25, r25
    2212:	02 c0       	rjmp	.+4      	; 0x2218 <__stack+0x19>
    2214:	8f ef       	ldi	r24, 0xFF	; 255
    2216:	9f ef       	ldi	r25, 0xFF	; 255
    2218:	df 91       	pop	r29
    221a:	cf 91       	pop	r28
    221c:	08 95       	ret

0000221e <printf>:
    221e:	cf 93       	push	r28
    2220:	df 93       	push	r29
    2222:	cd b7       	in	r28, 0x3d	; 61
    2224:	de b7       	in	r29, 0x3e	; 62
    2226:	fe 01       	movw	r30, r28
    2228:	36 96       	adiw	r30, 0x06	; 6
    222a:	61 91       	ld	r22, Z+
    222c:	71 91       	ld	r23, Z+
    222e:	af 01       	movw	r20, r30
    2230:	80 91 40 0c 	lds	r24, 0x0C40
    2234:	90 91 41 0c 	lds	r25, 0x0C41
    2238:	30 d0       	rcall	.+96     	; 0x229a <vfprintf>
    223a:	df 91       	pop	r29
    223c:	cf 91       	pop	r28
    223e:	08 95       	ret

00002240 <puts>:
    2240:	0f 93       	push	r16
    2242:	1f 93       	push	r17
    2244:	cf 93       	push	r28
    2246:	df 93       	push	r29
    2248:	e0 91 40 0c 	lds	r30, 0x0C40
    224c:	f0 91 41 0c 	lds	r31, 0x0C41
    2250:	23 81       	ldd	r18, Z+3	; 0x03
    2252:	21 ff       	sbrs	r18, 1
    2254:	1b c0       	rjmp	.+54     	; 0x228c <puts+0x4c>
    2256:	ec 01       	movw	r28, r24
    2258:	00 e0       	ldi	r16, 0x00	; 0
    225a:	10 e0       	ldi	r17, 0x00	; 0
    225c:	89 91       	ld	r24, Y+
    225e:	60 91 40 0c 	lds	r22, 0x0C40
    2262:	70 91 41 0c 	lds	r23, 0x0C41
    2266:	db 01       	movw	r26, r22
    2268:	18 96       	adiw	r26, 0x08	; 8
    226a:	ed 91       	ld	r30, X+
    226c:	fc 91       	ld	r31, X
    226e:	19 97       	sbiw	r26, 0x09	; 9
    2270:	88 23       	and	r24, r24
    2272:	31 f0       	breq	.+12     	; 0x2280 <puts+0x40>
    2274:	19 95       	eicall
    2276:	89 2b       	or	r24, r25
    2278:	89 f3       	breq	.-30     	; 0x225c <puts+0x1c>
    227a:	0f ef       	ldi	r16, 0xFF	; 255
    227c:	1f ef       	ldi	r17, 0xFF	; 255
    227e:	ee cf       	rjmp	.-36     	; 0x225c <puts+0x1c>
    2280:	8a e0       	ldi	r24, 0x0A	; 10
    2282:	19 95       	eicall
    2284:	89 2b       	or	r24, r25
    2286:	11 f4       	brne	.+4      	; 0x228c <puts+0x4c>
    2288:	c8 01       	movw	r24, r16
    228a:	02 c0       	rjmp	.+4      	; 0x2290 <puts+0x50>
    228c:	8f ef       	ldi	r24, 0xFF	; 255
    228e:	9f ef       	ldi	r25, 0xFF	; 255
    2290:	df 91       	pop	r29
    2292:	cf 91       	pop	r28
    2294:	1f 91       	pop	r17
    2296:	0f 91       	pop	r16
    2298:	08 95       	ret

0000229a <vfprintf>:
    229a:	2f 92       	push	r2
    229c:	3f 92       	push	r3
    229e:	4f 92       	push	r4
    22a0:	5f 92       	push	r5
    22a2:	6f 92       	push	r6
    22a4:	7f 92       	push	r7
    22a6:	8f 92       	push	r8
    22a8:	9f 92       	push	r9
    22aa:	af 92       	push	r10
    22ac:	bf 92       	push	r11
    22ae:	cf 92       	push	r12
    22b0:	df 92       	push	r13
    22b2:	ef 92       	push	r14
    22b4:	ff 92       	push	r15
    22b6:	0f 93       	push	r16
    22b8:	1f 93       	push	r17
    22ba:	cf 93       	push	r28
    22bc:	df 93       	push	r29
    22be:	cd b7       	in	r28, 0x3d	; 61
    22c0:	de b7       	in	r29, 0x3e	; 62
    22c2:	2c 97       	sbiw	r28, 0x0c	; 12
    22c4:	0f b6       	in	r0, 0x3f	; 63
    22c6:	f8 94       	cli
    22c8:	de bf       	out	0x3e, r29	; 62
    22ca:	0f be       	out	0x3f, r0	; 63
    22cc:	cd bf       	out	0x3d, r28	; 61
    22ce:	7c 01       	movw	r14, r24
    22d0:	6b 01       	movw	r12, r22
    22d2:	8a 01       	movw	r16, r20
    22d4:	fc 01       	movw	r30, r24
    22d6:	17 82       	std	Z+7, r1	; 0x07
    22d8:	16 82       	std	Z+6, r1	; 0x06
    22da:	83 81       	ldd	r24, Z+3	; 0x03
    22dc:	81 ff       	sbrs	r24, 1
    22de:	b0 c1       	rjmp	.+864    	; 0x2640 <vfprintf+0x3a6>
    22e0:	ce 01       	movw	r24, r28
    22e2:	01 96       	adiw	r24, 0x01	; 1
    22e4:	4c 01       	movw	r8, r24
    22e6:	f7 01       	movw	r30, r14
    22e8:	93 81       	ldd	r25, Z+3	; 0x03
    22ea:	f6 01       	movw	r30, r12
    22ec:	93 fd       	sbrc	r25, 3
    22ee:	85 91       	lpm	r24, Z+
    22f0:	93 ff       	sbrs	r25, 3
    22f2:	81 91       	ld	r24, Z+
    22f4:	6f 01       	movw	r12, r30
    22f6:	88 23       	and	r24, r24
    22f8:	09 f4       	brne	.+2      	; 0x22fc <vfprintf+0x62>
    22fa:	9e c1       	rjmp	.+828    	; 0x2638 <vfprintf+0x39e>
    22fc:	85 32       	cpi	r24, 0x25	; 37
    22fe:	39 f4       	brne	.+14     	; 0x230e <vfprintf+0x74>
    2300:	93 fd       	sbrc	r25, 3
    2302:	85 91       	lpm	r24, Z+
    2304:	93 ff       	sbrs	r25, 3
    2306:	81 91       	ld	r24, Z+
    2308:	6f 01       	movw	r12, r30
    230a:	85 32       	cpi	r24, 0x25	; 37
    230c:	21 f4       	brne	.+8      	; 0x2316 <vfprintf+0x7c>
    230e:	b7 01       	movw	r22, r14
    2310:	90 e0       	ldi	r25, 0x00	; 0
    2312:	0f d3       	rcall	.+1566   	; 0x2932 <fputc>
    2314:	e8 cf       	rjmp	.-48     	; 0x22e6 <vfprintf+0x4c>
    2316:	51 2c       	mov	r5, r1
    2318:	31 2c       	mov	r3, r1
    231a:	20 e0       	ldi	r18, 0x00	; 0
    231c:	20 32       	cpi	r18, 0x20	; 32
    231e:	a0 f4       	brcc	.+40     	; 0x2348 <vfprintf+0xae>
    2320:	8b 32       	cpi	r24, 0x2B	; 43
    2322:	69 f0       	breq	.+26     	; 0x233e <vfprintf+0xa4>
    2324:	30 f4       	brcc	.+12     	; 0x2332 <vfprintf+0x98>
    2326:	80 32       	cpi	r24, 0x20	; 32
    2328:	59 f0       	breq	.+22     	; 0x2340 <vfprintf+0xa6>
    232a:	83 32       	cpi	r24, 0x23	; 35
    232c:	69 f4       	brne	.+26     	; 0x2348 <vfprintf+0xae>
    232e:	20 61       	ori	r18, 0x10	; 16
    2330:	2c c0       	rjmp	.+88     	; 0x238a <vfprintf+0xf0>
    2332:	8d 32       	cpi	r24, 0x2D	; 45
    2334:	39 f0       	breq	.+14     	; 0x2344 <vfprintf+0xaa>
    2336:	80 33       	cpi	r24, 0x30	; 48
    2338:	39 f4       	brne	.+14     	; 0x2348 <vfprintf+0xae>
    233a:	21 60       	ori	r18, 0x01	; 1
    233c:	26 c0       	rjmp	.+76     	; 0x238a <vfprintf+0xf0>
    233e:	22 60       	ori	r18, 0x02	; 2
    2340:	24 60       	ori	r18, 0x04	; 4
    2342:	23 c0       	rjmp	.+70     	; 0x238a <vfprintf+0xf0>
    2344:	28 60       	ori	r18, 0x08	; 8
    2346:	21 c0       	rjmp	.+66     	; 0x238a <vfprintf+0xf0>
    2348:	27 fd       	sbrc	r18, 7
    234a:	27 c0       	rjmp	.+78     	; 0x239a <vfprintf+0x100>
    234c:	30 ed       	ldi	r19, 0xD0	; 208
    234e:	38 0f       	add	r19, r24
    2350:	3a 30       	cpi	r19, 0x0A	; 10
    2352:	78 f4       	brcc	.+30     	; 0x2372 <vfprintf+0xd8>
    2354:	26 ff       	sbrs	r18, 6
    2356:	06 c0       	rjmp	.+12     	; 0x2364 <vfprintf+0xca>
    2358:	fa e0       	ldi	r31, 0x0A	; 10
    235a:	5f 9e       	mul	r5, r31
    235c:	30 0d       	add	r19, r0
    235e:	11 24       	eor	r1, r1
    2360:	53 2e       	mov	r5, r19
    2362:	13 c0       	rjmp	.+38     	; 0x238a <vfprintf+0xf0>
    2364:	8a e0       	ldi	r24, 0x0A	; 10
    2366:	38 9e       	mul	r3, r24
    2368:	30 0d       	add	r19, r0
    236a:	11 24       	eor	r1, r1
    236c:	33 2e       	mov	r3, r19
    236e:	20 62       	ori	r18, 0x20	; 32
    2370:	0c c0       	rjmp	.+24     	; 0x238a <vfprintf+0xf0>
    2372:	8e 32       	cpi	r24, 0x2E	; 46
    2374:	21 f4       	brne	.+8      	; 0x237e <vfprintf+0xe4>
    2376:	26 fd       	sbrc	r18, 6
    2378:	5f c1       	rjmp	.+702    	; 0x2638 <vfprintf+0x39e>
    237a:	20 64       	ori	r18, 0x40	; 64
    237c:	06 c0       	rjmp	.+12     	; 0x238a <vfprintf+0xf0>
    237e:	8c 36       	cpi	r24, 0x6C	; 108
    2380:	11 f4       	brne	.+4      	; 0x2386 <vfprintf+0xec>
    2382:	20 68       	ori	r18, 0x80	; 128
    2384:	02 c0       	rjmp	.+4      	; 0x238a <vfprintf+0xf0>
    2386:	88 36       	cpi	r24, 0x68	; 104
    2388:	41 f4       	brne	.+16     	; 0x239a <vfprintf+0x100>
    238a:	f6 01       	movw	r30, r12
    238c:	93 fd       	sbrc	r25, 3
    238e:	85 91       	lpm	r24, Z+
    2390:	93 ff       	sbrs	r25, 3
    2392:	81 91       	ld	r24, Z+
    2394:	6f 01       	movw	r12, r30
    2396:	81 11       	cpse	r24, r1
    2398:	c1 cf       	rjmp	.-126    	; 0x231c <vfprintf+0x82>
    239a:	98 2f       	mov	r25, r24
    239c:	9f 7d       	andi	r25, 0xDF	; 223
    239e:	95 54       	subi	r25, 0x45	; 69
    23a0:	93 30       	cpi	r25, 0x03	; 3
    23a2:	28 f4       	brcc	.+10     	; 0x23ae <vfprintf+0x114>
    23a4:	0c 5f       	subi	r16, 0xFC	; 252
    23a6:	1f 4f       	sbci	r17, 0xFF	; 255
    23a8:	ff e3       	ldi	r31, 0x3F	; 63
    23aa:	f9 83       	std	Y+1, r31	; 0x01
    23ac:	0d c0       	rjmp	.+26     	; 0x23c8 <vfprintf+0x12e>
    23ae:	83 36       	cpi	r24, 0x63	; 99
    23b0:	31 f0       	breq	.+12     	; 0x23be <vfprintf+0x124>
    23b2:	83 37       	cpi	r24, 0x73	; 115
    23b4:	71 f0       	breq	.+28     	; 0x23d2 <vfprintf+0x138>
    23b6:	83 35       	cpi	r24, 0x53	; 83
    23b8:	09 f0       	breq	.+2      	; 0x23bc <vfprintf+0x122>
    23ba:	57 c0       	rjmp	.+174    	; 0x246a <vfprintf+0x1d0>
    23bc:	21 c0       	rjmp	.+66     	; 0x2400 <vfprintf+0x166>
    23be:	f8 01       	movw	r30, r16
    23c0:	80 81       	ld	r24, Z
    23c2:	89 83       	std	Y+1, r24	; 0x01
    23c4:	0e 5f       	subi	r16, 0xFE	; 254
    23c6:	1f 4f       	sbci	r17, 0xFF	; 255
    23c8:	44 24       	eor	r4, r4
    23ca:	43 94       	inc	r4
    23cc:	51 2c       	mov	r5, r1
    23ce:	54 01       	movw	r10, r8
    23d0:	14 c0       	rjmp	.+40     	; 0x23fa <vfprintf+0x160>
    23d2:	38 01       	movw	r6, r16
    23d4:	f2 e0       	ldi	r31, 0x02	; 2
    23d6:	6f 0e       	add	r6, r31
    23d8:	71 1c       	adc	r7, r1
    23da:	f8 01       	movw	r30, r16
    23dc:	a0 80       	ld	r10, Z
    23de:	b1 80       	ldd	r11, Z+1	; 0x01
    23e0:	26 ff       	sbrs	r18, 6
    23e2:	03 c0       	rjmp	.+6      	; 0x23ea <vfprintf+0x150>
    23e4:	65 2d       	mov	r22, r5
    23e6:	70 e0       	ldi	r23, 0x00	; 0
    23e8:	02 c0       	rjmp	.+4      	; 0x23ee <vfprintf+0x154>
    23ea:	6f ef       	ldi	r22, 0xFF	; 255
    23ec:	7f ef       	ldi	r23, 0xFF	; 255
    23ee:	c5 01       	movw	r24, r10
    23f0:	2c 87       	std	Y+12, r18	; 0x0c
    23f2:	94 d2       	rcall	.+1320   	; 0x291c <strnlen>
    23f4:	2c 01       	movw	r4, r24
    23f6:	83 01       	movw	r16, r6
    23f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    23fa:	2f 77       	andi	r18, 0x7F	; 127
    23fc:	22 2e       	mov	r2, r18
    23fe:	16 c0       	rjmp	.+44     	; 0x242c <vfprintf+0x192>
    2400:	38 01       	movw	r6, r16
    2402:	f2 e0       	ldi	r31, 0x02	; 2
    2404:	6f 0e       	add	r6, r31
    2406:	71 1c       	adc	r7, r1
    2408:	f8 01       	movw	r30, r16
    240a:	a0 80       	ld	r10, Z
    240c:	b1 80       	ldd	r11, Z+1	; 0x01
    240e:	26 ff       	sbrs	r18, 6
    2410:	03 c0       	rjmp	.+6      	; 0x2418 <vfprintf+0x17e>
    2412:	65 2d       	mov	r22, r5
    2414:	70 e0       	ldi	r23, 0x00	; 0
    2416:	02 c0       	rjmp	.+4      	; 0x241c <vfprintf+0x182>
    2418:	6f ef       	ldi	r22, 0xFF	; 255
    241a:	7f ef       	ldi	r23, 0xFF	; 255
    241c:	c5 01       	movw	r24, r10
    241e:	2c 87       	std	Y+12, r18	; 0x0c
    2420:	6b d2       	rcall	.+1238   	; 0x28f8 <strnlen_P>
    2422:	2c 01       	movw	r4, r24
    2424:	2c 85       	ldd	r18, Y+12	; 0x0c
    2426:	20 68       	ori	r18, 0x80	; 128
    2428:	22 2e       	mov	r2, r18
    242a:	83 01       	movw	r16, r6
    242c:	23 fc       	sbrc	r2, 3
    242e:	19 c0       	rjmp	.+50     	; 0x2462 <vfprintf+0x1c8>
    2430:	83 2d       	mov	r24, r3
    2432:	90 e0       	ldi	r25, 0x00	; 0
    2434:	48 16       	cp	r4, r24
    2436:	59 06       	cpc	r5, r25
    2438:	a0 f4       	brcc	.+40     	; 0x2462 <vfprintf+0x1c8>
    243a:	b7 01       	movw	r22, r14
    243c:	80 e2       	ldi	r24, 0x20	; 32
    243e:	90 e0       	ldi	r25, 0x00	; 0
    2440:	78 d2       	rcall	.+1264   	; 0x2932 <fputc>
    2442:	3a 94       	dec	r3
    2444:	f5 cf       	rjmp	.-22     	; 0x2430 <vfprintf+0x196>
    2446:	f5 01       	movw	r30, r10
    2448:	27 fc       	sbrc	r2, 7
    244a:	85 91       	lpm	r24, Z+
    244c:	27 fe       	sbrs	r2, 7
    244e:	81 91       	ld	r24, Z+
    2450:	5f 01       	movw	r10, r30
    2452:	b7 01       	movw	r22, r14
    2454:	90 e0       	ldi	r25, 0x00	; 0
    2456:	6d d2       	rcall	.+1242   	; 0x2932 <fputc>
    2458:	31 10       	cpse	r3, r1
    245a:	3a 94       	dec	r3
    245c:	f1 e0       	ldi	r31, 0x01	; 1
    245e:	4f 1a       	sub	r4, r31
    2460:	51 08       	sbc	r5, r1
    2462:	41 14       	cp	r4, r1
    2464:	51 04       	cpc	r5, r1
    2466:	79 f7       	brne	.-34     	; 0x2446 <vfprintf+0x1ac>
    2468:	de c0       	rjmp	.+444    	; 0x2626 <vfprintf+0x38c>
    246a:	84 36       	cpi	r24, 0x64	; 100
    246c:	11 f0       	breq	.+4      	; 0x2472 <vfprintf+0x1d8>
    246e:	89 36       	cpi	r24, 0x69	; 105
    2470:	31 f5       	brne	.+76     	; 0x24be <vfprintf+0x224>
    2472:	f8 01       	movw	r30, r16
    2474:	27 ff       	sbrs	r18, 7
    2476:	07 c0       	rjmp	.+14     	; 0x2486 <vfprintf+0x1ec>
    2478:	60 81       	ld	r22, Z
    247a:	71 81       	ldd	r23, Z+1	; 0x01
    247c:	82 81       	ldd	r24, Z+2	; 0x02
    247e:	93 81       	ldd	r25, Z+3	; 0x03
    2480:	0c 5f       	subi	r16, 0xFC	; 252
    2482:	1f 4f       	sbci	r17, 0xFF	; 255
    2484:	08 c0       	rjmp	.+16     	; 0x2496 <vfprintf+0x1fc>
    2486:	60 81       	ld	r22, Z
    2488:	71 81       	ldd	r23, Z+1	; 0x01
    248a:	88 27       	eor	r24, r24
    248c:	77 fd       	sbrc	r23, 7
    248e:	80 95       	com	r24
    2490:	98 2f       	mov	r25, r24
    2492:	0e 5f       	subi	r16, 0xFE	; 254
    2494:	1f 4f       	sbci	r17, 0xFF	; 255
    2496:	2f 76       	andi	r18, 0x6F	; 111
    2498:	b2 2e       	mov	r11, r18
    249a:	97 ff       	sbrs	r25, 7
    249c:	09 c0       	rjmp	.+18     	; 0x24b0 <vfprintf+0x216>
    249e:	90 95       	com	r25
    24a0:	80 95       	com	r24
    24a2:	70 95       	com	r23
    24a4:	61 95       	neg	r22
    24a6:	7f 4f       	sbci	r23, 0xFF	; 255
    24a8:	8f 4f       	sbci	r24, 0xFF	; 255
    24aa:	9f 4f       	sbci	r25, 0xFF	; 255
    24ac:	20 68       	ori	r18, 0x80	; 128
    24ae:	b2 2e       	mov	r11, r18
    24b0:	2a e0       	ldi	r18, 0x0A	; 10
    24b2:	30 e0       	ldi	r19, 0x00	; 0
    24b4:	a4 01       	movw	r20, r8
    24b6:	6f d2       	rcall	.+1246   	; 0x2996 <__ultoa_invert>
    24b8:	a8 2e       	mov	r10, r24
    24ba:	a8 18       	sub	r10, r8
    24bc:	43 c0       	rjmp	.+134    	; 0x2544 <vfprintf+0x2aa>
    24be:	85 37       	cpi	r24, 0x75	; 117
    24c0:	29 f4       	brne	.+10     	; 0x24cc <vfprintf+0x232>
    24c2:	2f 7e       	andi	r18, 0xEF	; 239
    24c4:	b2 2e       	mov	r11, r18
    24c6:	2a e0       	ldi	r18, 0x0A	; 10
    24c8:	30 e0       	ldi	r19, 0x00	; 0
    24ca:	25 c0       	rjmp	.+74     	; 0x2516 <vfprintf+0x27c>
    24cc:	f2 2f       	mov	r31, r18
    24ce:	f9 7f       	andi	r31, 0xF9	; 249
    24d0:	bf 2e       	mov	r11, r31
    24d2:	8f 36       	cpi	r24, 0x6F	; 111
    24d4:	c1 f0       	breq	.+48     	; 0x2506 <vfprintf+0x26c>
    24d6:	18 f4       	brcc	.+6      	; 0x24de <vfprintf+0x244>
    24d8:	88 35       	cpi	r24, 0x58	; 88
    24da:	79 f0       	breq	.+30     	; 0x24fa <vfprintf+0x260>
    24dc:	ad c0       	rjmp	.+346    	; 0x2638 <vfprintf+0x39e>
    24de:	80 37       	cpi	r24, 0x70	; 112
    24e0:	19 f0       	breq	.+6      	; 0x24e8 <vfprintf+0x24e>
    24e2:	88 37       	cpi	r24, 0x78	; 120
    24e4:	21 f0       	breq	.+8      	; 0x24ee <vfprintf+0x254>
    24e6:	a8 c0       	rjmp	.+336    	; 0x2638 <vfprintf+0x39e>
    24e8:	2f 2f       	mov	r18, r31
    24ea:	20 61       	ori	r18, 0x10	; 16
    24ec:	b2 2e       	mov	r11, r18
    24ee:	b4 fe       	sbrs	r11, 4
    24f0:	0d c0       	rjmp	.+26     	; 0x250c <vfprintf+0x272>
    24f2:	8b 2d       	mov	r24, r11
    24f4:	84 60       	ori	r24, 0x04	; 4
    24f6:	b8 2e       	mov	r11, r24
    24f8:	09 c0       	rjmp	.+18     	; 0x250c <vfprintf+0x272>
    24fa:	24 ff       	sbrs	r18, 4
    24fc:	0a c0       	rjmp	.+20     	; 0x2512 <vfprintf+0x278>
    24fe:	9f 2f       	mov	r25, r31
    2500:	96 60       	ori	r25, 0x06	; 6
    2502:	b9 2e       	mov	r11, r25
    2504:	06 c0       	rjmp	.+12     	; 0x2512 <vfprintf+0x278>
    2506:	28 e0       	ldi	r18, 0x08	; 8
    2508:	30 e0       	ldi	r19, 0x00	; 0
    250a:	05 c0       	rjmp	.+10     	; 0x2516 <vfprintf+0x27c>
    250c:	20 e1       	ldi	r18, 0x10	; 16
    250e:	30 e0       	ldi	r19, 0x00	; 0
    2510:	02 c0       	rjmp	.+4      	; 0x2516 <vfprintf+0x27c>
    2512:	20 e1       	ldi	r18, 0x10	; 16
    2514:	32 e0       	ldi	r19, 0x02	; 2
    2516:	f8 01       	movw	r30, r16
    2518:	b7 fe       	sbrs	r11, 7
    251a:	07 c0       	rjmp	.+14     	; 0x252a <vfprintf+0x290>
    251c:	60 81       	ld	r22, Z
    251e:	71 81       	ldd	r23, Z+1	; 0x01
    2520:	82 81       	ldd	r24, Z+2	; 0x02
    2522:	93 81       	ldd	r25, Z+3	; 0x03
    2524:	0c 5f       	subi	r16, 0xFC	; 252
    2526:	1f 4f       	sbci	r17, 0xFF	; 255
    2528:	06 c0       	rjmp	.+12     	; 0x2536 <vfprintf+0x29c>
    252a:	60 81       	ld	r22, Z
    252c:	71 81       	ldd	r23, Z+1	; 0x01
    252e:	80 e0       	ldi	r24, 0x00	; 0
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	0e 5f       	subi	r16, 0xFE	; 254
    2534:	1f 4f       	sbci	r17, 0xFF	; 255
    2536:	a4 01       	movw	r20, r8
    2538:	2e d2       	rcall	.+1116   	; 0x2996 <__ultoa_invert>
    253a:	a8 2e       	mov	r10, r24
    253c:	a8 18       	sub	r10, r8
    253e:	fb 2d       	mov	r31, r11
    2540:	ff 77       	andi	r31, 0x7F	; 127
    2542:	bf 2e       	mov	r11, r31
    2544:	b6 fe       	sbrs	r11, 6
    2546:	0b c0       	rjmp	.+22     	; 0x255e <vfprintf+0x2c4>
    2548:	2b 2d       	mov	r18, r11
    254a:	2e 7f       	andi	r18, 0xFE	; 254
    254c:	a5 14       	cp	r10, r5
    254e:	50 f4       	brcc	.+20     	; 0x2564 <vfprintf+0x2ca>
    2550:	b4 fe       	sbrs	r11, 4
    2552:	0a c0       	rjmp	.+20     	; 0x2568 <vfprintf+0x2ce>
    2554:	b2 fc       	sbrc	r11, 2
    2556:	08 c0       	rjmp	.+16     	; 0x2568 <vfprintf+0x2ce>
    2558:	2b 2d       	mov	r18, r11
    255a:	2e 7e       	andi	r18, 0xEE	; 238
    255c:	05 c0       	rjmp	.+10     	; 0x2568 <vfprintf+0x2ce>
    255e:	7a 2c       	mov	r7, r10
    2560:	2b 2d       	mov	r18, r11
    2562:	03 c0       	rjmp	.+6      	; 0x256a <vfprintf+0x2d0>
    2564:	7a 2c       	mov	r7, r10
    2566:	01 c0       	rjmp	.+2      	; 0x256a <vfprintf+0x2d0>
    2568:	75 2c       	mov	r7, r5
    256a:	24 ff       	sbrs	r18, 4
    256c:	0d c0       	rjmp	.+26     	; 0x2588 <vfprintf+0x2ee>
    256e:	fe 01       	movw	r30, r28
    2570:	ea 0d       	add	r30, r10
    2572:	f1 1d       	adc	r31, r1
    2574:	80 81       	ld	r24, Z
    2576:	80 33       	cpi	r24, 0x30	; 48
    2578:	11 f4       	brne	.+4      	; 0x257e <vfprintf+0x2e4>
    257a:	29 7e       	andi	r18, 0xE9	; 233
    257c:	09 c0       	rjmp	.+18     	; 0x2590 <vfprintf+0x2f6>
    257e:	22 ff       	sbrs	r18, 2
    2580:	06 c0       	rjmp	.+12     	; 0x258e <vfprintf+0x2f4>
    2582:	73 94       	inc	r7
    2584:	73 94       	inc	r7
    2586:	04 c0       	rjmp	.+8      	; 0x2590 <vfprintf+0x2f6>
    2588:	82 2f       	mov	r24, r18
    258a:	86 78       	andi	r24, 0x86	; 134
    258c:	09 f0       	breq	.+2      	; 0x2590 <vfprintf+0x2f6>
    258e:	73 94       	inc	r7
    2590:	23 fd       	sbrc	r18, 3
    2592:	12 c0       	rjmp	.+36     	; 0x25b8 <vfprintf+0x31e>
    2594:	20 ff       	sbrs	r18, 0
    2596:	06 c0       	rjmp	.+12     	; 0x25a4 <vfprintf+0x30a>
    2598:	5a 2c       	mov	r5, r10
    259a:	73 14       	cp	r7, r3
    259c:	18 f4       	brcc	.+6      	; 0x25a4 <vfprintf+0x30a>
    259e:	53 0c       	add	r5, r3
    25a0:	57 18       	sub	r5, r7
    25a2:	73 2c       	mov	r7, r3
    25a4:	73 14       	cp	r7, r3
    25a6:	60 f4       	brcc	.+24     	; 0x25c0 <vfprintf+0x326>
    25a8:	b7 01       	movw	r22, r14
    25aa:	80 e2       	ldi	r24, 0x20	; 32
    25ac:	90 e0       	ldi	r25, 0x00	; 0
    25ae:	2c 87       	std	Y+12, r18	; 0x0c
    25b0:	c0 d1       	rcall	.+896    	; 0x2932 <fputc>
    25b2:	73 94       	inc	r7
    25b4:	2c 85       	ldd	r18, Y+12	; 0x0c
    25b6:	f6 cf       	rjmp	.-20     	; 0x25a4 <vfprintf+0x30a>
    25b8:	73 14       	cp	r7, r3
    25ba:	10 f4       	brcc	.+4      	; 0x25c0 <vfprintf+0x326>
    25bc:	37 18       	sub	r3, r7
    25be:	01 c0       	rjmp	.+2      	; 0x25c2 <vfprintf+0x328>
    25c0:	31 2c       	mov	r3, r1
    25c2:	24 ff       	sbrs	r18, 4
    25c4:	11 c0       	rjmp	.+34     	; 0x25e8 <vfprintf+0x34e>
    25c6:	b7 01       	movw	r22, r14
    25c8:	80 e3       	ldi	r24, 0x30	; 48
    25ca:	90 e0       	ldi	r25, 0x00	; 0
    25cc:	2c 87       	std	Y+12, r18	; 0x0c
    25ce:	b1 d1       	rcall	.+866    	; 0x2932 <fputc>
    25d0:	2c 85       	ldd	r18, Y+12	; 0x0c
    25d2:	22 ff       	sbrs	r18, 2
    25d4:	16 c0       	rjmp	.+44     	; 0x2602 <vfprintf+0x368>
    25d6:	21 ff       	sbrs	r18, 1
    25d8:	03 c0       	rjmp	.+6      	; 0x25e0 <vfprintf+0x346>
    25da:	88 e5       	ldi	r24, 0x58	; 88
    25dc:	90 e0       	ldi	r25, 0x00	; 0
    25de:	02 c0       	rjmp	.+4      	; 0x25e4 <vfprintf+0x34a>
    25e0:	88 e7       	ldi	r24, 0x78	; 120
    25e2:	90 e0       	ldi	r25, 0x00	; 0
    25e4:	b7 01       	movw	r22, r14
    25e6:	0c c0       	rjmp	.+24     	; 0x2600 <vfprintf+0x366>
    25e8:	82 2f       	mov	r24, r18
    25ea:	86 78       	andi	r24, 0x86	; 134
    25ec:	51 f0       	breq	.+20     	; 0x2602 <vfprintf+0x368>
    25ee:	21 fd       	sbrc	r18, 1
    25f0:	02 c0       	rjmp	.+4      	; 0x25f6 <vfprintf+0x35c>
    25f2:	80 e2       	ldi	r24, 0x20	; 32
    25f4:	01 c0       	rjmp	.+2      	; 0x25f8 <vfprintf+0x35e>
    25f6:	8b e2       	ldi	r24, 0x2B	; 43
    25f8:	27 fd       	sbrc	r18, 7
    25fa:	8d e2       	ldi	r24, 0x2D	; 45
    25fc:	b7 01       	movw	r22, r14
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	98 d1       	rcall	.+816    	; 0x2932 <fputc>
    2602:	a5 14       	cp	r10, r5
    2604:	30 f4       	brcc	.+12     	; 0x2612 <vfprintf+0x378>
    2606:	b7 01       	movw	r22, r14
    2608:	80 e3       	ldi	r24, 0x30	; 48
    260a:	90 e0       	ldi	r25, 0x00	; 0
    260c:	92 d1       	rcall	.+804    	; 0x2932 <fputc>
    260e:	5a 94       	dec	r5
    2610:	f8 cf       	rjmp	.-16     	; 0x2602 <vfprintf+0x368>
    2612:	aa 94       	dec	r10
    2614:	f4 01       	movw	r30, r8
    2616:	ea 0d       	add	r30, r10
    2618:	f1 1d       	adc	r31, r1
    261a:	80 81       	ld	r24, Z
    261c:	b7 01       	movw	r22, r14
    261e:	90 e0       	ldi	r25, 0x00	; 0
    2620:	88 d1       	rcall	.+784    	; 0x2932 <fputc>
    2622:	a1 10       	cpse	r10, r1
    2624:	f6 cf       	rjmp	.-20     	; 0x2612 <vfprintf+0x378>
    2626:	33 20       	and	r3, r3
    2628:	09 f4       	brne	.+2      	; 0x262c <vfprintf+0x392>
    262a:	5d ce       	rjmp	.-838    	; 0x22e6 <vfprintf+0x4c>
    262c:	b7 01       	movw	r22, r14
    262e:	80 e2       	ldi	r24, 0x20	; 32
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	7f d1       	rcall	.+766    	; 0x2932 <fputc>
    2634:	3a 94       	dec	r3
    2636:	f7 cf       	rjmp	.-18     	; 0x2626 <vfprintf+0x38c>
    2638:	f7 01       	movw	r30, r14
    263a:	86 81       	ldd	r24, Z+6	; 0x06
    263c:	97 81       	ldd	r25, Z+7	; 0x07
    263e:	02 c0       	rjmp	.+4      	; 0x2644 <vfprintf+0x3aa>
    2640:	8f ef       	ldi	r24, 0xFF	; 255
    2642:	9f ef       	ldi	r25, 0xFF	; 255
    2644:	2c 96       	adiw	r28, 0x0c	; 12
    2646:	0f b6       	in	r0, 0x3f	; 63
    2648:	f8 94       	cli
    264a:	de bf       	out	0x3e, r29	; 62
    264c:	0f be       	out	0x3f, r0	; 63
    264e:	cd bf       	out	0x3d, r28	; 61
    2650:	df 91       	pop	r29
    2652:	cf 91       	pop	r28
    2654:	1f 91       	pop	r17
    2656:	0f 91       	pop	r16
    2658:	ff 90       	pop	r15
    265a:	ef 90       	pop	r14
    265c:	df 90       	pop	r13
    265e:	cf 90       	pop	r12
    2660:	bf 90       	pop	r11
    2662:	af 90       	pop	r10
    2664:	9f 90       	pop	r9
    2666:	8f 90       	pop	r8
    2668:	7f 90       	pop	r7
    266a:	6f 90       	pop	r6
    266c:	5f 90       	pop	r5
    266e:	4f 90       	pop	r4
    2670:	3f 90       	pop	r3
    2672:	2f 90       	pop	r2
    2674:	08 95       	ret

00002676 <calloc>:
    2676:	0f 93       	push	r16
    2678:	1f 93       	push	r17
    267a:	cf 93       	push	r28
    267c:	df 93       	push	r29
    267e:	86 9f       	mul	r24, r22
    2680:	80 01       	movw	r16, r0
    2682:	87 9f       	mul	r24, r23
    2684:	10 0d       	add	r17, r0
    2686:	96 9f       	mul	r25, r22
    2688:	10 0d       	add	r17, r0
    268a:	11 24       	eor	r1, r1
    268c:	c8 01       	movw	r24, r16
    268e:	0d d0       	rcall	.+26     	; 0x26aa <malloc>
    2690:	ec 01       	movw	r28, r24
    2692:	00 97       	sbiw	r24, 0x00	; 0
    2694:	21 f0       	breq	.+8      	; 0x269e <calloc+0x28>
    2696:	a8 01       	movw	r20, r16
    2698:	60 e0       	ldi	r22, 0x00	; 0
    269a:	70 e0       	ldi	r23, 0x00	; 0
    269c:	38 d1       	rcall	.+624    	; 0x290e <memset>
    269e:	ce 01       	movw	r24, r28
    26a0:	df 91       	pop	r29
    26a2:	cf 91       	pop	r28
    26a4:	1f 91       	pop	r17
    26a6:	0f 91       	pop	r16
    26a8:	08 95       	ret

000026aa <malloc>:
    26aa:	cf 93       	push	r28
    26ac:	df 93       	push	r29
    26ae:	82 30       	cpi	r24, 0x02	; 2
    26b0:	91 05       	cpc	r25, r1
    26b2:	10 f4       	brcc	.+4      	; 0x26b8 <malloc+0xe>
    26b4:	82 e0       	ldi	r24, 0x02	; 2
    26b6:	90 e0       	ldi	r25, 0x00	; 0
    26b8:	e0 91 46 0c 	lds	r30, 0x0C46
    26bc:	f0 91 47 0c 	lds	r31, 0x0C47
    26c0:	20 e0       	ldi	r18, 0x00	; 0
    26c2:	30 e0       	ldi	r19, 0x00	; 0
    26c4:	a0 e0       	ldi	r26, 0x00	; 0
    26c6:	b0 e0       	ldi	r27, 0x00	; 0
    26c8:	30 97       	sbiw	r30, 0x00	; 0
    26ca:	39 f1       	breq	.+78     	; 0x271a <malloc+0x70>
    26cc:	40 81       	ld	r20, Z
    26ce:	51 81       	ldd	r21, Z+1	; 0x01
    26d0:	48 17       	cp	r20, r24
    26d2:	59 07       	cpc	r21, r25
    26d4:	b8 f0       	brcs	.+46     	; 0x2704 <malloc+0x5a>
    26d6:	48 17       	cp	r20, r24
    26d8:	59 07       	cpc	r21, r25
    26da:	71 f4       	brne	.+28     	; 0x26f8 <malloc+0x4e>
    26dc:	82 81       	ldd	r24, Z+2	; 0x02
    26de:	93 81       	ldd	r25, Z+3	; 0x03
    26e0:	10 97       	sbiw	r26, 0x00	; 0
    26e2:	29 f0       	breq	.+10     	; 0x26ee <malloc+0x44>
    26e4:	13 96       	adiw	r26, 0x03	; 3
    26e6:	9c 93       	st	X, r25
    26e8:	8e 93       	st	-X, r24
    26ea:	12 97       	sbiw	r26, 0x02	; 2
    26ec:	2c c0       	rjmp	.+88     	; 0x2746 <malloc+0x9c>
    26ee:	90 93 47 0c 	sts	0x0C47, r25
    26f2:	80 93 46 0c 	sts	0x0C46, r24
    26f6:	27 c0       	rjmp	.+78     	; 0x2746 <malloc+0x9c>
    26f8:	21 15       	cp	r18, r1
    26fa:	31 05       	cpc	r19, r1
    26fc:	31 f0       	breq	.+12     	; 0x270a <malloc+0x60>
    26fe:	42 17       	cp	r20, r18
    2700:	53 07       	cpc	r21, r19
    2702:	18 f0       	brcs	.+6      	; 0x270a <malloc+0x60>
    2704:	a9 01       	movw	r20, r18
    2706:	db 01       	movw	r26, r22
    2708:	01 c0       	rjmp	.+2      	; 0x270c <malloc+0x62>
    270a:	ef 01       	movw	r28, r30
    270c:	9a 01       	movw	r18, r20
    270e:	bd 01       	movw	r22, r26
    2710:	df 01       	movw	r26, r30
    2712:	02 80       	ldd	r0, Z+2	; 0x02
    2714:	f3 81       	ldd	r31, Z+3	; 0x03
    2716:	e0 2d       	mov	r30, r0
    2718:	d7 cf       	rjmp	.-82     	; 0x26c8 <malloc+0x1e>
    271a:	21 15       	cp	r18, r1
    271c:	31 05       	cpc	r19, r1
    271e:	f9 f0       	breq	.+62     	; 0x275e <malloc+0xb4>
    2720:	28 1b       	sub	r18, r24
    2722:	39 0b       	sbc	r19, r25
    2724:	24 30       	cpi	r18, 0x04	; 4
    2726:	31 05       	cpc	r19, r1
    2728:	80 f4       	brcc	.+32     	; 0x274a <malloc+0xa0>
    272a:	8a 81       	ldd	r24, Y+2	; 0x02
    272c:	9b 81       	ldd	r25, Y+3	; 0x03
    272e:	61 15       	cp	r22, r1
    2730:	71 05       	cpc	r23, r1
    2732:	21 f0       	breq	.+8      	; 0x273c <malloc+0x92>
    2734:	fb 01       	movw	r30, r22
    2736:	93 83       	std	Z+3, r25	; 0x03
    2738:	82 83       	std	Z+2, r24	; 0x02
    273a:	04 c0       	rjmp	.+8      	; 0x2744 <malloc+0x9a>
    273c:	90 93 47 0c 	sts	0x0C47, r25
    2740:	80 93 46 0c 	sts	0x0C46, r24
    2744:	fe 01       	movw	r30, r28
    2746:	32 96       	adiw	r30, 0x02	; 2
    2748:	44 c0       	rjmp	.+136    	; 0x27d2 <malloc+0x128>
    274a:	fe 01       	movw	r30, r28
    274c:	e2 0f       	add	r30, r18
    274e:	f3 1f       	adc	r31, r19
    2750:	81 93       	st	Z+, r24
    2752:	91 93       	st	Z+, r25
    2754:	22 50       	subi	r18, 0x02	; 2
    2756:	31 09       	sbc	r19, r1
    2758:	39 83       	std	Y+1, r19	; 0x01
    275a:	28 83       	st	Y, r18
    275c:	3a c0       	rjmp	.+116    	; 0x27d2 <malloc+0x128>
    275e:	20 91 44 0c 	lds	r18, 0x0C44
    2762:	30 91 45 0c 	lds	r19, 0x0C45
    2766:	23 2b       	or	r18, r19
    2768:	41 f4       	brne	.+16     	; 0x277a <malloc+0xd0>
    276a:	20 91 04 02 	lds	r18, 0x0204
    276e:	30 91 05 02 	lds	r19, 0x0205
    2772:	30 93 45 0c 	sts	0x0C45, r19
    2776:	20 93 44 0c 	sts	0x0C44, r18
    277a:	20 91 02 02 	lds	r18, 0x0202
    277e:	30 91 03 02 	lds	r19, 0x0203
    2782:	21 15       	cp	r18, r1
    2784:	31 05       	cpc	r19, r1
    2786:	41 f4       	brne	.+16     	; 0x2798 <malloc+0xee>
    2788:	2d b7       	in	r18, 0x3d	; 61
    278a:	3e b7       	in	r19, 0x3e	; 62
    278c:	40 91 06 02 	lds	r20, 0x0206
    2790:	50 91 07 02 	lds	r21, 0x0207
    2794:	24 1b       	sub	r18, r20
    2796:	35 0b       	sbc	r19, r21
    2798:	e0 91 44 0c 	lds	r30, 0x0C44
    279c:	f0 91 45 0c 	lds	r31, 0x0C45
    27a0:	e2 17       	cp	r30, r18
    27a2:	f3 07       	cpc	r31, r19
    27a4:	a0 f4       	brcc	.+40     	; 0x27ce <malloc+0x124>
    27a6:	2e 1b       	sub	r18, r30
    27a8:	3f 0b       	sbc	r19, r31
    27aa:	28 17       	cp	r18, r24
    27ac:	39 07       	cpc	r19, r25
    27ae:	78 f0       	brcs	.+30     	; 0x27ce <malloc+0x124>
    27b0:	ac 01       	movw	r20, r24
    27b2:	4e 5f       	subi	r20, 0xFE	; 254
    27b4:	5f 4f       	sbci	r21, 0xFF	; 255
    27b6:	24 17       	cp	r18, r20
    27b8:	35 07       	cpc	r19, r21
    27ba:	48 f0       	brcs	.+18     	; 0x27ce <malloc+0x124>
    27bc:	4e 0f       	add	r20, r30
    27be:	5f 1f       	adc	r21, r31
    27c0:	50 93 45 0c 	sts	0x0C45, r21
    27c4:	40 93 44 0c 	sts	0x0C44, r20
    27c8:	81 93       	st	Z+, r24
    27ca:	91 93       	st	Z+, r25
    27cc:	02 c0       	rjmp	.+4      	; 0x27d2 <malloc+0x128>
    27ce:	e0 e0       	ldi	r30, 0x00	; 0
    27d0:	f0 e0       	ldi	r31, 0x00	; 0
    27d2:	cf 01       	movw	r24, r30
    27d4:	df 91       	pop	r29
    27d6:	cf 91       	pop	r28
    27d8:	08 95       	ret

000027da <free>:
    27da:	cf 93       	push	r28
    27dc:	df 93       	push	r29
    27de:	00 97       	sbiw	r24, 0x00	; 0
    27e0:	09 f4       	brne	.+2      	; 0x27e4 <free+0xa>
    27e2:	87 c0       	rjmp	.+270    	; 0x28f2 <free+0x118>
    27e4:	fc 01       	movw	r30, r24
    27e6:	32 97       	sbiw	r30, 0x02	; 2
    27e8:	13 82       	std	Z+3, r1	; 0x03
    27ea:	12 82       	std	Z+2, r1	; 0x02
    27ec:	c0 91 46 0c 	lds	r28, 0x0C46
    27f0:	d0 91 47 0c 	lds	r29, 0x0C47
    27f4:	20 97       	sbiw	r28, 0x00	; 0
    27f6:	81 f4       	brne	.+32     	; 0x2818 <free+0x3e>
    27f8:	20 81       	ld	r18, Z
    27fa:	31 81       	ldd	r19, Z+1	; 0x01
    27fc:	28 0f       	add	r18, r24
    27fe:	39 1f       	adc	r19, r25
    2800:	80 91 44 0c 	lds	r24, 0x0C44
    2804:	90 91 45 0c 	lds	r25, 0x0C45
    2808:	82 17       	cp	r24, r18
    280a:	93 07       	cpc	r25, r19
    280c:	79 f5       	brne	.+94     	; 0x286c <free+0x92>
    280e:	f0 93 45 0c 	sts	0x0C45, r31
    2812:	e0 93 44 0c 	sts	0x0C44, r30
    2816:	6d c0       	rjmp	.+218    	; 0x28f2 <free+0x118>
    2818:	de 01       	movw	r26, r28
    281a:	20 e0       	ldi	r18, 0x00	; 0
    281c:	30 e0       	ldi	r19, 0x00	; 0
    281e:	ae 17       	cp	r26, r30
    2820:	bf 07       	cpc	r27, r31
    2822:	50 f4       	brcc	.+20     	; 0x2838 <free+0x5e>
    2824:	12 96       	adiw	r26, 0x02	; 2
    2826:	4d 91       	ld	r20, X+
    2828:	5c 91       	ld	r21, X
    282a:	13 97       	sbiw	r26, 0x03	; 3
    282c:	9d 01       	movw	r18, r26
    282e:	41 15       	cp	r20, r1
    2830:	51 05       	cpc	r21, r1
    2832:	09 f1       	breq	.+66     	; 0x2876 <free+0x9c>
    2834:	da 01       	movw	r26, r20
    2836:	f3 cf       	rjmp	.-26     	; 0x281e <free+0x44>
    2838:	b3 83       	std	Z+3, r27	; 0x03
    283a:	a2 83       	std	Z+2, r26	; 0x02
    283c:	40 81       	ld	r20, Z
    283e:	51 81       	ldd	r21, Z+1	; 0x01
    2840:	84 0f       	add	r24, r20
    2842:	95 1f       	adc	r25, r21
    2844:	8a 17       	cp	r24, r26
    2846:	9b 07       	cpc	r25, r27
    2848:	71 f4       	brne	.+28     	; 0x2866 <free+0x8c>
    284a:	8d 91       	ld	r24, X+
    284c:	9c 91       	ld	r25, X
    284e:	11 97       	sbiw	r26, 0x01	; 1
    2850:	84 0f       	add	r24, r20
    2852:	95 1f       	adc	r25, r21
    2854:	02 96       	adiw	r24, 0x02	; 2
    2856:	91 83       	std	Z+1, r25	; 0x01
    2858:	80 83       	st	Z, r24
    285a:	12 96       	adiw	r26, 0x02	; 2
    285c:	8d 91       	ld	r24, X+
    285e:	9c 91       	ld	r25, X
    2860:	13 97       	sbiw	r26, 0x03	; 3
    2862:	93 83       	std	Z+3, r25	; 0x03
    2864:	82 83       	std	Z+2, r24	; 0x02
    2866:	21 15       	cp	r18, r1
    2868:	31 05       	cpc	r19, r1
    286a:	29 f4       	brne	.+10     	; 0x2876 <free+0x9c>
    286c:	f0 93 47 0c 	sts	0x0C47, r31
    2870:	e0 93 46 0c 	sts	0x0C46, r30
    2874:	3e c0       	rjmp	.+124    	; 0x28f2 <free+0x118>
    2876:	d9 01       	movw	r26, r18
    2878:	13 96       	adiw	r26, 0x03	; 3
    287a:	fc 93       	st	X, r31
    287c:	ee 93       	st	-X, r30
    287e:	12 97       	sbiw	r26, 0x02	; 2
    2880:	4d 91       	ld	r20, X+
    2882:	5d 91       	ld	r21, X+
    2884:	a4 0f       	add	r26, r20
    2886:	b5 1f       	adc	r27, r21
    2888:	ea 17       	cp	r30, r26
    288a:	fb 07       	cpc	r31, r27
    288c:	79 f4       	brne	.+30     	; 0x28ac <free+0xd2>
    288e:	80 81       	ld	r24, Z
    2890:	91 81       	ldd	r25, Z+1	; 0x01
    2892:	84 0f       	add	r24, r20
    2894:	95 1f       	adc	r25, r21
    2896:	02 96       	adiw	r24, 0x02	; 2
    2898:	d9 01       	movw	r26, r18
    289a:	11 96       	adiw	r26, 0x01	; 1
    289c:	9c 93       	st	X, r25
    289e:	8e 93       	st	-X, r24
    28a0:	82 81       	ldd	r24, Z+2	; 0x02
    28a2:	93 81       	ldd	r25, Z+3	; 0x03
    28a4:	13 96       	adiw	r26, 0x03	; 3
    28a6:	9c 93       	st	X, r25
    28a8:	8e 93       	st	-X, r24
    28aa:	12 97       	sbiw	r26, 0x02	; 2
    28ac:	e0 e0       	ldi	r30, 0x00	; 0
    28ae:	f0 e0       	ldi	r31, 0x00	; 0
    28b0:	8a 81       	ldd	r24, Y+2	; 0x02
    28b2:	9b 81       	ldd	r25, Y+3	; 0x03
    28b4:	00 97       	sbiw	r24, 0x00	; 0
    28b6:	19 f0       	breq	.+6      	; 0x28be <free+0xe4>
    28b8:	fe 01       	movw	r30, r28
    28ba:	ec 01       	movw	r28, r24
    28bc:	f9 cf       	rjmp	.-14     	; 0x28b0 <free+0xd6>
    28be:	ce 01       	movw	r24, r28
    28c0:	02 96       	adiw	r24, 0x02	; 2
    28c2:	28 81       	ld	r18, Y
    28c4:	39 81       	ldd	r19, Y+1	; 0x01
    28c6:	82 0f       	add	r24, r18
    28c8:	93 1f       	adc	r25, r19
    28ca:	20 91 44 0c 	lds	r18, 0x0C44
    28ce:	30 91 45 0c 	lds	r19, 0x0C45
    28d2:	28 17       	cp	r18, r24
    28d4:	39 07       	cpc	r19, r25
    28d6:	69 f4       	brne	.+26     	; 0x28f2 <free+0x118>
    28d8:	30 97       	sbiw	r30, 0x00	; 0
    28da:	29 f4       	brne	.+10     	; 0x28e6 <free+0x10c>
    28dc:	10 92 47 0c 	sts	0x0C47, r1
    28e0:	10 92 46 0c 	sts	0x0C46, r1
    28e4:	02 c0       	rjmp	.+4      	; 0x28ea <free+0x110>
    28e6:	13 82       	std	Z+3, r1	; 0x03
    28e8:	12 82       	std	Z+2, r1	; 0x02
    28ea:	d0 93 45 0c 	sts	0x0C45, r29
    28ee:	c0 93 44 0c 	sts	0x0C44, r28
    28f2:	df 91       	pop	r29
    28f4:	cf 91       	pop	r28
    28f6:	08 95       	ret

000028f8 <strnlen_P>:
    28f8:	fc 01       	movw	r30, r24
    28fa:	05 90       	lpm	r0, Z+
    28fc:	61 50       	subi	r22, 0x01	; 1
    28fe:	70 40       	sbci	r23, 0x00	; 0
    2900:	01 10       	cpse	r0, r1
    2902:	d8 f7       	brcc	.-10     	; 0x28fa <strnlen_P+0x2>
    2904:	80 95       	com	r24
    2906:	90 95       	com	r25
    2908:	8e 0f       	add	r24, r30
    290a:	9f 1f       	adc	r25, r31
    290c:	08 95       	ret

0000290e <memset>:
    290e:	dc 01       	movw	r26, r24
    2910:	01 c0       	rjmp	.+2      	; 0x2914 <memset+0x6>
    2912:	6d 93       	st	X+, r22
    2914:	41 50       	subi	r20, 0x01	; 1
    2916:	50 40       	sbci	r21, 0x00	; 0
    2918:	e0 f7       	brcc	.-8      	; 0x2912 <memset+0x4>
    291a:	08 95       	ret

0000291c <strnlen>:
    291c:	fc 01       	movw	r30, r24
    291e:	61 50       	subi	r22, 0x01	; 1
    2920:	70 40       	sbci	r23, 0x00	; 0
    2922:	01 90       	ld	r0, Z+
    2924:	01 10       	cpse	r0, r1
    2926:	d8 f7       	brcc	.-10     	; 0x291e <strnlen+0x2>
    2928:	80 95       	com	r24
    292a:	90 95       	com	r25
    292c:	8e 0f       	add	r24, r30
    292e:	9f 1f       	adc	r25, r31
    2930:	08 95       	ret

00002932 <fputc>:
    2932:	0f 93       	push	r16
    2934:	1f 93       	push	r17
    2936:	cf 93       	push	r28
    2938:	df 93       	push	r29
    293a:	18 2f       	mov	r17, r24
    293c:	09 2f       	mov	r16, r25
    293e:	eb 01       	movw	r28, r22
    2940:	8b 81       	ldd	r24, Y+3	; 0x03
    2942:	81 fd       	sbrc	r24, 1
    2944:	03 c0       	rjmp	.+6      	; 0x294c <fputc+0x1a>
    2946:	8f ef       	ldi	r24, 0xFF	; 255
    2948:	9f ef       	ldi	r25, 0xFF	; 255
    294a:	20 c0       	rjmp	.+64     	; 0x298c <fputc+0x5a>
    294c:	82 ff       	sbrs	r24, 2
    294e:	10 c0       	rjmp	.+32     	; 0x2970 <fputc+0x3e>
    2950:	4e 81       	ldd	r20, Y+6	; 0x06
    2952:	5f 81       	ldd	r21, Y+7	; 0x07
    2954:	2c 81       	ldd	r18, Y+4	; 0x04
    2956:	3d 81       	ldd	r19, Y+5	; 0x05
    2958:	42 17       	cp	r20, r18
    295a:	53 07       	cpc	r21, r19
    295c:	7c f4       	brge	.+30     	; 0x297c <fputc+0x4a>
    295e:	e8 81       	ld	r30, Y
    2960:	f9 81       	ldd	r31, Y+1	; 0x01
    2962:	9f 01       	movw	r18, r30
    2964:	2f 5f       	subi	r18, 0xFF	; 255
    2966:	3f 4f       	sbci	r19, 0xFF	; 255
    2968:	39 83       	std	Y+1, r19	; 0x01
    296a:	28 83       	st	Y, r18
    296c:	10 83       	st	Z, r17
    296e:	06 c0       	rjmp	.+12     	; 0x297c <fputc+0x4a>
    2970:	e8 85       	ldd	r30, Y+8	; 0x08
    2972:	f9 85       	ldd	r31, Y+9	; 0x09
    2974:	81 2f       	mov	r24, r17
    2976:	19 95       	eicall
    2978:	89 2b       	or	r24, r25
    297a:	29 f7       	brne	.-54     	; 0x2946 <fputc+0x14>
    297c:	2e 81       	ldd	r18, Y+6	; 0x06
    297e:	3f 81       	ldd	r19, Y+7	; 0x07
    2980:	2f 5f       	subi	r18, 0xFF	; 255
    2982:	3f 4f       	sbci	r19, 0xFF	; 255
    2984:	3f 83       	std	Y+7, r19	; 0x07
    2986:	2e 83       	std	Y+6, r18	; 0x06
    2988:	81 2f       	mov	r24, r17
    298a:	90 2f       	mov	r25, r16
    298c:	df 91       	pop	r29
    298e:	cf 91       	pop	r28
    2990:	1f 91       	pop	r17
    2992:	0f 91       	pop	r16
    2994:	08 95       	ret

00002996 <__ultoa_invert>:
    2996:	fa 01       	movw	r30, r20
    2998:	aa 27       	eor	r26, r26
    299a:	28 30       	cpi	r18, 0x08	; 8
    299c:	51 f1       	breq	.+84     	; 0x29f2 <__ultoa_invert+0x5c>
    299e:	20 31       	cpi	r18, 0x10	; 16
    29a0:	81 f1       	breq	.+96     	; 0x2a02 <__ultoa_invert+0x6c>
    29a2:	e8 94       	clt
    29a4:	6f 93       	push	r22
    29a6:	6e 7f       	andi	r22, 0xFE	; 254
    29a8:	6e 5f       	subi	r22, 0xFE	; 254
    29aa:	7f 4f       	sbci	r23, 0xFF	; 255
    29ac:	8f 4f       	sbci	r24, 0xFF	; 255
    29ae:	9f 4f       	sbci	r25, 0xFF	; 255
    29b0:	af 4f       	sbci	r26, 0xFF	; 255
    29b2:	b1 e0       	ldi	r27, 0x01	; 1
    29b4:	3e d0       	rcall	.+124    	; 0x2a32 <__ultoa_invert+0x9c>
    29b6:	b4 e0       	ldi	r27, 0x04	; 4
    29b8:	3c d0       	rcall	.+120    	; 0x2a32 <__ultoa_invert+0x9c>
    29ba:	67 0f       	add	r22, r23
    29bc:	78 1f       	adc	r23, r24
    29be:	89 1f       	adc	r24, r25
    29c0:	9a 1f       	adc	r25, r26
    29c2:	a1 1d       	adc	r26, r1
    29c4:	68 0f       	add	r22, r24
    29c6:	79 1f       	adc	r23, r25
    29c8:	8a 1f       	adc	r24, r26
    29ca:	91 1d       	adc	r25, r1
    29cc:	a1 1d       	adc	r26, r1
    29ce:	6a 0f       	add	r22, r26
    29d0:	71 1d       	adc	r23, r1
    29d2:	81 1d       	adc	r24, r1
    29d4:	91 1d       	adc	r25, r1
    29d6:	a1 1d       	adc	r26, r1
    29d8:	20 d0       	rcall	.+64     	; 0x2a1a <__ultoa_invert+0x84>
    29da:	09 f4       	brne	.+2      	; 0x29de <__ultoa_invert+0x48>
    29dc:	68 94       	set
    29de:	3f 91       	pop	r19
    29e0:	2a e0       	ldi	r18, 0x0A	; 10
    29e2:	26 9f       	mul	r18, r22
    29e4:	11 24       	eor	r1, r1
    29e6:	30 19       	sub	r19, r0
    29e8:	30 5d       	subi	r19, 0xD0	; 208
    29ea:	31 93       	st	Z+, r19
    29ec:	de f6       	brtc	.-74     	; 0x29a4 <__ultoa_invert+0xe>
    29ee:	cf 01       	movw	r24, r30
    29f0:	08 95       	ret
    29f2:	46 2f       	mov	r20, r22
    29f4:	47 70       	andi	r20, 0x07	; 7
    29f6:	40 5d       	subi	r20, 0xD0	; 208
    29f8:	41 93       	st	Z+, r20
    29fa:	b3 e0       	ldi	r27, 0x03	; 3
    29fc:	0f d0       	rcall	.+30     	; 0x2a1c <__ultoa_invert+0x86>
    29fe:	c9 f7       	brne	.-14     	; 0x29f2 <__ultoa_invert+0x5c>
    2a00:	f6 cf       	rjmp	.-20     	; 0x29ee <__ultoa_invert+0x58>
    2a02:	46 2f       	mov	r20, r22
    2a04:	4f 70       	andi	r20, 0x0F	; 15
    2a06:	40 5d       	subi	r20, 0xD0	; 208
    2a08:	4a 33       	cpi	r20, 0x3A	; 58
    2a0a:	18 f0       	brcs	.+6      	; 0x2a12 <__ultoa_invert+0x7c>
    2a0c:	49 5d       	subi	r20, 0xD9	; 217
    2a0e:	31 fd       	sbrc	r19, 1
    2a10:	40 52       	subi	r20, 0x20	; 32
    2a12:	41 93       	st	Z+, r20
    2a14:	02 d0       	rcall	.+4      	; 0x2a1a <__ultoa_invert+0x84>
    2a16:	a9 f7       	brne	.-22     	; 0x2a02 <__ultoa_invert+0x6c>
    2a18:	ea cf       	rjmp	.-44     	; 0x29ee <__ultoa_invert+0x58>
    2a1a:	b4 e0       	ldi	r27, 0x04	; 4
    2a1c:	a6 95       	lsr	r26
    2a1e:	97 95       	ror	r25
    2a20:	87 95       	ror	r24
    2a22:	77 95       	ror	r23
    2a24:	67 95       	ror	r22
    2a26:	ba 95       	dec	r27
    2a28:	c9 f7       	brne	.-14     	; 0x2a1c <__ultoa_invert+0x86>
    2a2a:	00 97       	sbiw	r24, 0x00	; 0
    2a2c:	61 05       	cpc	r22, r1
    2a2e:	71 05       	cpc	r23, r1
    2a30:	08 95       	ret
    2a32:	9b 01       	movw	r18, r22
    2a34:	ac 01       	movw	r20, r24
    2a36:	0a 2e       	mov	r0, r26
    2a38:	06 94       	lsr	r0
    2a3a:	57 95       	ror	r21
    2a3c:	47 95       	ror	r20
    2a3e:	37 95       	ror	r19
    2a40:	27 95       	ror	r18
    2a42:	ba 95       	dec	r27
    2a44:	c9 f7       	brne	.-14     	; 0x2a38 <__ultoa_invert+0xa2>
    2a46:	62 0f       	add	r22, r18
    2a48:	73 1f       	adc	r23, r19
    2a4a:	84 1f       	adc	r24, r20
    2a4c:	95 1f       	adc	r25, r21
    2a4e:	a0 1d       	adc	r26, r0
    2a50:	08 95       	ret

00002a52 <_exit>:
    2a52:	f8 94       	cli

00002a54 <__stop_program>:
    2a54:	ff cf       	rjmp	.-2      	; 0x2a54 <__stop_program>
